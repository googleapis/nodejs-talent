// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.talent = (function() {
    
                /**
                 * Namespace talent.
                 * @memberof google.cloud
                 * @namespace
                 */
                var talent = {};
    
                talent.v4beta1 = (function() {
    
                    /**
                     * Namespace v4beta1.
                     * @memberof google.cloud.talent
                     * @namespace
                     */
                    var v4beta1 = {};
    
                    v4beta1.ApplicationService = (function() {
    
                        /**
                         * Constructs a new ApplicationService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an ApplicationService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ApplicationService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ApplicationService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ApplicationService;
    
                        /**
                         * Creates new ApplicationService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ApplicationService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ApplicationService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ApplicationService#createApplication}.
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @typedef CreateApplicationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Application} [response] Application
                         */
    
                        /**
                         * Calls CreateApplication.
                         * @function createApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest} request CreateApplicationRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ApplicationService.CreateApplicationCallback} callback Node-style callback called with the error, if any, and Application
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ApplicationService.prototype.createApplication = function createApplication(request, callback) {
                            return this.rpcCall(createApplication, $root.google.cloud.talent.v4beta1.CreateApplicationRequest, $root.google.cloud.talent.v4beta1.Application, request, callback);
                        }, "name", { value: "CreateApplication" });
    
                        /**
                         * Calls CreateApplication.
                         * @function createApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest} request CreateApplicationRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Application>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ApplicationService#getApplication}.
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @typedef GetApplicationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Application} [response] Application
                         */
    
                        /**
                         * Calls GetApplication.
                         * @function getApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest} request GetApplicationRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ApplicationService.GetApplicationCallback} callback Node-style callback called with the error, if any, and Application
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ApplicationService.prototype.getApplication = function getApplication(request, callback) {
                            return this.rpcCall(getApplication, $root.google.cloud.talent.v4beta1.GetApplicationRequest, $root.google.cloud.talent.v4beta1.Application, request, callback);
                        }, "name", { value: "GetApplication" });
    
                        /**
                         * Calls GetApplication.
                         * @function getApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest} request GetApplicationRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Application>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ApplicationService#updateApplication}.
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @typedef UpdateApplicationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Application} [response] Application
                         */
    
                        /**
                         * Calls UpdateApplication.
                         * @function updateApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest} request UpdateApplicationRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ApplicationService.UpdateApplicationCallback} callback Node-style callback called with the error, if any, and Application
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ApplicationService.prototype.updateApplication = function updateApplication(request, callback) {
                            return this.rpcCall(updateApplication, $root.google.cloud.talent.v4beta1.UpdateApplicationRequest, $root.google.cloud.talent.v4beta1.Application, request, callback);
                        }, "name", { value: "UpdateApplication" });
    
                        /**
                         * Calls UpdateApplication.
                         * @function updateApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest} request UpdateApplicationRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Application>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ApplicationService#deleteApplication}.
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @typedef DeleteApplicationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteApplication.
                         * @function deleteApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest} request DeleteApplicationRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ApplicationService.DeleteApplicationCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ApplicationService.prototype.deleteApplication = function deleteApplication(request, callback) {
                            return this.rpcCall(deleteApplication, $root.google.cloud.talent.v4beta1.DeleteApplicationRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteApplication" });
    
                        /**
                         * Calls DeleteApplication.
                         * @function deleteApplication
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest} request DeleteApplicationRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ApplicationService#listApplications}.
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @typedef ListApplicationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ListApplicationsResponse} [response] ListApplicationsResponse
                         */
    
                        /**
                         * Calls ListApplications.
                         * @function listApplications
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest} request ListApplicationsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ApplicationService.ListApplicationsCallback} callback Node-style callback called with the error, if any, and ListApplicationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ApplicationService.prototype.listApplications = function listApplications(request, callback) {
                            return this.rpcCall(listApplications, $root.google.cloud.talent.v4beta1.ListApplicationsRequest, $root.google.cloud.talent.v4beta1.ListApplicationsResponse, request, callback);
                        }, "name", { value: "ListApplications" });
    
                        /**
                         * Calls ListApplications.
                         * @function listApplications
                         * @memberof google.cloud.talent.v4beta1.ApplicationService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest} request ListApplicationsRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ListApplicationsResponse>} Promise
                         * @variation 2
                         */
    
                        return ApplicationService;
                    })();
    
                    v4beta1.CreateApplicationRequest = (function() {
    
                        /**
                         * Properties of a CreateApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateApplicationRequest
                         * @property {string|null} [parent] CreateApplicationRequest parent
                         * @property {google.cloud.talent.v4beta1.IApplication|null} [application] CreateApplicationRequest application
                         */
    
                        /**
                         * Constructs a new CreateApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateApplicationRequest.
                         * @implements ICreateApplicationRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest=} [properties] Properties to set
                         */
                        function CreateApplicationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateApplicationRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @instance
                         */
                        CreateApplicationRequest.prototype.parent = "";
    
                        /**
                         * CreateApplicationRequest application.
                         * @member {google.cloud.talent.v4beta1.IApplication|null|undefined} application
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @instance
                         */
                        CreateApplicationRequest.prototype.application = null;
    
                        /**
                         * Creates a new CreateApplicationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateApplicationRequest} CreateApplicationRequest instance
                         */
                        CreateApplicationRequest.create = function create(properties) {
                            return new CreateApplicationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateApplicationRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateApplicationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest} message CreateApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateApplicationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.application != null && message.hasOwnProperty("application"))
                                $root.google.cloud.talent.v4beta1.Application.encode(message.application, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateApplicationRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateApplicationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateApplicationRequest} message CreateApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateApplicationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateApplicationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateApplicationRequest} CreateApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateApplicationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateApplicationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.application = $root.google.cloud.talent.v4beta1.Application.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateApplicationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateApplicationRequest} CreateApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateApplicationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateApplicationRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateApplicationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.application != null && message.hasOwnProperty("application")) {
                                var error = $root.google.cloud.talent.v4beta1.Application.verify(message.application);
                                if (error)
                                    return "application." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateApplicationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateApplicationRequest} CreateApplicationRequest
                         */
                        CreateApplicationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateApplicationRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateApplicationRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.application != null) {
                                if (typeof object.application !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateApplicationRequest.application: object expected");
                                message.application = $root.google.cloud.talent.v4beta1.Application.fromObject(object.application);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateApplicationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateApplicationRequest} message CreateApplicationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateApplicationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.application = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.application != null && message.hasOwnProperty("application"))
                                object.application = $root.google.cloud.talent.v4beta1.Application.toObject(message.application, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateApplicationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateApplicationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateApplicationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateApplicationRequest;
                    })();
    
                    v4beta1.GetApplicationRequest = (function() {
    
                        /**
                         * Properties of a GetApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IGetApplicationRequest
                         * @property {string|null} [name] GetApplicationRequest name
                         */
    
                        /**
                         * Constructs a new GetApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a GetApplicationRequest.
                         * @implements IGetApplicationRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest=} [properties] Properties to set
                         */
                        function GetApplicationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetApplicationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @instance
                         */
                        GetApplicationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetApplicationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.GetApplicationRequest} GetApplicationRequest instance
                         */
                        GetApplicationRequest.create = function create(properties) {
                            return new GetApplicationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetApplicationRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.GetApplicationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest} message GetApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetApplicationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetApplicationRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.GetApplicationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetApplicationRequest} message GetApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetApplicationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetApplicationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.GetApplicationRequest} GetApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetApplicationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.GetApplicationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetApplicationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.GetApplicationRequest} GetApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetApplicationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetApplicationRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetApplicationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetApplicationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.GetApplicationRequest} GetApplicationRequest
                         */
                        GetApplicationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.GetApplicationRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.GetApplicationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetApplicationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.GetApplicationRequest} message GetApplicationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetApplicationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetApplicationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.GetApplicationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetApplicationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetApplicationRequest;
                    })();
    
                    v4beta1.UpdateApplicationRequest = (function() {
    
                        /**
                         * Properties of an UpdateApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IUpdateApplicationRequest
                         * @property {google.cloud.talent.v4beta1.IApplication|null} [application] UpdateApplicationRequest application
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateApplicationRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an UpdateApplicationRequest.
                         * @implements IUpdateApplicationRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest=} [properties] Properties to set
                         */
                        function UpdateApplicationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateApplicationRequest application.
                         * @member {google.cloud.talent.v4beta1.IApplication|null|undefined} application
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @instance
                         */
                        UpdateApplicationRequest.prototype.application = null;
    
                        /**
                         * UpdateApplicationRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @instance
                         */
                        UpdateApplicationRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateApplicationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.UpdateApplicationRequest} UpdateApplicationRequest instance
                         */
                        UpdateApplicationRequest.create = function create(properties) {
                            return new UpdateApplicationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateApplicationRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateApplicationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest} message UpdateApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateApplicationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.application != null && message.hasOwnProperty("application"))
                                $root.google.cloud.talent.v4beta1.Application.encode(message.application, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateApplicationRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateApplicationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateApplicationRequest} message UpdateApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateApplicationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateApplicationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.UpdateApplicationRequest} UpdateApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateApplicationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.UpdateApplicationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.application = $root.google.cloud.talent.v4beta1.Application.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateApplicationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.UpdateApplicationRequest} UpdateApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateApplicationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateApplicationRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateApplicationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.application != null && message.hasOwnProperty("application")) {
                                var error = $root.google.cloud.talent.v4beta1.Application.verify(message.application);
                                if (error)
                                    return "application." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateApplicationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.UpdateApplicationRequest} UpdateApplicationRequest
                         */
                        UpdateApplicationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.UpdateApplicationRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.UpdateApplicationRequest();
                            if (object.application != null) {
                                if (typeof object.application !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateApplicationRequest.application: object expected");
                                message.application = $root.google.cloud.talent.v4beta1.Application.fromObject(object.application);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateApplicationRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateApplicationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.UpdateApplicationRequest} message UpdateApplicationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateApplicationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.application = null;
                                object.updateMask = null;
                            }
                            if (message.application != null && message.hasOwnProperty("application"))
                                object.application = $root.google.cloud.talent.v4beta1.Application.toObject(message.application, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateApplicationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.UpdateApplicationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateApplicationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateApplicationRequest;
                    })();
    
                    v4beta1.DeleteApplicationRequest = (function() {
    
                        /**
                         * Properties of a DeleteApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeleteApplicationRequest
                         * @property {string|null} [name] DeleteApplicationRequest name
                         */
    
                        /**
                         * Constructs a new DeleteApplicationRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeleteApplicationRequest.
                         * @implements IDeleteApplicationRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest=} [properties] Properties to set
                         */
                        function DeleteApplicationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteApplicationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @instance
                         */
                        DeleteApplicationRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteApplicationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeleteApplicationRequest} DeleteApplicationRequest instance
                         */
                        DeleteApplicationRequest.create = function create(properties) {
                            return new DeleteApplicationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteApplicationRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteApplicationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest} message DeleteApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteApplicationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteApplicationRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteApplicationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteApplicationRequest} message DeleteApplicationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteApplicationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteApplicationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeleteApplicationRequest} DeleteApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteApplicationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeleteApplicationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteApplicationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeleteApplicationRequest} DeleteApplicationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteApplicationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteApplicationRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteApplicationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteApplicationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeleteApplicationRequest} DeleteApplicationRequest
                         */
                        DeleteApplicationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeleteApplicationRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeleteApplicationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteApplicationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeleteApplicationRequest} message DeleteApplicationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteApplicationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteApplicationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeleteApplicationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteApplicationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteApplicationRequest;
                    })();
    
                    v4beta1.ListApplicationsRequest = (function() {
    
                        /**
                         * Properties of a ListApplicationsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListApplicationsRequest
                         * @property {string|null} [parent] ListApplicationsRequest parent
                         * @property {string|null} [pageToken] ListApplicationsRequest pageToken
                         * @property {number|null} [pageSize] ListApplicationsRequest pageSize
                         */
    
                        /**
                         * Constructs a new ListApplicationsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListApplicationsRequest.
                         * @implements IListApplicationsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest=} [properties] Properties to set
                         */
                        function ListApplicationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListApplicationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @instance
                         */
                        ListApplicationsRequest.prototype.parent = "";
    
                        /**
                         * ListApplicationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @instance
                         */
                        ListApplicationsRequest.prototype.pageToken = "";
    
                        /**
                         * ListApplicationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @instance
                         */
                        ListApplicationsRequest.prototype.pageSize = 0;
    
                        /**
                         * Creates a new ListApplicationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsRequest} ListApplicationsRequest instance
                         */
                        ListApplicationsRequest.create = function create(properties) {
                            return new ListApplicationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListApplicationsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.ListApplicationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest} message ListApplicationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListApplicationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListApplicationsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListApplicationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsRequest} message ListApplicationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListApplicationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListApplicationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsRequest} ListApplicationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListApplicationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListApplicationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageToken = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListApplicationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsRequest} ListApplicationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListApplicationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListApplicationsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListApplicationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListApplicationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsRequest} ListApplicationsRequest
                         */
                        ListApplicationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListApplicationsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListApplicationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListApplicationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListApplicationsRequest} message ListApplicationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListApplicationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageToken = "";
                                object.pageSize = 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            return object;
                        };
    
                        /**
                         * Converts this ListApplicationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListApplicationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListApplicationsRequest;
                    })();
    
                    v4beta1.ListApplicationsResponse = (function() {
    
                        /**
                         * Properties of a ListApplicationsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListApplicationsResponse
                         * @property {Array.<google.cloud.talent.v4beta1.IApplication>|null} [applications] ListApplicationsResponse applications
                         * @property {string|null} [nextPageToken] ListApplicationsResponse nextPageToken
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] ListApplicationsResponse metadata
                         */
    
                        /**
                         * Constructs a new ListApplicationsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListApplicationsResponse.
                         * @implements IListApplicationsResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListApplicationsResponse=} [properties] Properties to set
                         */
                        function ListApplicationsResponse(properties) {
                            this.applications = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListApplicationsResponse applications.
                         * @member {Array.<google.cloud.talent.v4beta1.IApplication>} applications
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @instance
                         */
                        ListApplicationsResponse.prototype.applications = $util.emptyArray;
    
                        /**
                         * ListApplicationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @instance
                         */
                        ListApplicationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListApplicationsResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @instance
                         */
                        ListApplicationsResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new ListApplicationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsResponse} ListApplicationsResponse instance
                         */
                        ListApplicationsResponse.create = function create(properties) {
                            return new ListApplicationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListApplicationsResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.ListApplicationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsResponse} message ListApplicationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListApplicationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.applications != null && message.applications.length)
                                for (var i = 0; i < message.applications.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Application.encode(message.applications[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListApplicationsResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListApplicationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListApplicationsResponse} message ListApplicationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListApplicationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListApplicationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsResponse} ListApplicationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListApplicationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListApplicationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.applications && message.applications.length))
                                        message.applications = [];
                                    message.applications.push($root.google.cloud.talent.v4beta1.Application.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListApplicationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsResponse} ListApplicationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListApplicationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListApplicationsResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListApplicationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.applications != null && message.hasOwnProperty("applications")) {
                                if (!Array.isArray(message.applications))
                                    return "applications: array expected";
                                for (var i = 0; i < message.applications.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Application.verify(message.applications[i]);
                                    if (error)
                                        return "applications." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListApplicationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListApplicationsResponse} ListApplicationsResponse
                         */
                        ListApplicationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListApplicationsResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListApplicationsResponse();
                            if (object.applications) {
                                if (!Array.isArray(object.applications))
                                    throw TypeError(".google.cloud.talent.v4beta1.ListApplicationsResponse.applications: array expected");
                                message.applications = [];
                                for (var i = 0; i < object.applications.length; ++i) {
                                    if (typeof object.applications[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ListApplicationsResponse.applications: object expected");
                                    message.applications[i] = $root.google.cloud.talent.v4beta1.Application.fromObject(object.applications[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ListApplicationsResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListApplicationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListApplicationsResponse} message ListApplicationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListApplicationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.applications = [];
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.metadata = null;
                            }
                            if (message.applications && message.applications.length) {
                                object.applications = [];
                                for (var j = 0; j < message.applications.length; ++j)
                                    object.applications[j] = $root.google.cloud.talent.v4beta1.Application.toObject(message.applications[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListApplicationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListApplicationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListApplicationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListApplicationsResponse;
                    })();
    
                    v4beta1.Application = (function() {
    
                        /**
                         * Properties of an Application.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IApplication
                         * @property {string|null} [name] Application name
                         * @property {string|null} [externalId] Application externalId
                         * @property {string|null} [profile] Application profile
                         * @property {string|null} [job] Application job
                         * @property {string|null} [company] Application company
                         * @property {google.type.IDate|null} [applicationDate] Application applicationDate
                         * @property {google.cloud.talent.v4beta1.Application.ApplicationStage|null} [stage] Application stage
                         * @property {google.cloud.talent.v4beta1.Application.ApplicationState|null} [state] Application state
                         * @property {Array.<google.cloud.talent.v4beta1.IInterview>|null} [interviews] Application interviews
                         * @property {google.protobuf.IBoolValue|null} [referral] Application referral
                         * @property {google.protobuf.ITimestamp|null} [createTime] Application createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Application updateTime
                         * @property {string|null} [outcomeNotes] Application outcomeNotes
                         * @property {google.cloud.talent.v4beta1.Outcome|null} [outcome] Application outcome
                         * @property {google.protobuf.IBoolValue|null} [isMatch] Application isMatch
                         * @property {string|null} [jobTitleSnippet] Application jobTitleSnippet
                         */
    
                        /**
                         * Constructs a new Application.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an Application.
                         * @implements IApplication
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IApplication=} [properties] Properties to set
                         */
                        function Application(properties) {
                            this.interviews = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Application name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.name = "";
    
                        /**
                         * Application externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.externalId = "";
    
                        /**
                         * Application profile.
                         * @member {string} profile
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.profile = "";
    
                        /**
                         * Application job.
                         * @member {string} job
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.job = "";
    
                        /**
                         * Application company.
                         * @member {string} company
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.company = "";
    
                        /**
                         * Application applicationDate.
                         * @member {google.type.IDate|null|undefined} applicationDate
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.applicationDate = null;
    
                        /**
                         * Application stage.
                         * @member {google.cloud.talent.v4beta1.Application.ApplicationStage} stage
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.stage = 0;
    
                        /**
                         * Application state.
                         * @member {google.cloud.talent.v4beta1.Application.ApplicationState} state
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.state = 0;
    
                        /**
                         * Application interviews.
                         * @member {Array.<google.cloud.talent.v4beta1.IInterview>} interviews
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.interviews = $util.emptyArray;
    
                        /**
                         * Application referral.
                         * @member {google.protobuf.IBoolValue|null|undefined} referral
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.referral = null;
    
                        /**
                         * Application createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.createTime = null;
    
                        /**
                         * Application updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.updateTime = null;
    
                        /**
                         * Application outcomeNotes.
                         * @member {string} outcomeNotes
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.outcomeNotes = "";
    
                        /**
                         * Application outcome.
                         * @member {google.cloud.talent.v4beta1.Outcome} outcome
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.outcome = 0;
    
                        /**
                         * Application isMatch.
                         * @member {google.protobuf.IBoolValue|null|undefined} isMatch
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.isMatch = null;
    
                        /**
                         * Application jobTitleSnippet.
                         * @member {string} jobTitleSnippet
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         */
                        Application.prototype.jobTitleSnippet = "";
    
                        /**
                         * Creates a new Application instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplication=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Application} Application instance
                         */
                        Application.create = function create(properties) {
                            return new Application(properties);
                        };
    
                        /**
                         * Encodes the specified Application message. Does not implicitly {@link google.cloud.talent.v4beta1.Application.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplication} message Application message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Application.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.profile);
                            if (message.job != null && message.hasOwnProperty("job"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.job);
                            if (message.company != null && message.hasOwnProperty("company"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.company);
                            if (message.applicationDate != null && message.hasOwnProperty("applicationDate"))
                                $root.google.type.Date.encode(message.applicationDate, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.stage);
                            if (message.state != null && message.hasOwnProperty("state"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.state);
                            if (message.interviews != null && message.interviews.length)
                                for (var i = 0; i < message.interviews.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Interview.encode(message.interviews[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.referral != null && message.hasOwnProperty("referral"))
                                $root.google.protobuf.BoolValue.encode(message.referral, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                writer.uint32(/* id 21, wireType 2 =*/170).string(message.outcomeNotes);
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.outcome);
                            if (message.isMatch != null && message.hasOwnProperty("isMatch"))
                                $root.google.protobuf.BoolValue.encode(message.isMatch, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                writer.uint32(/* id 29, wireType 2 =*/234).string(message.jobTitleSnippet);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                writer.uint32(/* id 31, wireType 2 =*/250).string(message.externalId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Application message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Application.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplication} message Application message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Application.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Application message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Application} Application
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Application.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Application();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 31:
                                    message.externalId = reader.string();
                                    break;
                                case 2:
                                    message.profile = reader.string();
                                    break;
                                case 4:
                                    message.job = reader.string();
                                    break;
                                case 5:
                                    message.company = reader.string();
                                    break;
                                case 7:
                                    message.applicationDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.stage = reader.int32();
                                    break;
                                case 13:
                                    message.state = reader.int32();
                                    break;
                                case 16:
                                    if (!(message.interviews && message.interviews.length))
                                        message.interviews = [];
                                    message.interviews.push($root.google.cloud.talent.v4beta1.Interview.decode(reader, reader.uint32()));
                                    break;
                                case 18:
                                    message.referral = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 19:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 20:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 21:
                                    message.outcomeNotes = reader.string();
                                    break;
                                case 22:
                                    message.outcome = reader.int32();
                                    break;
                                case 28:
                                    message.isMatch = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 29:
                                    message.jobTitleSnippet = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Application message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Application} Application
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Application.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Application message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Application.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                if (!$util.isString(message.profile))
                                    return "profile: string expected";
                            if (message.job != null && message.hasOwnProperty("job"))
                                if (!$util.isString(message.job))
                                    return "job: string expected";
                            if (message.company != null && message.hasOwnProperty("company"))
                                if (!$util.isString(message.company))
                                    return "company: string expected";
                            if (message.applicationDate != null && message.hasOwnProperty("applicationDate")) {
                                var error = $root.google.type.Date.verify(message.applicationDate);
                                if (error)
                                    return "applicationDate." + error;
                            }
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                switch (message.stage) {
                                default:
                                    return "stage: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.interviews != null && message.hasOwnProperty("interviews")) {
                                if (!Array.isArray(message.interviews))
                                    return "interviews: array expected";
                                for (var i = 0; i < message.interviews.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Interview.verify(message.interviews[i]);
                                    if (error)
                                        return "interviews." + error;
                                }
                            }
                            if (message.referral != null && message.hasOwnProperty("referral")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.referral);
                                if (error)
                                    return "referral." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                if (!$util.isString(message.outcomeNotes))
                                    return "outcomeNotes: string expected";
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                switch (message.outcome) {
                                default:
                                    return "outcome: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.isMatch != null && message.hasOwnProperty("isMatch")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isMatch);
                                if (error)
                                    return "isMatch." + error;
                            }
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                if (!$util.isString(message.jobTitleSnippet))
                                    return "jobTitleSnippet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Application message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Application} Application
                         */
                        Application.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Application)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Application();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            if (object.profile != null)
                                message.profile = String(object.profile);
                            if (object.job != null)
                                message.job = String(object.job);
                            if (object.company != null)
                                message.company = String(object.company);
                            if (object.applicationDate != null) {
                                if (typeof object.applicationDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.applicationDate: object expected");
                                message.applicationDate = $root.google.type.Date.fromObject(object.applicationDate);
                            }
                            switch (object.stage) {
                            case "APPLICATION_STAGE_UNSPECIFIED":
                            case 0:
                                message.stage = 0;
                                break;
                            case "NEW":
                            case 1:
                                message.stage = 1;
                                break;
                            case "SCREEN":
                            case 2:
                                message.stage = 2;
                                break;
                            case "HIRING_MANAGER_REVIEW":
                            case 3:
                                message.stage = 3;
                                break;
                            case "INTERVIEW":
                            case 4:
                                message.stage = 4;
                                break;
                            case "OFFER_EXTENDED":
                            case 5:
                                message.stage = 5;
                                break;
                            case "OFFER_ACCEPTED":
                            case 6:
                                message.stage = 6;
                                break;
                            case "STARTED":
                            case 7:
                                message.stage = 7;
                                break;
                            }
                            switch (object.state) {
                            case "APPLICATION_STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "IN_PROGRESS":
                            case 1:
                                message.state = 1;
                                break;
                            case "CANDIDATE_WITHDREW":
                            case 2:
                                message.state = 2;
                                break;
                            case "EMPLOYER_WITHDREW":
                            case 3:
                                message.state = 3;
                                break;
                            case "COMPLETED":
                            case 4:
                                message.state = 4;
                                break;
                            case "CLOSED":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.interviews) {
                                if (!Array.isArray(object.interviews))
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.interviews: array expected");
                                message.interviews = [];
                                for (var i = 0; i < object.interviews.length; ++i) {
                                    if (typeof object.interviews[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Application.interviews: object expected");
                                    message.interviews[i] = $root.google.cloud.talent.v4beta1.Interview.fromObject(object.interviews[i]);
                                }
                            }
                            if (object.referral != null) {
                                if (typeof object.referral !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.referral: object expected");
                                message.referral = $root.google.protobuf.BoolValue.fromObject(object.referral);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.outcomeNotes != null)
                                message.outcomeNotes = String(object.outcomeNotes);
                            switch (object.outcome) {
                            case "OUTCOME_UNSPECIFIED":
                            case 0:
                                message.outcome = 0;
                                break;
                            case "POSITIVE":
                            case 1:
                                message.outcome = 1;
                                break;
                            case "NEUTRAL":
                            case 2:
                                message.outcome = 2;
                                break;
                            case "NEGATIVE":
                            case 3:
                                message.outcome = 3;
                                break;
                            case "OUTCOME_NOT_AVAILABLE":
                            case 4:
                                message.outcome = 4;
                                break;
                            }
                            if (object.isMatch != null) {
                                if (typeof object.isMatch !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Application.isMatch: object expected");
                                message.isMatch = $root.google.protobuf.BoolValue.fromObject(object.isMatch);
                            }
                            if (object.jobTitleSnippet != null)
                                message.jobTitleSnippet = String(object.jobTitleSnippet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Application message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @static
                         * @param {google.cloud.talent.v4beta1.Application} message Application
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Application.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.interviews = [];
                            if (options.defaults) {
                                object.name = "";
                                object.profile = "";
                                object.job = "";
                                object.company = "";
                                object.applicationDate = null;
                                object.stage = options.enums === String ? "APPLICATION_STAGE_UNSPECIFIED" : 0;
                                object.state = options.enums === String ? "APPLICATION_STATE_UNSPECIFIED" : 0;
                                object.referral = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.outcomeNotes = "";
                                object.outcome = options.enums === String ? "OUTCOME_UNSPECIFIED" : 0;
                                object.isMatch = null;
                                object.jobTitleSnippet = "";
                                object.externalId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                object.profile = message.profile;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = message.job;
                            if (message.company != null && message.hasOwnProperty("company"))
                                object.company = message.company;
                            if (message.applicationDate != null && message.hasOwnProperty("applicationDate"))
                                object.applicationDate = $root.google.type.Date.toObject(message.applicationDate, options);
                            if (message.stage != null && message.hasOwnProperty("stage"))
                                object.stage = options.enums === String ? $root.google.cloud.talent.v4beta1.Application.ApplicationStage[message.stage] : message.stage;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.talent.v4beta1.Application.ApplicationState[message.state] : message.state;
                            if (message.interviews && message.interviews.length) {
                                object.interviews = [];
                                for (var j = 0; j < message.interviews.length; ++j)
                                    object.interviews[j] = $root.google.cloud.talent.v4beta1.Interview.toObject(message.interviews[j], options);
                            }
                            if (message.referral != null && message.hasOwnProperty("referral"))
                                object.referral = $root.google.protobuf.BoolValue.toObject(message.referral, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                object.outcomeNotes = message.outcomeNotes;
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                object.outcome = options.enums === String ? $root.google.cloud.talent.v4beta1.Outcome[message.outcome] : message.outcome;
                            if (message.isMatch != null && message.hasOwnProperty("isMatch"))
                                object.isMatch = $root.google.protobuf.BoolValue.toObject(message.isMatch, options);
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                object.jobTitleSnippet = message.jobTitleSnippet;
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            return object;
                        };
    
                        /**
                         * Converts this Application to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Application
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Application.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * ApplicationState enum.
                         * @name google.cloud.talent.v4beta1.Application.ApplicationState
                         * @enum {string}
                         * @property {number} APPLICATION_STATE_UNSPECIFIED=0 APPLICATION_STATE_UNSPECIFIED value
                         * @property {number} IN_PROGRESS=1 IN_PROGRESS value
                         * @property {number} CANDIDATE_WITHDREW=2 CANDIDATE_WITHDREW value
                         * @property {number} EMPLOYER_WITHDREW=3 EMPLOYER_WITHDREW value
                         * @property {number} COMPLETED=4 COMPLETED value
                         * @property {number} CLOSED=5 CLOSED value
                         */
                        Application.ApplicationState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "APPLICATION_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IN_PROGRESS"] = 1;
                            values[valuesById[2] = "CANDIDATE_WITHDREW"] = 2;
                            values[valuesById[3] = "EMPLOYER_WITHDREW"] = 3;
                            values[valuesById[4] = "COMPLETED"] = 4;
                            values[valuesById[5] = "CLOSED"] = 5;
                            return values;
                        })();
    
                        /**
                         * ApplicationStage enum.
                         * @name google.cloud.talent.v4beta1.Application.ApplicationStage
                         * @enum {string}
                         * @property {number} APPLICATION_STAGE_UNSPECIFIED=0 APPLICATION_STAGE_UNSPECIFIED value
                         * @property {number} NEW=1 NEW value
                         * @property {number} SCREEN=2 SCREEN value
                         * @property {number} HIRING_MANAGER_REVIEW=3 HIRING_MANAGER_REVIEW value
                         * @property {number} INTERVIEW=4 INTERVIEW value
                         * @property {number} OFFER_EXTENDED=5 OFFER_EXTENDED value
                         * @property {number} OFFER_ACCEPTED=6 OFFER_ACCEPTED value
                         * @property {number} STARTED=7 STARTED value
                         */
                        Application.ApplicationStage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "APPLICATION_STAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NEW"] = 1;
                            values[valuesById[2] = "SCREEN"] = 2;
                            values[valuesById[3] = "HIRING_MANAGER_REVIEW"] = 3;
                            values[valuesById[4] = "INTERVIEW"] = 4;
                            values[valuesById[5] = "OFFER_EXTENDED"] = 5;
                            values[valuesById[6] = "OFFER_ACCEPTED"] = 6;
                            values[valuesById[7] = "STARTED"] = 7;
                            return values;
                        })();
    
                        return Application;
                    })();
    
                    v4beta1.TimestampRange = (function() {
    
                        /**
                         * Properties of a TimestampRange.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ITimestampRange
                         * @property {google.protobuf.ITimestamp|null} [startTime] TimestampRange startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] TimestampRange endTime
                         */
    
                        /**
                         * Constructs a new TimestampRange.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a TimestampRange.
                         * @implements ITimestampRange
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ITimestampRange=} [properties] Properties to set
                         */
                        function TimestampRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimestampRange startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @instance
                         */
                        TimestampRange.prototype.startTime = null;
    
                        /**
                         * TimestampRange endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @instance
                         */
                        TimestampRange.prototype.endTime = null;
    
                        /**
                         * Creates a new TimestampRange instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimestampRange=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.TimestampRange} TimestampRange instance
                         */
                        TimestampRange.create = function create(properties) {
                            return new TimestampRange(properties);
                        };
    
                        /**
                         * Encodes the specified TimestampRange message. Does not implicitly {@link google.cloud.talent.v4beta1.TimestampRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimestampRange} message TimestampRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimestampRange message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.TimestampRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimestampRange} message TimestampRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimestampRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.TimestampRange} TimestampRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.TimestampRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimestampRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.TimestampRange} TimestampRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimestampRange message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimestampRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TimestampRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.TimestampRange} TimestampRange
                         */
                        TimestampRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.TimestampRange)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.TimestampRange();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.TimestampRange.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.TimestampRange.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimestampRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @static
                         * @param {google.cloud.talent.v4beta1.TimestampRange} message TimestampRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimestampRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this TimestampRange to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.TimestampRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimestampRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TimestampRange;
                    })();
    
                    v4beta1.Location = (function() {
    
                        /**
                         * Properties of a Location.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ILocation
                         * @property {google.cloud.talent.v4beta1.Location.LocationType|null} [locationType] Location locationType
                         * @property {google.type.IPostalAddress|null} [postalAddress] Location postalAddress
                         * @property {google.type.ILatLng|null} [latLng] Location latLng
                         * @property {number|null} [radiusMiles] Location radiusMiles
                         */
    
                        /**
                         * Constructs a new Location.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Location.
                         * @implements ILocation
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ILocation=} [properties] Properties to set
                         */
                        function Location(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Location locationType.
                         * @member {google.cloud.talent.v4beta1.Location.LocationType} locationType
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @instance
                         */
                        Location.prototype.locationType = 0;
    
                        /**
                         * Location postalAddress.
                         * @member {google.type.IPostalAddress|null|undefined} postalAddress
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @instance
                         */
                        Location.prototype.postalAddress = null;
    
                        /**
                         * Location latLng.
                         * @member {google.type.ILatLng|null|undefined} latLng
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @instance
                         */
                        Location.prototype.latLng = null;
    
                        /**
                         * Location radiusMiles.
                         * @member {number} radiusMiles
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @instance
                         */
                        Location.prototype.radiusMiles = 0;
    
                        /**
                         * Creates a new Location instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocation=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Location} Location instance
                         */
                        Location.create = function create(properties) {
                            return new Location(properties);
                        };
    
                        /**
                         * Encodes the specified Location message. Does not implicitly {@link google.cloud.talent.v4beta1.Location.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocation} message Location message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Location.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.locationType != null && message.hasOwnProperty("locationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.locationType);
                            if (message.postalAddress != null && message.hasOwnProperty("postalAddress"))
                                $root.google.type.PostalAddress.encode(message.postalAddress, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.latLng != null && message.hasOwnProperty("latLng"))
                                $root.google.type.LatLng.encode(message.latLng, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.radiusMiles != null && message.hasOwnProperty("radiusMiles"))
                                writer.uint32(/* id 4, wireType 1 =*/33).double(message.radiusMiles);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Location message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Location.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocation} message Location message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Location.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Location message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Location} Location
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Location.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Location();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.locationType = reader.int32();
                                    break;
                                case 2:
                                    message.postalAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.latLng = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.radiusMiles = reader.double();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Location message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Location} Location
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Location.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Location message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Location.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.locationType != null && message.hasOwnProperty("locationType"))
                                switch (message.locationType) {
                                default:
                                    return "locationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                    break;
                                }
                            if (message.postalAddress != null && message.hasOwnProperty("postalAddress")) {
                                var error = $root.google.type.PostalAddress.verify(message.postalAddress);
                                if (error)
                                    return "postalAddress." + error;
                            }
                            if (message.latLng != null && message.hasOwnProperty("latLng")) {
                                var error = $root.google.type.LatLng.verify(message.latLng);
                                if (error)
                                    return "latLng." + error;
                            }
                            if (message.radiusMiles != null && message.hasOwnProperty("radiusMiles"))
                                if (typeof message.radiusMiles !== "number")
                                    return "radiusMiles: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a Location message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Location} Location
                         */
                        Location.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Location)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Location();
                            switch (object.locationType) {
                            case "LOCATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.locationType = 0;
                                break;
                            case "COUNTRY":
                            case 1:
                                message.locationType = 1;
                                break;
                            case "ADMINISTRATIVE_AREA":
                            case 2:
                                message.locationType = 2;
                                break;
                            case "SUB_ADMINISTRATIVE_AREA":
                            case 3:
                                message.locationType = 3;
                                break;
                            case "LOCALITY":
                            case 4:
                                message.locationType = 4;
                                break;
                            case "POSTAL_CODE":
                            case 5:
                                message.locationType = 5;
                                break;
                            case "SUB_LOCALITY":
                            case 6:
                                message.locationType = 6;
                                break;
                            case "SUB_LOCALITY_1":
                            case 7:
                                message.locationType = 7;
                                break;
                            case "SUB_LOCALITY_2":
                            case 8:
                                message.locationType = 8;
                                break;
                            case "NEIGHBORHOOD":
                            case 9:
                                message.locationType = 9;
                                break;
                            case "STREET_ADDRESS":
                            case 10:
                                message.locationType = 10;
                                break;
                            }
                            if (object.postalAddress != null) {
                                if (typeof object.postalAddress !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Location.postalAddress: object expected");
                                message.postalAddress = $root.google.type.PostalAddress.fromObject(object.postalAddress);
                            }
                            if (object.latLng != null) {
                                if (typeof object.latLng !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Location.latLng: object expected");
                                message.latLng = $root.google.type.LatLng.fromObject(object.latLng);
                            }
                            if (object.radiusMiles != null)
                                message.radiusMiles = Number(object.radiusMiles);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Location message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @static
                         * @param {google.cloud.talent.v4beta1.Location} message Location
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Location.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.locationType = options.enums === String ? "LOCATION_TYPE_UNSPECIFIED" : 0;
                                object.postalAddress = null;
                                object.latLng = null;
                                object.radiusMiles = 0;
                            }
                            if (message.locationType != null && message.hasOwnProperty("locationType"))
                                object.locationType = options.enums === String ? $root.google.cloud.talent.v4beta1.Location.LocationType[message.locationType] : message.locationType;
                            if (message.postalAddress != null && message.hasOwnProperty("postalAddress"))
                                object.postalAddress = $root.google.type.PostalAddress.toObject(message.postalAddress, options);
                            if (message.latLng != null && message.hasOwnProperty("latLng"))
                                object.latLng = $root.google.type.LatLng.toObject(message.latLng, options);
                            if (message.radiusMiles != null && message.hasOwnProperty("radiusMiles"))
                                object.radiusMiles = options.json && !isFinite(message.radiusMiles) ? String(message.radiusMiles) : message.radiusMiles;
                            return object;
                        };
    
                        /**
                         * Converts this Location to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Location
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Location.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * LocationType enum.
                         * @name google.cloud.talent.v4beta1.Location.LocationType
                         * @enum {string}
                         * @property {number} LOCATION_TYPE_UNSPECIFIED=0 LOCATION_TYPE_UNSPECIFIED value
                         * @property {number} COUNTRY=1 COUNTRY value
                         * @property {number} ADMINISTRATIVE_AREA=2 ADMINISTRATIVE_AREA value
                         * @property {number} SUB_ADMINISTRATIVE_AREA=3 SUB_ADMINISTRATIVE_AREA value
                         * @property {number} LOCALITY=4 LOCALITY value
                         * @property {number} POSTAL_CODE=5 POSTAL_CODE value
                         * @property {number} SUB_LOCALITY=6 SUB_LOCALITY value
                         * @property {number} SUB_LOCALITY_1=7 SUB_LOCALITY_1 value
                         * @property {number} SUB_LOCALITY_2=8 SUB_LOCALITY_2 value
                         * @property {number} NEIGHBORHOOD=9 NEIGHBORHOOD value
                         * @property {number} STREET_ADDRESS=10 STREET_ADDRESS value
                         */
                        Location.LocationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LOCATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "COUNTRY"] = 1;
                            values[valuesById[2] = "ADMINISTRATIVE_AREA"] = 2;
                            values[valuesById[3] = "SUB_ADMINISTRATIVE_AREA"] = 3;
                            values[valuesById[4] = "LOCALITY"] = 4;
                            values[valuesById[5] = "POSTAL_CODE"] = 5;
                            values[valuesById[6] = "SUB_LOCALITY"] = 6;
                            values[valuesById[7] = "SUB_LOCALITY_1"] = 7;
                            values[valuesById[8] = "SUB_LOCALITY_2"] = 8;
                            values[valuesById[9] = "NEIGHBORHOOD"] = 9;
                            values[valuesById[10] = "STREET_ADDRESS"] = 10;
                            return values;
                        })();
    
                        return Location;
                    })();
    
                    /**
                     * CompanySize enum.
                     * @name google.cloud.talent.v4beta1.CompanySize
                     * @enum {string}
                     * @property {number} COMPANY_SIZE_UNSPECIFIED=0 COMPANY_SIZE_UNSPECIFIED value
                     * @property {number} MINI=1 MINI value
                     * @property {number} SMALL=2 SMALL value
                     * @property {number} SMEDIUM=3 SMEDIUM value
                     * @property {number} MEDIUM=4 MEDIUM value
                     * @property {number} BIG=5 BIG value
                     * @property {number} BIGGER=6 BIGGER value
                     * @property {number} GIANT=7 GIANT value
                     */
                    v4beta1.CompanySize = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMPANY_SIZE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "MINI"] = 1;
                        values[valuesById[2] = "SMALL"] = 2;
                        values[valuesById[3] = "SMEDIUM"] = 3;
                        values[valuesById[4] = "MEDIUM"] = 4;
                        values[valuesById[5] = "BIG"] = 5;
                        values[valuesById[6] = "BIGGER"] = 6;
                        values[valuesById[7] = "GIANT"] = 7;
                        return values;
                    })();
    
                    /**
                     * JobBenefit enum.
                     * @name google.cloud.talent.v4beta1.JobBenefit
                     * @enum {string}
                     * @property {number} JOB_BENEFIT_UNSPECIFIED=0 JOB_BENEFIT_UNSPECIFIED value
                     * @property {number} CHILD_CARE=1 CHILD_CARE value
                     * @property {number} DENTAL=2 DENTAL value
                     * @property {number} DOMESTIC_PARTNER=3 DOMESTIC_PARTNER value
                     * @property {number} FLEXIBLE_HOURS=4 FLEXIBLE_HOURS value
                     * @property {number} MEDICAL=5 MEDICAL value
                     * @property {number} LIFE_INSURANCE=6 LIFE_INSURANCE value
                     * @property {number} PARENTAL_LEAVE=7 PARENTAL_LEAVE value
                     * @property {number} RETIREMENT_PLAN=8 RETIREMENT_PLAN value
                     * @property {number} SICK_DAYS=9 SICK_DAYS value
                     * @property {number} VACATION=10 VACATION value
                     * @property {number} VISION=11 VISION value
                     */
                    v4beta1.JobBenefit = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "JOB_BENEFIT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CHILD_CARE"] = 1;
                        values[valuesById[2] = "DENTAL"] = 2;
                        values[valuesById[3] = "DOMESTIC_PARTNER"] = 3;
                        values[valuesById[4] = "FLEXIBLE_HOURS"] = 4;
                        values[valuesById[5] = "MEDICAL"] = 5;
                        values[valuesById[6] = "LIFE_INSURANCE"] = 6;
                        values[valuesById[7] = "PARENTAL_LEAVE"] = 7;
                        values[valuesById[8] = "RETIREMENT_PLAN"] = 8;
                        values[valuesById[9] = "SICK_DAYS"] = 9;
                        values[valuesById[10] = "VACATION"] = 10;
                        values[valuesById[11] = "VISION"] = 11;
                        return values;
                    })();
    
                    /**
                     * DegreeType enum.
                     * @name google.cloud.talent.v4beta1.DegreeType
                     * @enum {string}
                     * @property {number} DEGREE_TYPE_UNSPECIFIED=0 DEGREE_TYPE_UNSPECIFIED value
                     * @property {number} PRIMARY_EDUCATION=1 PRIMARY_EDUCATION value
                     * @property {number} LOWER_SECONDARY_EDUCATION=2 LOWER_SECONDARY_EDUCATION value
                     * @property {number} UPPER_SECONDARY_EDUCATION=3 UPPER_SECONDARY_EDUCATION value
                     * @property {number} ADULT_REMEDIAL_EDUCATION=4 ADULT_REMEDIAL_EDUCATION value
                     * @property {number} ASSOCIATES_OR_EQUIVALENT=5 ASSOCIATES_OR_EQUIVALENT value
                     * @property {number} BACHELORS_OR_EQUIVALENT=6 BACHELORS_OR_EQUIVALENT value
                     * @property {number} MASTERS_OR_EQUIVALENT=7 MASTERS_OR_EQUIVALENT value
                     * @property {number} DOCTORAL_OR_EQUIVALENT=8 DOCTORAL_OR_EQUIVALENT value
                     */
                    v4beta1.DegreeType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DEGREE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PRIMARY_EDUCATION"] = 1;
                        values[valuesById[2] = "LOWER_SECONDARY_EDUCATION"] = 2;
                        values[valuesById[3] = "UPPER_SECONDARY_EDUCATION"] = 3;
                        values[valuesById[4] = "ADULT_REMEDIAL_EDUCATION"] = 4;
                        values[valuesById[5] = "ASSOCIATES_OR_EQUIVALENT"] = 5;
                        values[valuesById[6] = "BACHELORS_OR_EQUIVALENT"] = 6;
                        values[valuesById[7] = "MASTERS_OR_EQUIVALENT"] = 7;
                        values[valuesById[8] = "DOCTORAL_OR_EQUIVALENT"] = 8;
                        return values;
                    })();
    
                    /**
                     * EmploymentType enum.
                     * @name google.cloud.talent.v4beta1.EmploymentType
                     * @enum {string}
                     * @property {number} EMPLOYMENT_TYPE_UNSPECIFIED=0 EMPLOYMENT_TYPE_UNSPECIFIED value
                     * @property {number} FULL_TIME=1 FULL_TIME value
                     * @property {number} PART_TIME=2 PART_TIME value
                     * @property {number} CONTRACTOR=3 CONTRACTOR value
                     * @property {number} CONTRACT_TO_HIRE=4 CONTRACT_TO_HIRE value
                     * @property {number} TEMPORARY=5 TEMPORARY value
                     * @property {number} INTERN=6 INTERN value
                     * @property {number} VOLUNTEER=7 VOLUNTEER value
                     * @property {number} PER_DIEM=8 PER_DIEM value
                     * @property {number} FLY_IN_FLY_OUT=9 FLY_IN_FLY_OUT value
                     * @property {number} OTHER_EMPLOYMENT_TYPE=10 OTHER_EMPLOYMENT_TYPE value
                     */
                    v4beta1.EmploymentType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EMPLOYMENT_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "FULL_TIME"] = 1;
                        values[valuesById[2] = "PART_TIME"] = 2;
                        values[valuesById[3] = "CONTRACTOR"] = 3;
                        values[valuesById[4] = "CONTRACT_TO_HIRE"] = 4;
                        values[valuesById[5] = "TEMPORARY"] = 5;
                        values[valuesById[6] = "INTERN"] = 6;
                        values[valuesById[7] = "VOLUNTEER"] = 7;
                        values[valuesById[8] = "PER_DIEM"] = 8;
                        values[valuesById[9] = "FLY_IN_FLY_OUT"] = 9;
                        values[valuesById[10] = "OTHER_EMPLOYMENT_TYPE"] = 10;
                        return values;
                    })();
    
                    /**
                     * JobLevel enum.
                     * @name google.cloud.talent.v4beta1.JobLevel
                     * @enum {string}
                     * @property {number} JOB_LEVEL_UNSPECIFIED=0 JOB_LEVEL_UNSPECIFIED value
                     * @property {number} ENTRY_LEVEL=1 ENTRY_LEVEL value
                     * @property {number} EXPERIENCED=2 EXPERIENCED value
                     * @property {number} MANAGER=3 MANAGER value
                     * @property {number} DIRECTOR=4 DIRECTOR value
                     * @property {number} EXECUTIVE=5 EXECUTIVE value
                     */
                    v4beta1.JobLevel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "JOB_LEVEL_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ENTRY_LEVEL"] = 1;
                        values[valuesById[2] = "EXPERIENCED"] = 2;
                        values[valuesById[3] = "MANAGER"] = 3;
                        values[valuesById[4] = "DIRECTOR"] = 4;
                        values[valuesById[5] = "EXECUTIVE"] = 5;
                        return values;
                    })();
    
                    /**
                     * JobCategory enum.
                     * @name google.cloud.talent.v4beta1.JobCategory
                     * @enum {string}
                     * @property {number} JOB_CATEGORY_UNSPECIFIED=0 JOB_CATEGORY_UNSPECIFIED value
                     * @property {number} ACCOUNTING_AND_FINANCE=1 ACCOUNTING_AND_FINANCE value
                     * @property {number} ADMINISTRATIVE_AND_OFFICE=2 ADMINISTRATIVE_AND_OFFICE value
                     * @property {number} ADVERTISING_AND_MARKETING=3 ADVERTISING_AND_MARKETING value
                     * @property {number} ANIMAL_CARE=4 ANIMAL_CARE value
                     * @property {number} ART_FASHION_AND_DESIGN=5 ART_FASHION_AND_DESIGN value
                     * @property {number} BUSINESS_OPERATIONS=6 BUSINESS_OPERATIONS value
                     * @property {number} CLEANING_AND_FACILITIES=7 CLEANING_AND_FACILITIES value
                     * @property {number} COMPUTER_AND_IT=8 COMPUTER_AND_IT value
                     * @property {number} CONSTRUCTION=9 CONSTRUCTION value
                     * @property {number} CUSTOMER_SERVICE=10 CUSTOMER_SERVICE value
                     * @property {number} EDUCATION=11 EDUCATION value
                     * @property {number} ENTERTAINMENT_AND_TRAVEL=12 ENTERTAINMENT_AND_TRAVEL value
                     * @property {number} FARMING_AND_OUTDOORS=13 FARMING_AND_OUTDOORS value
                     * @property {number} HEALTHCARE=14 HEALTHCARE value
                     * @property {number} HUMAN_RESOURCES=15 HUMAN_RESOURCES value
                     * @property {number} INSTALLATION_MAINTENANCE_AND_REPAIR=16 INSTALLATION_MAINTENANCE_AND_REPAIR value
                     * @property {number} LEGAL=17 LEGAL value
                     * @property {number} MANAGEMENT=18 MANAGEMENT value
                     * @property {number} MANUFACTURING_AND_WAREHOUSE=19 MANUFACTURING_AND_WAREHOUSE value
                     * @property {number} MEDIA_COMMUNICATIONS_AND_WRITING=20 MEDIA_COMMUNICATIONS_AND_WRITING value
                     * @property {number} OIL_GAS_AND_MINING=21 OIL_GAS_AND_MINING value
                     * @property {number} PERSONAL_CARE_AND_SERVICES=22 PERSONAL_CARE_AND_SERVICES value
                     * @property {number} PROTECTIVE_SERVICES=23 PROTECTIVE_SERVICES value
                     * @property {number} REAL_ESTATE=24 REAL_ESTATE value
                     * @property {number} RESTAURANT_AND_HOSPITALITY=25 RESTAURANT_AND_HOSPITALITY value
                     * @property {number} SALES_AND_RETAIL=26 SALES_AND_RETAIL value
                     * @property {number} SCIENCE_AND_ENGINEERING=27 SCIENCE_AND_ENGINEERING value
                     * @property {number} SOCIAL_SERVICES_AND_NON_PROFIT=28 SOCIAL_SERVICES_AND_NON_PROFIT value
                     * @property {number} SPORTS_FITNESS_AND_RECREATION=29 SPORTS_FITNESS_AND_RECREATION value
                     * @property {number} TRANSPORTATION_AND_LOGISTICS=30 TRANSPORTATION_AND_LOGISTICS value
                     */
                    v4beta1.JobCategory = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "JOB_CATEGORY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ACCOUNTING_AND_FINANCE"] = 1;
                        values[valuesById[2] = "ADMINISTRATIVE_AND_OFFICE"] = 2;
                        values[valuesById[3] = "ADVERTISING_AND_MARKETING"] = 3;
                        values[valuesById[4] = "ANIMAL_CARE"] = 4;
                        values[valuesById[5] = "ART_FASHION_AND_DESIGN"] = 5;
                        values[valuesById[6] = "BUSINESS_OPERATIONS"] = 6;
                        values[valuesById[7] = "CLEANING_AND_FACILITIES"] = 7;
                        values[valuesById[8] = "COMPUTER_AND_IT"] = 8;
                        values[valuesById[9] = "CONSTRUCTION"] = 9;
                        values[valuesById[10] = "CUSTOMER_SERVICE"] = 10;
                        values[valuesById[11] = "EDUCATION"] = 11;
                        values[valuesById[12] = "ENTERTAINMENT_AND_TRAVEL"] = 12;
                        values[valuesById[13] = "FARMING_AND_OUTDOORS"] = 13;
                        values[valuesById[14] = "HEALTHCARE"] = 14;
                        values[valuesById[15] = "HUMAN_RESOURCES"] = 15;
                        values[valuesById[16] = "INSTALLATION_MAINTENANCE_AND_REPAIR"] = 16;
                        values[valuesById[17] = "LEGAL"] = 17;
                        values[valuesById[18] = "MANAGEMENT"] = 18;
                        values[valuesById[19] = "MANUFACTURING_AND_WAREHOUSE"] = 19;
                        values[valuesById[20] = "MEDIA_COMMUNICATIONS_AND_WRITING"] = 20;
                        values[valuesById[21] = "OIL_GAS_AND_MINING"] = 21;
                        values[valuesById[22] = "PERSONAL_CARE_AND_SERVICES"] = 22;
                        values[valuesById[23] = "PROTECTIVE_SERVICES"] = 23;
                        values[valuesById[24] = "REAL_ESTATE"] = 24;
                        values[valuesById[25] = "RESTAURANT_AND_HOSPITALITY"] = 25;
                        values[valuesById[26] = "SALES_AND_RETAIL"] = 26;
                        values[valuesById[27] = "SCIENCE_AND_ENGINEERING"] = 27;
                        values[valuesById[28] = "SOCIAL_SERVICES_AND_NON_PROFIT"] = 28;
                        values[valuesById[29] = "SPORTS_FITNESS_AND_RECREATION"] = 29;
                        values[valuesById[30] = "TRANSPORTATION_AND_LOGISTICS"] = 30;
                        return values;
                    })();
    
                    /**
                     * PostingRegion enum.
                     * @name google.cloud.talent.v4beta1.PostingRegion
                     * @enum {string}
                     * @property {number} POSTING_REGION_UNSPECIFIED=0 POSTING_REGION_UNSPECIFIED value
                     * @property {number} ADMINISTRATIVE_AREA=1 ADMINISTRATIVE_AREA value
                     * @property {number} NATION=2 NATION value
                     * @property {number} TELECOMMUTE=3 TELECOMMUTE value
                     */
                    v4beta1.PostingRegion = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "POSTING_REGION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADMINISTRATIVE_AREA"] = 1;
                        values[valuesById[2] = "NATION"] = 2;
                        values[valuesById[3] = "TELECOMMUTE"] = 3;
                        return values;
                    })();
    
                    /**
                     * Visibility enum.
                     * @name google.cloud.talent.v4beta1.Visibility
                     * @enum {string}
                     * @property {number} VISIBILITY_UNSPECIFIED=0 VISIBILITY_UNSPECIFIED value
                     * @property {number} ACCOUNT_ONLY=1 ACCOUNT_ONLY value
                     * @property {number} SHARED_WITH_GOOGLE=2 SHARED_WITH_GOOGLE value
                     * @property {number} SHARED_WITH_PUBLIC=3 SHARED_WITH_PUBLIC value
                     */
                    v4beta1.Visibility = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VISIBILITY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ACCOUNT_ONLY"] = 1;
                        values[valuesById[2] = "SHARED_WITH_GOOGLE"] = 2;
                        values[valuesById[3] = "SHARED_WITH_PUBLIC"] = 3;
                        return values;
                    })();
    
                    /**
                     * ContactInfoUsage enum.
                     * @name google.cloud.talent.v4beta1.ContactInfoUsage
                     * @enum {string}
                     * @property {number} CONTACT_INFO_USAGE_UNSPECIFIED=0 CONTACT_INFO_USAGE_UNSPECIFIED value
                     * @property {number} PERSONAL=1 PERSONAL value
                     * @property {number} WORK=2 WORK value
                     * @property {number} SCHOOL=3 SCHOOL value
                     */
                    v4beta1.ContactInfoUsage = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CONTACT_INFO_USAGE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PERSONAL"] = 1;
                        values[valuesById[2] = "WORK"] = 2;
                        values[valuesById[3] = "SCHOOL"] = 3;
                        return values;
                    })();
    
                    /**
                     * HtmlSanitization enum.
                     * @name google.cloud.talent.v4beta1.HtmlSanitization
                     * @enum {string}
                     * @property {number} HTML_SANITIZATION_UNSPECIFIED=0 HTML_SANITIZATION_UNSPECIFIED value
                     * @property {number} HTML_SANITIZATION_DISABLED=1 HTML_SANITIZATION_DISABLED value
                     * @property {number} SIMPLE_FORMATTING_ONLY=2 SIMPLE_FORMATTING_ONLY value
                     */
                    v4beta1.HtmlSanitization = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTML_SANITIZATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HTML_SANITIZATION_DISABLED"] = 1;
                        values[valuesById[2] = "SIMPLE_FORMATTING_ONLY"] = 2;
                        return values;
                    })();
    
                    /**
                     * CommuteMethod enum.
                     * @name google.cloud.talent.v4beta1.CommuteMethod
                     * @enum {string}
                     * @property {number} COMMUTE_METHOD_UNSPECIFIED=0 COMMUTE_METHOD_UNSPECIFIED value
                     * @property {number} DRIVING=1 DRIVING value
                     * @property {number} TRANSIT=2 TRANSIT value
                     * @property {number} WALKING=3 WALKING value
                     * @property {number} CYCLING=4 CYCLING value
                     */
                    v4beta1.CommuteMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMMUTE_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DRIVING"] = 1;
                        values[valuesById[2] = "TRANSIT"] = 2;
                        values[valuesById[3] = "WALKING"] = 3;
                        values[valuesById[4] = "CYCLING"] = 4;
                        return values;
                    })();
    
                    v4beta1.RequestMetadata = (function() {
    
                        /**
                         * Properties of a RequestMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IRequestMetadata
                         * @property {string|null} [domain] RequestMetadata domain
                         * @property {string|null} [sessionId] RequestMetadata sessionId
                         * @property {string|null} [userId] RequestMetadata userId
                         * @property {boolean|null} [allowMissingIds] RequestMetadata allowMissingIds
                         * @property {google.cloud.talent.v4beta1.IDeviceInfo|null} [deviceInfo] RequestMetadata deviceInfo
                         */
    
                        /**
                         * Constructs a new RequestMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a RequestMetadata.
                         * @implements IRequestMetadata
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IRequestMetadata=} [properties] Properties to set
                         */
                        function RequestMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RequestMetadata domain.
                         * @member {string} domain
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.domain = "";
    
                        /**
                         * RequestMetadata sessionId.
                         * @member {string} sessionId
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.sessionId = "";
    
                        /**
                         * RequestMetadata userId.
                         * @member {string} userId
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.userId = "";
    
                        /**
                         * RequestMetadata allowMissingIds.
                         * @member {boolean} allowMissingIds
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.allowMissingIds = false;
    
                        /**
                         * RequestMetadata deviceInfo.
                         * @member {google.cloud.talent.v4beta1.IDeviceInfo|null|undefined} deviceInfo
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.deviceInfo = null;
    
                        /**
                         * Creates a new RequestMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRequestMetadata=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.RequestMetadata} RequestMetadata instance
                         */
                        RequestMetadata.create = function create(properties) {
                            return new RequestMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified RequestMetadata message. Does not implicitly {@link google.cloud.talent.v4beta1.RequestMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRequestMetadata} message RequestMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.sessionId);
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId);
                            if (message.allowMissingIds != null && message.hasOwnProperty("allowMissingIds"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissingIds);
                            if (message.deviceInfo != null && message.hasOwnProperty("deviceInfo"))
                                $root.google.cloud.talent.v4beta1.DeviceInfo.encode(message.deviceInfo, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RequestMetadata message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.RequestMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRequestMetadata} message RequestMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RequestMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.RequestMetadata} RequestMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.RequestMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.domain = reader.string();
                                    break;
                                case 2:
                                    message.sessionId = reader.string();
                                    break;
                                case 3:
                                    message.userId = reader.string();
                                    break;
                                case 4:
                                    message.allowMissingIds = reader.bool();
                                    break;
                                case 5:
                                    message.deviceInfo = $root.google.cloud.talent.v4beta1.DeviceInfo.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RequestMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.RequestMetadata} RequestMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RequestMetadata message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RequestMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                if (!$util.isString(message.domain))
                                    return "domain: string expected";
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                if (!$util.isString(message.sessionId))
                                    return "sessionId: string expected";
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                if (!$util.isString(message.userId))
                                    return "userId: string expected";
                            if (message.allowMissingIds != null && message.hasOwnProperty("allowMissingIds"))
                                if (typeof message.allowMissingIds !== "boolean")
                                    return "allowMissingIds: boolean expected";
                            if (message.deviceInfo != null && message.hasOwnProperty("deviceInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.DeviceInfo.verify(message.deviceInfo);
                                if (error)
                                    return "deviceInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RequestMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.RequestMetadata} RequestMetadata
                         */
                        RequestMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.RequestMetadata)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.RequestMetadata();
                            if (object.domain != null)
                                message.domain = String(object.domain);
                            if (object.sessionId != null)
                                message.sessionId = String(object.sessionId);
                            if (object.userId != null)
                                message.userId = String(object.userId);
                            if (object.allowMissingIds != null)
                                message.allowMissingIds = Boolean(object.allowMissingIds);
                            if (object.deviceInfo != null) {
                                if (typeof object.deviceInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.RequestMetadata.deviceInfo: object expected");
                                message.deviceInfo = $root.google.cloud.talent.v4beta1.DeviceInfo.fromObject(object.deviceInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RequestMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.RequestMetadata} message RequestMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RequestMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.domain = "";
                                object.sessionId = "";
                                object.userId = "";
                                object.allowMissingIds = false;
                                object.deviceInfo = null;
                            }
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                object.domain = message.domain;
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                object.sessionId = message.sessionId;
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                object.userId = message.userId;
                            if (message.allowMissingIds != null && message.hasOwnProperty("allowMissingIds"))
                                object.allowMissingIds = message.allowMissingIds;
                            if (message.deviceInfo != null && message.hasOwnProperty("deviceInfo"))
                                object.deviceInfo = $root.google.cloud.talent.v4beta1.DeviceInfo.toObject(message.deviceInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this RequestMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.RequestMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RequestMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return RequestMetadata;
                    })();
    
                    v4beta1.ResponseMetadata = (function() {
    
                        /**
                         * Properties of a ResponseMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IResponseMetadata
                         * @property {string|null} [requestId] ResponseMetadata requestId
                         */
    
                        /**
                         * Constructs a new ResponseMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ResponseMetadata.
                         * @implements IResponseMetadata
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IResponseMetadata=} [properties] Properties to set
                         */
                        function ResponseMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResponseMetadata requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @instance
                         */
                        ResponseMetadata.prototype.requestId = "";
    
                        /**
                         * Creates a new ResponseMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResponseMetadata=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ResponseMetadata} ResponseMetadata instance
                         */
                        ResponseMetadata.create = function create(properties) {
                            return new ResponseMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ResponseMetadata message. Does not implicitly {@link google.cloud.talent.v4beta1.ResponseMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResponseMetadata} message ResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResponseMetadata message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ResponseMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResponseMetadata} message ResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResponseMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ResponseMetadata} ResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ResponseMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResponseMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ResponseMetadata} ResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResponseMetadata message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResponseMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResponseMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ResponseMetadata} ResponseMetadata
                         */
                        ResponseMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ResponseMetadata)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ResponseMetadata();
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResponseMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.ResponseMetadata} message ResponseMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResponseMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.requestId = "";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ResponseMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ResponseMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResponseMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResponseMetadata;
                    })();
    
                    v4beta1.DeviceInfo = (function() {
    
                        /**
                         * Properties of a DeviceInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeviceInfo
                         * @property {google.cloud.talent.v4beta1.DeviceInfo.DeviceType|null} [deviceType] DeviceInfo deviceType
                         * @property {string|null} [id] DeviceInfo id
                         */
    
                        /**
                         * Constructs a new DeviceInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeviceInfo.
                         * @implements IDeviceInfo
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeviceInfo=} [properties] Properties to set
                         */
                        function DeviceInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeviceInfo deviceType.
                         * @member {google.cloud.talent.v4beta1.DeviceInfo.DeviceType} deviceType
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @instance
                         */
                        DeviceInfo.prototype.deviceType = 0;
    
                        /**
                         * DeviceInfo id.
                         * @member {string} id
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @instance
                         */
                        DeviceInfo.prototype.id = "";
    
                        /**
                         * Creates a new DeviceInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeviceInfo=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeviceInfo} DeviceInfo instance
                         */
                        DeviceInfo.create = function create(properties) {
                            return new DeviceInfo(properties);
                        };
    
                        /**
                         * Encodes the specified DeviceInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.DeviceInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeviceInfo} message DeviceInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeviceInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.deviceType != null && message.hasOwnProperty("deviceType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.deviceType);
                            if (message.id != null && message.hasOwnProperty("id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeviceInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeviceInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeviceInfo} message DeviceInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeviceInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeviceInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeviceInfo} DeviceInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeviceInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeviceInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.deviceType = reader.int32();
                                    break;
                                case 2:
                                    message.id = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeviceInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeviceInfo} DeviceInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeviceInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeviceInfo message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeviceInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.deviceType != null && message.hasOwnProperty("deviceType"))
                                switch (message.deviceType) {
                                default:
                                    return "deviceType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeviceInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeviceInfo} DeviceInfo
                         */
                        DeviceInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeviceInfo)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeviceInfo();
                            switch (object.deviceType) {
                            case "DEVICE_TYPE_UNSPECIFIED":
                            case 0:
                                message.deviceType = 0;
                                break;
                            case "WEB":
                            case 1:
                                message.deviceType = 1;
                                break;
                            case "MOBILE_WEB":
                            case 2:
                                message.deviceType = 2;
                                break;
                            case "ANDROID":
                            case 3:
                                message.deviceType = 3;
                                break;
                            case "IOS":
                            case 4:
                                message.deviceType = 4;
                                break;
                            case "BOT":
                            case 5:
                                message.deviceType = 5;
                                break;
                            case "OTHER":
                            case 6:
                                message.deviceType = 6;
                                break;
                            }
                            if (object.id != null)
                                message.id = String(object.id);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeviceInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeviceInfo} message DeviceInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeviceInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.deviceType = options.enums === String ? "DEVICE_TYPE_UNSPECIFIED" : 0;
                                object.id = "";
                            }
                            if (message.deviceType != null && message.hasOwnProperty("deviceType"))
                                object.deviceType = options.enums === String ? $root.google.cloud.talent.v4beta1.DeviceInfo.DeviceType[message.deviceType] : message.deviceType;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            return object;
                        };
    
                        /**
                         * Converts this DeviceInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeviceInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeviceInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * DeviceType enum.
                         * @name google.cloud.talent.v4beta1.DeviceInfo.DeviceType
                         * @enum {string}
                         * @property {number} DEVICE_TYPE_UNSPECIFIED=0 DEVICE_TYPE_UNSPECIFIED value
                         * @property {number} WEB=1 WEB value
                         * @property {number} MOBILE_WEB=2 MOBILE_WEB value
                         * @property {number} ANDROID=3 ANDROID value
                         * @property {number} IOS=4 IOS value
                         * @property {number} BOT=5 BOT value
                         * @property {number} OTHER=6 OTHER value
                         */
                        DeviceInfo.DeviceType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEVICE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "WEB"] = 1;
                            values[valuesById[2] = "MOBILE_WEB"] = 2;
                            values[valuesById[3] = "ANDROID"] = 3;
                            values[valuesById[4] = "IOS"] = 4;
                            values[valuesById[5] = "BOT"] = 5;
                            values[valuesById[6] = "OTHER"] = 6;
                            return values;
                        })();
    
                        return DeviceInfo;
                    })();
    
                    v4beta1.CustomAttribute = (function() {
    
                        /**
                         * Properties of a CustomAttribute.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICustomAttribute
                         * @property {Array.<string>|null} [stringValues] CustomAttribute stringValues
                         * @property {Array.<number|Long>|null} [longValues] CustomAttribute longValues
                         * @property {boolean|null} [filterable] CustomAttribute filterable
                         */
    
                        /**
                         * Constructs a new CustomAttribute.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CustomAttribute.
                         * @implements ICustomAttribute
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICustomAttribute=} [properties] Properties to set
                         */
                        function CustomAttribute(properties) {
                            this.stringValues = [];
                            this.longValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomAttribute stringValues.
                         * @member {Array.<string>} stringValues
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.stringValues = $util.emptyArray;
    
                        /**
                         * CustomAttribute longValues.
                         * @member {Array.<number|Long>} longValues
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.longValues = $util.emptyArray;
    
                        /**
                         * CustomAttribute filterable.
                         * @member {boolean} filterable
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.filterable = false;
    
                        /**
                         * Creates a new CustomAttribute instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICustomAttribute=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CustomAttribute} CustomAttribute instance
                         */
                        CustomAttribute.create = function create(properties) {
                            return new CustomAttribute(properties);
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message. Does not implicitly {@link google.cloud.talent.v4beta1.CustomAttribute.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stringValues != null && message.stringValues.length)
                                for (var i = 0; i < message.stringValues.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.stringValues[i]);
                            if (message.longValues != null && message.longValues.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.longValues.length; ++i)
                                    writer.int64(message.longValues[i]);
                                writer.ldelim();
                            }
                            if (message.filterable != null && message.hasOwnProperty("filterable"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.filterable);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CustomAttribute.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CustomAttribute();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.stringValues && message.stringValues.length))
                                        message.stringValues = [];
                                    message.stringValues.push(reader.string());
                                    break;
                                case 2:
                                    if (!(message.longValues && message.longValues.length))
                                        message.longValues = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.longValues.push(reader.int64());
                                    } else
                                        message.longValues.push(reader.int64());
                                    break;
                                case 3:
                                    message.filterable = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomAttribute message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomAttribute.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stringValues != null && message.hasOwnProperty("stringValues")) {
                                if (!Array.isArray(message.stringValues))
                                    return "stringValues: array expected";
                                for (var i = 0; i < message.stringValues.length; ++i)
                                    if (!$util.isString(message.stringValues[i]))
                                        return "stringValues: string[] expected";
                            }
                            if (message.longValues != null && message.hasOwnProperty("longValues")) {
                                if (!Array.isArray(message.longValues))
                                    return "longValues: array expected";
                                for (var i = 0; i < message.longValues.length; ++i)
                                    if (!$util.isInteger(message.longValues[i]) && !(message.longValues[i] && $util.isInteger(message.longValues[i].low) && $util.isInteger(message.longValues[i].high)))
                                        return "longValues: integer|Long[] expected";
                            }
                            if (message.filterable != null && message.hasOwnProperty("filterable"))
                                if (typeof message.filterable !== "boolean")
                                    return "filterable: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CustomAttribute message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CustomAttribute} CustomAttribute
                         */
                        CustomAttribute.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CustomAttribute)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CustomAttribute();
                            if (object.stringValues) {
                                if (!Array.isArray(object.stringValues))
                                    throw TypeError(".google.cloud.talent.v4beta1.CustomAttribute.stringValues: array expected");
                                message.stringValues = [];
                                for (var i = 0; i < object.stringValues.length; ++i)
                                    message.stringValues[i] = String(object.stringValues[i]);
                            }
                            if (object.longValues) {
                                if (!Array.isArray(object.longValues))
                                    throw TypeError(".google.cloud.talent.v4beta1.CustomAttribute.longValues: array expected");
                                message.longValues = [];
                                for (var i = 0; i < object.longValues.length; ++i)
                                    if ($util.Long)
                                        (message.longValues[i] = $util.Long.fromValue(object.longValues[i])).unsigned = false;
                                    else if (typeof object.longValues[i] === "string")
                                        message.longValues[i] = parseInt(object.longValues[i], 10);
                                    else if (typeof object.longValues[i] === "number")
                                        message.longValues[i] = object.longValues[i];
                                    else if (typeof object.longValues[i] === "object")
                                        message.longValues[i] = new $util.LongBits(object.longValues[i].low >>> 0, object.longValues[i].high >>> 0).toNumber();
                            }
                            if (object.filterable != null)
                                message.filterable = Boolean(object.filterable);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomAttribute message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @static
                         * @param {google.cloud.talent.v4beta1.CustomAttribute} message CustomAttribute
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomAttribute.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.stringValues = [];
                                object.longValues = [];
                            }
                            if (options.defaults)
                                object.filterable = false;
                            if (message.stringValues && message.stringValues.length) {
                                object.stringValues = [];
                                for (var j = 0; j < message.stringValues.length; ++j)
                                    object.stringValues[j] = message.stringValues[j];
                            }
                            if (message.longValues && message.longValues.length) {
                                object.longValues = [];
                                for (var j = 0; j < message.longValues.length; ++j)
                                    if (typeof message.longValues[j] === "number")
                                        object.longValues[j] = options.longs === String ? String(message.longValues[j]) : message.longValues[j];
                                    else
                                        object.longValues[j] = options.longs === String ? $util.Long.prototype.toString.call(message.longValues[j]) : options.longs === Number ? new $util.LongBits(message.longValues[j].low >>> 0, message.longValues[j].high >>> 0).toNumber() : message.longValues[j];
                            }
                            if (message.filterable != null && message.hasOwnProperty("filterable"))
                                object.filterable = message.filterable;
                            return object;
                        };
    
                        /**
                         * Converts this CustomAttribute to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CustomAttribute
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomAttribute.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CustomAttribute;
                    })();
    
                    v4beta1.SpellingCorrection = (function() {
    
                        /**
                         * Properties of a SpellingCorrection.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISpellingCorrection
                         * @property {boolean|null} [corrected] SpellingCorrection corrected
                         * @property {string|null} [correctedText] SpellingCorrection correctedText
                         * @property {string|null} [correctedHtml] SpellingCorrection correctedHtml
                         */
    
                        /**
                         * Constructs a new SpellingCorrection.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SpellingCorrection.
                         * @implements ISpellingCorrection
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISpellingCorrection=} [properties] Properties to set
                         */
                        function SpellingCorrection(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpellingCorrection corrected.
                         * @member {boolean} corrected
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @instance
                         */
                        SpellingCorrection.prototype.corrected = false;
    
                        /**
                         * SpellingCorrection correctedText.
                         * @member {string} correctedText
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @instance
                         */
                        SpellingCorrection.prototype.correctedText = "";
    
                        /**
                         * SpellingCorrection correctedHtml.
                         * @member {string} correctedHtml
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @instance
                         */
                        SpellingCorrection.prototype.correctedHtml = "";
    
                        /**
                         * Creates a new SpellingCorrection instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISpellingCorrection=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SpellingCorrection} SpellingCorrection instance
                         */
                        SpellingCorrection.create = function create(properties) {
                            return new SpellingCorrection(properties);
                        };
    
                        /**
                         * Encodes the specified SpellingCorrection message. Does not implicitly {@link google.cloud.talent.v4beta1.SpellingCorrection.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISpellingCorrection} message SpellingCorrection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpellingCorrection.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.corrected != null && message.hasOwnProperty("corrected"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.corrected);
                            if (message.correctedText != null && message.hasOwnProperty("correctedText"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.correctedText);
                            if (message.correctedHtml != null && message.hasOwnProperty("correctedHtml"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.correctedHtml);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpellingCorrection message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SpellingCorrection.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISpellingCorrection} message SpellingCorrection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpellingCorrection.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpellingCorrection message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SpellingCorrection} SpellingCorrection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpellingCorrection.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SpellingCorrection();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.corrected = reader.bool();
                                    break;
                                case 2:
                                    message.correctedText = reader.string();
                                    break;
                                case 3:
                                    message.correctedHtml = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpellingCorrection message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SpellingCorrection} SpellingCorrection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpellingCorrection.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpellingCorrection message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpellingCorrection.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.corrected != null && message.hasOwnProperty("corrected"))
                                if (typeof message.corrected !== "boolean")
                                    return "corrected: boolean expected";
                            if (message.correctedText != null && message.hasOwnProperty("correctedText"))
                                if (!$util.isString(message.correctedText))
                                    return "correctedText: string expected";
                            if (message.correctedHtml != null && message.hasOwnProperty("correctedHtml"))
                                if (!$util.isString(message.correctedHtml))
                                    return "correctedHtml: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SpellingCorrection message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SpellingCorrection} SpellingCorrection
                         */
                        SpellingCorrection.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SpellingCorrection)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SpellingCorrection();
                            if (object.corrected != null)
                                message.corrected = Boolean(object.corrected);
                            if (object.correctedText != null)
                                message.correctedText = String(object.correctedText);
                            if (object.correctedHtml != null)
                                message.correctedHtml = String(object.correctedHtml);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpellingCorrection message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @static
                         * @param {google.cloud.talent.v4beta1.SpellingCorrection} message SpellingCorrection
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpellingCorrection.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.corrected = false;
                                object.correctedText = "";
                                object.correctedHtml = "";
                            }
                            if (message.corrected != null && message.hasOwnProperty("corrected"))
                                object.corrected = message.corrected;
                            if (message.correctedText != null && message.hasOwnProperty("correctedText"))
                                object.correctedText = message.correctedText;
                            if (message.correctedHtml != null && message.hasOwnProperty("correctedHtml"))
                                object.correctedHtml = message.correctedHtml;
                            return object;
                        };
    
                        /**
                         * Converts this SpellingCorrection to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SpellingCorrection
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpellingCorrection.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SpellingCorrection;
                    })();
    
                    v4beta1.CompensationInfo = (function() {
    
                        /**
                         * Properties of a CompensationInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICompensationInfo
                         * @property {Array.<google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry>|null} [entries] CompensationInfo entries
                         * @property {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null} [annualizedBaseCompensationRange] CompensationInfo annualizedBaseCompensationRange
                         * @property {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null} [annualizedTotalCompensationRange] CompensationInfo annualizedTotalCompensationRange
                         */
    
                        /**
                         * Constructs a new CompensationInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CompensationInfo.
                         * @implements ICompensationInfo
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICompensationInfo=} [properties] Properties to set
                         */
                        function CompensationInfo(properties) {
                            this.entries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompensationInfo entries.
                         * @member {Array.<google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry>} entries
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @instance
                         */
                        CompensationInfo.prototype.entries = $util.emptyArray;
    
                        /**
                         * CompensationInfo annualizedBaseCompensationRange.
                         * @member {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null|undefined} annualizedBaseCompensationRange
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @instance
                         */
                        CompensationInfo.prototype.annualizedBaseCompensationRange = null;
    
                        /**
                         * CompensationInfo annualizedTotalCompensationRange.
                         * @member {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null|undefined} annualizedTotalCompensationRange
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @instance
                         */
                        CompensationInfo.prototype.annualizedTotalCompensationRange = null;
    
                        /**
                         * Creates a new CompensationInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationInfo=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CompensationInfo} CompensationInfo instance
                         */
                        CompensationInfo.create = function create(properties) {
                            return new CompensationInfo(properties);
                        };
    
                        /**
                         * Encodes the specified CompensationInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationInfo} message CompensationInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompensationInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entries != null && message.entries.length)
                                for (var i = 0; i < message.entries.length; ++i)
                                    $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.annualizedBaseCompensationRange != null && message.hasOwnProperty("annualizedBaseCompensationRange"))
                                $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.encode(message.annualizedBaseCompensationRange, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.annualizedTotalCompensationRange != null && message.hasOwnProperty("annualizedTotalCompensationRange"))
                                $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.encode(message.annualizedTotalCompensationRange, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompensationInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationInfo} message CompensationInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompensationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompensationInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CompensationInfo} CompensationInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompensationInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompensationInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.entries && message.entries.length))
                                        message.entries = [];
                                    message.entries.push($root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.annualizedBaseCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.annualizedTotalCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompensationInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CompensationInfo} CompensationInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompensationInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompensationInfo message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompensationInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entries != null && message.hasOwnProperty("entries")) {
                                if (!Array.isArray(message.entries))
                                    return "entries: array expected";
                                for (var i = 0; i < message.entries.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.verify(message.entries[i]);
                                    if (error)
                                        return "entries." + error;
                                }
                            }
                            if (message.annualizedBaseCompensationRange != null && message.hasOwnProperty("annualizedBaseCompensationRange")) {
                                var error = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify(message.annualizedBaseCompensationRange);
                                if (error)
                                    return "annualizedBaseCompensationRange." + error;
                            }
                            if (message.annualizedTotalCompensationRange != null && message.hasOwnProperty("annualizedTotalCompensationRange")) {
                                var error = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify(message.annualizedTotalCompensationRange);
                                if (error)
                                    return "annualizedTotalCompensationRange." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CompensationInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CompensationInfo} CompensationInfo
                         */
                        CompensationInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CompensationInfo)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CompensationInfo();
                            if (object.entries) {
                                if (!Array.isArray(object.entries))
                                    throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.entries: array expected");
                                message.entries = [];
                                for (var i = 0; i < object.entries.length; ++i) {
                                    if (typeof object.entries[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.entries: object expected");
                                    message.entries[i] = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.fromObject(object.entries[i]);
                                }
                            }
                            if (object.annualizedBaseCompensationRange != null) {
                                if (typeof object.annualizedBaseCompensationRange !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.annualizedBaseCompensationRange: object expected");
                                message.annualizedBaseCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.fromObject(object.annualizedBaseCompensationRange);
                            }
                            if (object.annualizedTotalCompensationRange != null) {
                                if (typeof object.annualizedTotalCompensationRange !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.annualizedTotalCompensationRange: object expected");
                                message.annualizedTotalCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.fromObject(object.annualizedTotalCompensationRange);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompensationInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.CompensationInfo} message CompensationInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompensationInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entries = [];
                            if (options.defaults) {
                                object.annualizedBaseCompensationRange = null;
                                object.annualizedTotalCompensationRange = null;
                            }
                            if (message.entries && message.entries.length) {
                                object.entries = [];
                                for (var j = 0; j < message.entries.length; ++j)
                                    object.entries[j] = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.toObject(message.entries[j], options);
                            }
                            if (message.annualizedBaseCompensationRange != null && message.hasOwnProperty("annualizedBaseCompensationRange"))
                                object.annualizedBaseCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.toObject(message.annualizedBaseCompensationRange, options);
                            if (message.annualizedTotalCompensationRange != null && message.hasOwnProperty("annualizedTotalCompensationRange"))
                                object.annualizedTotalCompensationRange = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.toObject(message.annualizedTotalCompensationRange, options);
                            return object;
                        };
    
                        /**
                         * Converts this CompensationInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CompensationInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompensationInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        CompensationInfo.CompensationEntry = (function() {
    
                            /**
                             * Properties of a CompensationEntry.
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo
                             * @interface ICompensationEntry
                             * @property {google.cloud.talent.v4beta1.CompensationInfo.CompensationType|null} [type] CompensationEntry type
                             * @property {google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit|null} [unit] CompensationEntry unit
                             * @property {google.type.IMoney|null} [amount] CompensationEntry amount
                             * @property {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null} [range] CompensationEntry range
                             * @property {string|null} [description] CompensationEntry description
                             * @property {google.protobuf.IDoubleValue|null} [expectedUnitsPerYear] CompensationEntry expectedUnitsPerYear
                             */
    
                            /**
                             * Constructs a new CompensationEntry.
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo
                             * @classdesc Represents a CompensationEntry.
                             * @implements ICompensationEntry
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry=} [properties] Properties to set
                             */
                            function CompensationEntry(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CompensationEntry type.
                             * @member {google.cloud.talent.v4beta1.CompensationInfo.CompensationType} type
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.type = 0;
    
                            /**
                             * CompensationEntry unit.
                             * @member {google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit} unit
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.unit = 0;
    
                            /**
                             * CompensationEntry amount.
                             * @member {google.type.IMoney|null|undefined} amount
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.amount = null;
    
                            /**
                             * CompensationEntry range.
                             * @member {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null|undefined} range
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.range = null;
    
                            /**
                             * CompensationEntry description.
                             * @member {string} description
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.description = "";
    
                            /**
                             * CompensationEntry expectedUnitsPerYear.
                             * @member {google.protobuf.IDoubleValue|null|undefined} expectedUnitsPerYear
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            CompensationEntry.prototype.expectedUnitsPerYear = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * CompensationEntry compensationAmount.
                             * @member {"amount"|"range"|undefined} compensationAmount
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             */
                            Object.defineProperty(CompensationEntry.prototype, "compensationAmount", {
                                get: $util.oneOfGetter($oneOfFields = ["amount", "range"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new CompensationEntry instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry} CompensationEntry instance
                             */
                            CompensationEntry.create = function create(properties) {
                                return new CompensationEntry(properties);
                            };
    
                            /**
                             * Encodes the specified CompensationEntry message. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry} message CompensationEntry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompensationEntry.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && message.hasOwnProperty("type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.unit != null && message.hasOwnProperty("unit"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.unit);
                                if (message.amount != null && message.hasOwnProperty("amount"))
                                    $root.google.type.Money.encode(message.amount, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.range != null && message.hasOwnProperty("range"))
                                    $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.encode(message.range, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.description != null && message.hasOwnProperty("description"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                                if (message.expectedUnitsPerYear != null && message.hasOwnProperty("expectedUnitsPerYear"))
                                    $root.google.protobuf.DoubleValue.encode(message.expectedUnitsPerYear, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CompensationEntry message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationEntry} message CompensationEntry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompensationEntry.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CompensationEntry message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry} CompensationEntry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompensationEntry.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.type = reader.int32();
                                        break;
                                    case 2:
                                        message.unit = reader.int32();
                                        break;
                                    case 3:
                                        message.amount = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.description = reader.string();
                                        break;
                                    case 6:
                                        message.expectedUnitsPerYear = $root.google.protobuf.DoubleValue.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CompensationEntry message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry} CompensationEntry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompensationEntry.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CompensationEntry message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CompensationEntry.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                        break;
                                    }
                                if (message.unit != null && message.hasOwnProperty("unit"))
                                    switch (message.unit) {
                                    default:
                                        return "unit: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.amount != null && message.hasOwnProperty("amount")) {
                                    properties.compensationAmount = 1;
                                    {
                                        var error = $root.google.type.Money.verify(message.amount);
                                        if (error)
                                            return "amount." + error;
                                    }
                                }
                                if (message.range != null && message.hasOwnProperty("range")) {
                                    if (properties.compensationAmount === 1)
                                        return "compensationAmount: multiple values";
                                    properties.compensationAmount = 1;
                                    {
                                        var error = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify(message.range);
                                        if (error)
                                            return "range." + error;
                                    }
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                if (message.expectedUnitsPerYear != null && message.hasOwnProperty("expectedUnitsPerYear")) {
                                    var error = $root.google.protobuf.DoubleValue.verify(message.expectedUnitsPerYear);
                                    if (error)
                                        return "expectedUnitsPerYear." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CompensationEntry message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry} CompensationEntry
                             */
                            CompensationEntry.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry();
                                switch (object.type) {
                                case "COMPENSATION_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "BASE":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "BONUS":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "SIGNING_BONUS":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "EQUITY":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "PROFIT_SHARING":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "COMMISSIONS":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TIPS":
                                case 7:
                                    message.type = 7;
                                    break;
                                case "OTHER_COMPENSATION_TYPE":
                                case 8:
                                    message.type = 8;
                                    break;
                                }
                                switch (object.unit) {
                                case "COMPENSATION_UNIT_UNSPECIFIED":
                                case 0:
                                    message.unit = 0;
                                    break;
                                case "HOURLY":
                                case 1:
                                    message.unit = 1;
                                    break;
                                case "DAILY":
                                case 2:
                                    message.unit = 2;
                                    break;
                                case "WEEKLY":
                                case 3:
                                    message.unit = 3;
                                    break;
                                case "MONTHLY":
                                case 4:
                                    message.unit = 4;
                                    break;
                                case "YEARLY":
                                case 5:
                                    message.unit = 5;
                                    break;
                                case "ONE_TIME":
                                case 6:
                                    message.unit = 6;
                                    break;
                                case "OTHER_COMPENSATION_UNIT":
                                case 7:
                                    message.unit = 7;
                                    break;
                                }
                                if (object.amount != null) {
                                    if (typeof object.amount !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount: object expected");
                                    message.amount = $root.google.type.Money.fromObject(object.amount);
                                }
                                if (object.range != null) {
                                    if (typeof object.range !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.range: object expected");
                                    message.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.fromObject(object.range);
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                if (object.expectedUnitsPerYear != null) {
                                    if (typeof object.expectedUnitsPerYear !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.expectedUnitsPerYear: object expected");
                                    message.expectedUnitsPerYear = $root.google.protobuf.DoubleValue.fromObject(object.expectedUnitsPerYear);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CompensationEntry message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry} message CompensationEntry
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CompensationEntry.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "COMPENSATION_TYPE_UNSPECIFIED" : 0;
                                    object.unit = options.enums === String ? "COMPENSATION_UNIT_UNSPECIFIED" : 0;
                                    object.description = "";
                                    object.expectedUnitsPerYear = null;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationType[message.type] : message.type;
                                if (message.unit != null && message.hasOwnProperty("unit"))
                                    object.unit = options.enums === String ? $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit[message.unit] : message.unit;
                                if (message.amount != null && message.hasOwnProperty("amount")) {
                                    object.amount = $root.google.type.Money.toObject(message.amount, options);
                                    if (options.oneofs)
                                        object.compensationAmount = "amount";
                                }
                                if (message.range != null && message.hasOwnProperty("range")) {
                                    object.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.toObject(message.range, options);
                                    if (options.oneofs)
                                        object.compensationAmount = "range";
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                if (message.expectedUnitsPerYear != null && message.hasOwnProperty("expectedUnitsPerYear"))
                                    object.expectedUnitsPerYear = $root.google.protobuf.DoubleValue.toObject(message.expectedUnitsPerYear, options);
                                return object;
                            };
    
                            /**
                             * Converts this CompensationEntry to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CompensationEntry.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return CompensationEntry;
                        })();
    
                        CompensationInfo.CompensationRange = (function() {
    
                            /**
                             * Properties of a CompensationRange.
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo
                             * @interface ICompensationRange
                             * @property {google.type.IMoney|null} [maxCompensation] CompensationRange maxCompensation
                             * @property {google.type.IMoney|null} [minCompensation] CompensationRange minCompensation
                             */
    
                            /**
                             * Constructs a new CompensationRange.
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo
                             * @classdesc Represents a CompensationRange.
                             * @implements ICompensationRange
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange=} [properties] Properties to set
                             */
                            function CompensationRange(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CompensationRange maxCompensation.
                             * @member {google.type.IMoney|null|undefined} maxCompensation
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @instance
                             */
                            CompensationRange.prototype.maxCompensation = null;
    
                            /**
                             * CompensationRange minCompensation.
                             * @member {google.type.IMoney|null|undefined} minCompensation
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @instance
                             */
                            CompensationRange.prototype.minCompensation = null;
    
                            /**
                             * Creates a new CompensationRange instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationRange} CompensationRange instance
                             */
                            CompensationRange.create = function create(properties) {
                                return new CompensationRange(properties);
                            };
    
                            /**
                             * Encodes the specified CompensationRange message. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange} message CompensationRange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompensationRange.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.minCompensation != null && message.hasOwnProperty("minCompensation"))
                                    $root.google.type.Money.encode(message.minCompensation, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.maxCompensation != null && message.hasOwnProperty("maxCompensation"))
                                    $root.google.type.Money.encode(message.maxCompensation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CompensationRange message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange} message CompensationRange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompensationRange.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CompensationRange message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationRange} CompensationRange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompensationRange.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2:
                                        message.maxCompensation = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    case 1:
                                        message.minCompensation = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CompensationRange message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationRange} CompensationRange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompensationRange.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CompensationRange message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CompensationRange.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.maxCompensation != null && message.hasOwnProperty("maxCompensation")) {
                                    var error = $root.google.type.Money.verify(message.maxCompensation);
                                    if (error)
                                        return "maxCompensation." + error;
                                }
                                if (message.minCompensation != null && message.hasOwnProperty("minCompensation")) {
                                    var error = $root.google.type.Money.verify(message.minCompensation);
                                    if (error)
                                        return "minCompensation." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CompensationRange message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.CompensationInfo.CompensationRange} CompensationRange
                             */
                            CompensationRange.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange();
                                if (object.maxCompensation != null) {
                                    if (typeof object.maxCompensation !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.maxCompensation: object expected");
                                    message.maxCompensation = $root.google.type.Money.fromObject(object.maxCompensation);
                                }
                                if (object.minCompensation != null) {
                                    if (typeof object.minCompensation !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.minCompensation: object expected");
                                    message.minCompensation = $root.google.type.Money.fromObject(object.minCompensation);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CompensationRange message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompensationInfo.CompensationRange} message CompensationRange
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CompensationRange.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.minCompensation = null;
                                    object.maxCompensation = null;
                                }
                                if (message.minCompensation != null && message.hasOwnProperty("minCompensation"))
                                    object.minCompensation = $root.google.type.Money.toObject(message.minCompensation, options);
                                if (message.maxCompensation != null && message.hasOwnProperty("maxCompensation"))
                                    object.maxCompensation = $root.google.type.Money.toObject(message.maxCompensation, options);
                                return object;
                            };
    
                            /**
                             * Converts this CompensationRange to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.CompensationInfo.CompensationRange
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CompensationRange.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return CompensationRange;
                        })();
    
                        /**
                         * CompensationType enum.
                         * @name google.cloud.talent.v4beta1.CompensationInfo.CompensationType
                         * @enum {string}
                         * @property {number} COMPENSATION_TYPE_UNSPECIFIED=0 COMPENSATION_TYPE_UNSPECIFIED value
                         * @property {number} BASE=1 BASE value
                         * @property {number} BONUS=2 BONUS value
                         * @property {number} SIGNING_BONUS=3 SIGNING_BONUS value
                         * @property {number} EQUITY=4 EQUITY value
                         * @property {number} PROFIT_SHARING=5 PROFIT_SHARING value
                         * @property {number} COMMISSIONS=6 COMMISSIONS value
                         * @property {number} TIPS=7 TIPS value
                         * @property {number} OTHER_COMPENSATION_TYPE=8 OTHER_COMPENSATION_TYPE value
                         */
                        CompensationInfo.CompensationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMPENSATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASE"] = 1;
                            values[valuesById[2] = "BONUS"] = 2;
                            values[valuesById[3] = "SIGNING_BONUS"] = 3;
                            values[valuesById[4] = "EQUITY"] = 4;
                            values[valuesById[5] = "PROFIT_SHARING"] = 5;
                            values[valuesById[6] = "COMMISSIONS"] = 6;
                            values[valuesById[7] = "TIPS"] = 7;
                            values[valuesById[8] = "OTHER_COMPENSATION_TYPE"] = 8;
                            return values;
                        })();
    
                        /**
                         * CompensationUnit enum.
                         * @name google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit
                         * @enum {string}
                         * @property {number} COMPENSATION_UNIT_UNSPECIFIED=0 COMPENSATION_UNIT_UNSPECIFIED value
                         * @property {number} HOURLY=1 HOURLY value
                         * @property {number} DAILY=2 DAILY value
                         * @property {number} WEEKLY=3 WEEKLY value
                         * @property {number} MONTHLY=4 MONTHLY value
                         * @property {number} YEARLY=5 YEARLY value
                         * @property {number} ONE_TIME=6 ONE_TIME value
                         * @property {number} OTHER_COMPENSATION_UNIT=7 OTHER_COMPENSATION_UNIT value
                         */
                        CompensationInfo.CompensationUnit = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMPENSATION_UNIT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HOURLY"] = 1;
                            values[valuesById[2] = "DAILY"] = 2;
                            values[valuesById[3] = "WEEKLY"] = 3;
                            values[valuesById[4] = "MONTHLY"] = 4;
                            values[valuesById[5] = "YEARLY"] = 5;
                            values[valuesById[6] = "ONE_TIME"] = 6;
                            values[valuesById[7] = "OTHER_COMPENSATION_UNIT"] = 7;
                            return values;
                        })();
    
                        return CompensationInfo;
                    })();
    
                    v4beta1.Certification = (function() {
    
                        /**
                         * Properties of a Certification.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICertification
                         * @property {string|null} [displayName] Certification displayName
                         * @property {google.type.IDate|null} [acquireDate] Certification acquireDate
                         * @property {google.type.IDate|null} [expireDate] Certification expireDate
                         * @property {string|null} [authority] Certification authority
                         * @property {string|null} [description] Certification description
                         */
    
                        /**
                         * Constructs a new Certification.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Certification.
                         * @implements ICertification
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICertification=} [properties] Properties to set
                         */
                        function Certification(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Certification displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         */
                        Certification.prototype.displayName = "";
    
                        /**
                         * Certification acquireDate.
                         * @member {google.type.IDate|null|undefined} acquireDate
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         */
                        Certification.prototype.acquireDate = null;
    
                        /**
                         * Certification expireDate.
                         * @member {google.type.IDate|null|undefined} expireDate
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         */
                        Certification.prototype.expireDate = null;
    
                        /**
                         * Certification authority.
                         * @member {string} authority
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         */
                        Certification.prototype.authority = "";
    
                        /**
                         * Certification description.
                         * @member {string} description
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         */
                        Certification.prototype.description = "";
    
                        /**
                         * Creates a new Certification instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICertification=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Certification} Certification instance
                         */
                        Certification.create = function create(properties) {
                            return new Certification(properties);
                        };
    
                        /**
                         * Encodes the specified Certification message. Does not implicitly {@link google.cloud.talent.v4beta1.Certification.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICertification} message Certification message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Certification.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.acquireDate != null && message.hasOwnProperty("acquireDate"))
                                $root.google.type.Date.encode(message.acquireDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.expireDate != null && message.hasOwnProperty("expireDate"))
                                $root.google.type.Date.encode(message.expireDate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.authority);
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Certification message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Certification.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICertification} message Certification message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Certification.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Certification message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Certification} Certification
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Certification.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Certification();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.displayName = reader.string();
                                    break;
                                case 2:
                                    message.acquireDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.expireDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.authority = reader.string();
                                    break;
                                case 5:
                                    message.description = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Certification message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Certification} Certification
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Certification.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Certification message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Certification.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.acquireDate != null && message.hasOwnProperty("acquireDate")) {
                                var error = $root.google.type.Date.verify(message.acquireDate);
                                if (error)
                                    return "acquireDate." + error;
                            }
                            if (message.expireDate != null && message.hasOwnProperty("expireDate")) {
                                var error = $root.google.type.Date.verify(message.expireDate);
                                if (error)
                                    return "expireDate." + error;
                            }
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                if (!$util.isString(message.authority))
                                    return "authority: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Certification message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Certification} Certification
                         */
                        Certification.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Certification)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Certification();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.acquireDate != null) {
                                if (typeof object.acquireDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Certification.acquireDate: object expected");
                                message.acquireDate = $root.google.type.Date.fromObject(object.acquireDate);
                            }
                            if (object.expireDate != null) {
                                if (typeof object.expireDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Certification.expireDate: object expected");
                                message.expireDate = $root.google.type.Date.fromObject(object.expireDate);
                            }
                            if (object.authority != null)
                                message.authority = String(object.authority);
                            if (object.description != null)
                                message.description = String(object.description);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Certification message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @static
                         * @param {google.cloud.talent.v4beta1.Certification} message Certification
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Certification.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.displayName = "";
                                object.acquireDate = null;
                                object.expireDate = null;
                                object.authority = "";
                                object.description = "";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.acquireDate != null && message.hasOwnProperty("acquireDate"))
                                object.acquireDate = $root.google.type.Date.toObject(message.acquireDate, options);
                            if (message.expireDate != null && message.hasOwnProperty("expireDate"))
                                object.expireDate = $root.google.type.Date.toObject(message.expireDate, options);
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                object.authority = message.authority;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this Certification to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Certification
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Certification.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Certification;
                    })();
    
                    v4beta1.Skill = (function() {
    
                        /**
                         * Properties of a Skill.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISkill
                         * @property {string|null} [displayName] Skill displayName
                         * @property {google.type.IDate|null} [lastUsedDate] Skill lastUsedDate
                         * @property {google.cloud.talent.v4beta1.SkillProficiencyLevel|null} [level] Skill level
                         * @property {string|null} [context] Skill context
                         * @property {string|null} [skillNameSnippet] Skill skillNameSnippet
                         */
    
                        /**
                         * Constructs a new Skill.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Skill.
                         * @implements ISkill
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISkill=} [properties] Properties to set
                         */
                        function Skill(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Skill displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         */
                        Skill.prototype.displayName = "";
    
                        /**
                         * Skill lastUsedDate.
                         * @member {google.type.IDate|null|undefined} lastUsedDate
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         */
                        Skill.prototype.lastUsedDate = null;
    
                        /**
                         * Skill level.
                         * @member {google.cloud.talent.v4beta1.SkillProficiencyLevel} level
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         */
                        Skill.prototype.level = 0;
    
                        /**
                         * Skill context.
                         * @member {string} context
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         */
                        Skill.prototype.context = "";
    
                        /**
                         * Skill skillNameSnippet.
                         * @member {string} skillNameSnippet
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         */
                        Skill.prototype.skillNameSnippet = "";
    
                        /**
                         * Creates a new Skill instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkill=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Skill} Skill instance
                         */
                        Skill.create = function create(properties) {
                            return new Skill(properties);
                        };
    
                        /**
                         * Encodes the specified Skill message. Does not implicitly {@link google.cloud.talent.v4beta1.Skill.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkill} message Skill message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Skill.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.lastUsedDate != null && message.hasOwnProperty("lastUsedDate"))
                                $root.google.type.Date.encode(message.lastUsedDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.level != null && message.hasOwnProperty("level"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.level);
                            if (message.context != null && message.hasOwnProperty("context"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.context);
                            if (message.skillNameSnippet != null && message.hasOwnProperty("skillNameSnippet"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.skillNameSnippet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Skill message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Skill.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkill} message Skill message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Skill.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Skill message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Skill} Skill
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Skill.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Skill();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.displayName = reader.string();
                                    break;
                                case 2:
                                    message.lastUsedDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.level = reader.int32();
                                    break;
                                case 4:
                                    message.context = reader.string();
                                    break;
                                case 5:
                                    message.skillNameSnippet = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Skill message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Skill} Skill
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Skill.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Skill message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Skill.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.lastUsedDate != null && message.hasOwnProperty("lastUsedDate")) {
                                var error = $root.google.type.Date.verify(message.lastUsedDate);
                                if (error)
                                    return "lastUsedDate." + error;
                            }
                            if (message.level != null && message.hasOwnProperty("level"))
                                switch (message.level) {
                                default:
                                    return "level: enum value expected";
                                case 0:
                                case 6:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.context != null && message.hasOwnProperty("context"))
                                if (!$util.isString(message.context))
                                    return "context: string expected";
                            if (message.skillNameSnippet != null && message.hasOwnProperty("skillNameSnippet"))
                                if (!$util.isString(message.skillNameSnippet))
                                    return "skillNameSnippet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Skill message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Skill} Skill
                         */
                        Skill.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Skill)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Skill();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.lastUsedDate != null) {
                                if (typeof object.lastUsedDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Skill.lastUsedDate: object expected");
                                message.lastUsedDate = $root.google.type.Date.fromObject(object.lastUsedDate);
                            }
                            switch (object.level) {
                            case "SKILL_PROFICIENCY_LEVEL_UNSPECIFIED":
                            case 0:
                                message.level = 0;
                                break;
                            case "UNSKILLED":
                            case 6:
                                message.level = 6;
                                break;
                            case "FUNDAMENTAL_AWARENESS":
                            case 1:
                                message.level = 1;
                                break;
                            case "NOVICE":
                            case 2:
                                message.level = 2;
                                break;
                            case "INTERMEDIATE":
                            case 3:
                                message.level = 3;
                                break;
                            case "ADVANCED":
                            case 4:
                                message.level = 4;
                                break;
                            case "EXPERT":
                            case 5:
                                message.level = 5;
                                break;
                            }
                            if (object.context != null)
                                message.context = String(object.context);
                            if (object.skillNameSnippet != null)
                                message.skillNameSnippet = String(object.skillNameSnippet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Skill message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @static
                         * @param {google.cloud.talent.v4beta1.Skill} message Skill
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Skill.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.displayName = "";
                                object.lastUsedDate = null;
                                object.level = options.enums === String ? "SKILL_PROFICIENCY_LEVEL_UNSPECIFIED" : 0;
                                object.context = "";
                                object.skillNameSnippet = "";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.lastUsedDate != null && message.hasOwnProperty("lastUsedDate"))
                                object.lastUsedDate = $root.google.type.Date.toObject(message.lastUsedDate, options);
                            if (message.level != null && message.hasOwnProperty("level"))
                                object.level = options.enums === String ? $root.google.cloud.talent.v4beta1.SkillProficiencyLevel[message.level] : message.level;
                            if (message.context != null && message.hasOwnProperty("context"))
                                object.context = message.context;
                            if (message.skillNameSnippet != null && message.hasOwnProperty("skillNameSnippet"))
                                object.skillNameSnippet = message.skillNameSnippet;
                            return object;
                        };
    
                        /**
                         * Converts this Skill to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Skill
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Skill.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Skill;
                    })();
    
                    v4beta1.Interview = (function() {
    
                        /**
                         * Properties of an Interview.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IInterview
                         * @property {google.cloud.talent.v4beta1.IRating|null} [rating] Interview rating
                         * @property {google.cloud.talent.v4beta1.Outcome|null} [outcome] Interview outcome
                         */
    
                        /**
                         * Constructs a new Interview.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an Interview.
                         * @implements IInterview
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IInterview=} [properties] Properties to set
                         */
                        function Interview(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Interview rating.
                         * @member {google.cloud.talent.v4beta1.IRating|null|undefined} rating
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @instance
                         */
                        Interview.prototype.rating = null;
    
                        /**
                         * Interview outcome.
                         * @member {google.cloud.talent.v4beta1.Outcome} outcome
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @instance
                         */
                        Interview.prototype.outcome = 0;
    
                        /**
                         * Creates a new Interview instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {google.cloud.talent.v4beta1.IInterview=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Interview} Interview instance
                         */
                        Interview.create = function create(properties) {
                            return new Interview(properties);
                        };
    
                        /**
                         * Encodes the specified Interview message. Does not implicitly {@link google.cloud.talent.v4beta1.Interview.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {google.cloud.talent.v4beta1.IInterview} message Interview message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Interview.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rating != null && message.hasOwnProperty("rating"))
                                $root.google.cloud.talent.v4beta1.Rating.encode(message.rating, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.outcome);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Interview message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Interview.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {google.cloud.talent.v4beta1.IInterview} message Interview message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Interview.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Interview message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Interview} Interview
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Interview.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Interview();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 6:
                                    message.rating = $root.google.cloud.talent.v4beta1.Rating.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.outcome = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Interview message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Interview} Interview
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Interview.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Interview message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Interview.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rating != null && message.hasOwnProperty("rating")) {
                                var error = $root.google.cloud.talent.v4beta1.Rating.verify(message.rating);
                                if (error)
                                    return "rating." + error;
                            }
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                switch (message.outcome) {
                                default:
                                    return "outcome: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an Interview message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Interview} Interview
                         */
                        Interview.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Interview)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Interview();
                            if (object.rating != null) {
                                if (typeof object.rating !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Interview.rating: object expected");
                                message.rating = $root.google.cloud.talent.v4beta1.Rating.fromObject(object.rating);
                            }
                            switch (object.outcome) {
                            case "OUTCOME_UNSPECIFIED":
                            case 0:
                                message.outcome = 0;
                                break;
                            case "POSITIVE":
                            case 1:
                                message.outcome = 1;
                                break;
                            case "NEUTRAL":
                            case 2:
                                message.outcome = 2;
                                break;
                            case "NEGATIVE":
                            case 3:
                                message.outcome = 3;
                                break;
                            case "OUTCOME_NOT_AVAILABLE":
                            case 4:
                                message.outcome = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Interview message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @static
                         * @param {google.cloud.talent.v4beta1.Interview} message Interview
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Interview.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rating = null;
                                object.outcome = options.enums === String ? "OUTCOME_UNSPECIFIED" : 0;
                            }
                            if (message.rating != null && message.hasOwnProperty("rating"))
                                object.rating = $root.google.cloud.talent.v4beta1.Rating.toObject(message.rating, options);
                            if (message.outcome != null && message.hasOwnProperty("outcome"))
                                object.outcome = options.enums === String ? $root.google.cloud.talent.v4beta1.Outcome[message.outcome] : message.outcome;
                            return object;
                        };
    
                        /**
                         * Converts this Interview to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Interview
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Interview.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Interview;
                    })();
    
                    v4beta1.Rating = (function() {
    
                        /**
                         * Properties of a Rating.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IRating
                         * @property {number|null} [overall] Rating overall
                         * @property {number|null} [min] Rating min
                         * @property {number|null} [max] Rating max
                         * @property {number|null} [interval] Rating interval
                         */
    
                        /**
                         * Constructs a new Rating.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Rating.
                         * @implements IRating
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IRating=} [properties] Properties to set
                         */
                        function Rating(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Rating overall.
                         * @member {number} overall
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @instance
                         */
                        Rating.prototype.overall = 0;
    
                        /**
                         * Rating min.
                         * @member {number} min
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @instance
                         */
                        Rating.prototype.min = 0;
    
                        /**
                         * Rating max.
                         * @member {number} max
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @instance
                         */
                        Rating.prototype.max = 0;
    
                        /**
                         * Rating interval.
                         * @member {number} interval
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @instance
                         */
                        Rating.prototype.interval = 0;
    
                        /**
                         * Creates a new Rating instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRating=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Rating} Rating instance
                         */
                        Rating.create = function create(properties) {
                            return new Rating(properties);
                        };
    
                        /**
                         * Encodes the specified Rating message. Does not implicitly {@link google.cloud.talent.v4beta1.Rating.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRating} message Rating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rating.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.overall != null && message.hasOwnProperty("overall"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.overall);
                            if (message.min != null && message.hasOwnProperty("min"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.min);
                            if (message.max != null && message.hasOwnProperty("max"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.max);
                            if (message.interval != null && message.hasOwnProperty("interval"))
                                writer.uint32(/* id 4, wireType 1 =*/33).double(message.interval);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Rating message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Rating.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {google.cloud.talent.v4beta1.IRating} message Rating message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rating.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Rating message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Rating} Rating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rating.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Rating();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.overall = reader.double();
                                    break;
                                case 2:
                                    message.min = reader.double();
                                    break;
                                case 3:
                                    message.max = reader.double();
                                    break;
                                case 4:
                                    message.interval = reader.double();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Rating message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Rating} Rating
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rating.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Rating message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Rating.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.overall != null && message.hasOwnProperty("overall"))
                                if (typeof message.overall !== "number")
                                    return "overall: number expected";
                            if (message.min != null && message.hasOwnProperty("min"))
                                if (typeof message.min !== "number")
                                    return "min: number expected";
                            if (message.max != null && message.hasOwnProperty("max"))
                                if (typeof message.max !== "number")
                                    return "max: number expected";
                            if (message.interval != null && message.hasOwnProperty("interval"))
                                if (typeof message.interval !== "number")
                                    return "interval: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a Rating message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Rating} Rating
                         */
                        Rating.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Rating)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Rating();
                            if (object.overall != null)
                                message.overall = Number(object.overall);
                            if (object.min != null)
                                message.min = Number(object.min);
                            if (object.max != null)
                                message.max = Number(object.max);
                            if (object.interval != null)
                                message.interval = Number(object.interval);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Rating message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @static
                         * @param {google.cloud.talent.v4beta1.Rating} message Rating
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Rating.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.overall = 0;
                                object.min = 0;
                                object.max = 0;
                                object.interval = 0;
                            }
                            if (message.overall != null && message.hasOwnProperty("overall"))
                                object.overall = options.json && !isFinite(message.overall) ? String(message.overall) : message.overall;
                            if (message.min != null && message.hasOwnProperty("min"))
                                object.min = options.json && !isFinite(message.min) ? String(message.min) : message.min;
                            if (message.max != null && message.hasOwnProperty("max"))
                                object.max = options.json && !isFinite(message.max) ? String(message.max) : message.max;
                            if (message.interval != null && message.hasOwnProperty("interval"))
                                object.interval = options.json && !isFinite(message.interval) ? String(message.interval) : message.interval;
                            return object;
                        };
    
                        /**
                         * Converts this Rating to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Rating
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Rating.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Rating;
                    })();
    
                    v4beta1.BatchOperationMetadata = (function() {
    
                        /**
                         * Properties of a BatchOperationMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IBatchOperationMetadata
                         * @property {google.cloud.talent.v4beta1.BatchOperationMetadata.State|null} [state] BatchOperationMetadata state
                         * @property {string|null} [stateDescription] BatchOperationMetadata stateDescription
                         * @property {number|null} [successCount] BatchOperationMetadata successCount
                         * @property {number|null} [failureCount] BatchOperationMetadata failureCount
                         * @property {number|null} [totalCount] BatchOperationMetadata totalCount
                         * @property {google.protobuf.ITimestamp|null} [createTime] BatchOperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] BatchOperationMetadata updateTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] BatchOperationMetadata endTime
                         */
    
                        /**
                         * Constructs a new BatchOperationMetadata.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a BatchOperationMetadata.
                         * @implements IBatchOperationMetadata
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IBatchOperationMetadata=} [properties] Properties to set
                         */
                        function BatchOperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchOperationMetadata state.
                         * @member {google.cloud.talent.v4beta1.BatchOperationMetadata.State} state
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.state = 0;
    
                        /**
                         * BatchOperationMetadata stateDescription.
                         * @member {string} stateDescription
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.stateDescription = "";
    
                        /**
                         * BatchOperationMetadata successCount.
                         * @member {number} successCount
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.successCount = 0;
    
                        /**
                         * BatchOperationMetadata failureCount.
                         * @member {number} failureCount
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.failureCount = 0;
    
                        /**
                         * BatchOperationMetadata totalCount.
                         * @member {number} totalCount
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.totalCount = 0;
    
                        /**
                         * BatchOperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.createTime = null;
    
                        /**
                         * BatchOperationMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.updateTime = null;
    
                        /**
                         * BatchOperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.endTime = null;
    
                        /**
                         * Creates a new BatchOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.BatchOperationMetadata} BatchOperationMetadata instance
                         */
                        BatchOperationMetadata.create = function create(properties) {
                            return new BatchOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchOperationMetadata message. Does not implicitly {@link google.cloud.talent.v4beta1.BatchOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchOperationMetadata} message BatchOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && message.hasOwnProperty("state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.stateDescription != null && message.hasOwnProperty("stateDescription"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateDescription);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.successCount);
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.failureCount);
                            if (message.totalCount != null && message.hasOwnProperty("totalCount"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.totalCount);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.BatchOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchOperationMetadata} message BatchOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.BatchOperationMetadata} BatchOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.BatchOperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = reader.int32();
                                    break;
                                case 2:
                                    message.stateDescription = reader.string();
                                    break;
                                case 3:
                                    message.successCount = reader.int32();
                                    break;
                                case 4:
                                    message.failureCount = reader.int32();
                                    break;
                                case 5:
                                    message.totalCount = reader.int32();
                                    break;
                                case 6:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.BatchOperationMetadata} BatchOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.stateDescription != null && message.hasOwnProperty("stateDescription"))
                                if (!$util.isString(message.stateDescription))
                                    return "stateDescription: string expected";
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount))
                                    return "successCount: integer expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount))
                                    return "failureCount: integer expected";
                            if (message.totalCount != null && message.hasOwnProperty("totalCount"))
                                if (!$util.isInteger(message.totalCount))
                                    return "totalCount: integer expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.BatchOperationMetadata} BatchOperationMetadata
                         */
                        BatchOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.BatchOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.BatchOperationMetadata();
                            switch (object.state) {
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "INITIALIZING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PROCESSING":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUCCEEDED":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "CANCELLING":
                            case 5:
                                message.state = 5;
                                break;
                            case "CANCELLED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.stateDescription != null)
                                message.stateDescription = String(object.stateDescription);
                            if (object.successCount != null)
                                message.successCount = object.successCount | 0;
                            if (object.failureCount != null)
                                message.failureCount = object.failureCount | 0;
                            if (object.totalCount != null)
                                message.totalCount = object.totalCount | 0;
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchOperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchOperationMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchOperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.talent.v4beta1.BatchOperationMetadata} message BatchOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateDescription = "";
                                object.successCount = 0;
                                object.failureCount = 0;
                                object.totalCount = 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.endTime = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.talent.v4beta1.BatchOperationMetadata.State[message.state] : message.state;
                            if (message.stateDescription != null && message.hasOwnProperty("stateDescription"))
                                object.stateDescription = message.stateDescription;
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                object.successCount = message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                object.failureCount = message.failureCount;
                            if (message.totalCount != null && message.hasOwnProperty("totalCount"))
                                object.totalCount = message.totalCount;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this BatchOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.BatchOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.talent.v4beta1.BatchOperationMetadata.State
                         * @enum {string}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} INITIALIZING=1 INITIALIZING value
                         * @property {number} PROCESSING=2 PROCESSING value
                         * @property {number} SUCCEEDED=3 SUCCEEDED value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} CANCELLING=5 CANCELLING value
                         * @property {number} CANCELLED=6 CANCELLED value
                         */
                        BatchOperationMetadata.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INITIALIZING"] = 1;
                            values[valuesById[2] = "PROCESSING"] = 2;
                            values[valuesById[3] = "SUCCEEDED"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "CANCELLING"] = 5;
                            values[valuesById[6] = "CANCELLED"] = 6;
                            return values;
                        })();
    
                        return BatchOperationMetadata;
                    })();
    
                    /**
                     * SkillProficiencyLevel enum.
                     * @name google.cloud.talent.v4beta1.SkillProficiencyLevel
                     * @enum {string}
                     * @property {number} SKILL_PROFICIENCY_LEVEL_UNSPECIFIED=0 SKILL_PROFICIENCY_LEVEL_UNSPECIFIED value
                     * @property {number} UNSKILLED=6 UNSKILLED value
                     * @property {number} FUNDAMENTAL_AWARENESS=1 FUNDAMENTAL_AWARENESS value
                     * @property {number} NOVICE=2 NOVICE value
                     * @property {number} INTERMEDIATE=3 INTERMEDIATE value
                     * @property {number} ADVANCED=4 ADVANCED value
                     * @property {number} EXPERT=5 EXPERT value
                     */
                    v4beta1.SkillProficiencyLevel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SKILL_PROFICIENCY_LEVEL_UNSPECIFIED"] = 0;
                        values[valuesById[6] = "UNSKILLED"] = 6;
                        values[valuesById[1] = "FUNDAMENTAL_AWARENESS"] = 1;
                        values[valuesById[2] = "NOVICE"] = 2;
                        values[valuesById[3] = "INTERMEDIATE"] = 3;
                        values[valuesById[4] = "ADVANCED"] = 4;
                        values[valuesById[5] = "EXPERT"] = 5;
                        return values;
                    })();
    
                    /**
                     * Outcome enum.
                     * @name google.cloud.talent.v4beta1.Outcome
                     * @enum {string}
                     * @property {number} OUTCOME_UNSPECIFIED=0 OUTCOME_UNSPECIFIED value
                     * @property {number} POSITIVE=1 POSITIVE value
                     * @property {number} NEUTRAL=2 NEUTRAL value
                     * @property {number} NEGATIVE=3 NEGATIVE value
                     * @property {number} OUTCOME_NOT_AVAILABLE=4 OUTCOME_NOT_AVAILABLE value
                     */
                    v4beta1.Outcome = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "OUTCOME_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POSITIVE"] = 1;
                        values[valuesById[2] = "NEUTRAL"] = 2;
                        values[valuesById[3] = "NEGATIVE"] = 3;
                        values[valuesById[4] = "OUTCOME_NOT_AVAILABLE"] = 4;
                        return values;
                    })();
    
                    /**
                     * AvailabilitySignalType enum.
                     * @name google.cloud.talent.v4beta1.AvailabilitySignalType
                     * @enum {string}
                     * @property {number} AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED=0 AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED value
                     * @property {number} JOB_APPLICATION=1 JOB_APPLICATION value
                     * @property {number} RESUME_UPDATE=2 RESUME_UPDATE value
                     * @property {number} CANDIDATE_UPDATE=3 CANDIDATE_UPDATE value
                     * @property {number} CLIENT_SUBMISSION=4 CLIENT_SUBMISSION value
                     */
                    v4beta1.AvailabilitySignalType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "JOB_APPLICATION"] = 1;
                        values[valuesById[2] = "RESUME_UPDATE"] = 2;
                        values[valuesById[3] = "CANDIDATE_UPDATE"] = 3;
                        values[valuesById[4] = "CLIENT_SUBMISSION"] = 4;
                        return values;
                    })();
    
                    v4beta1.CompanyService = (function() {
    
                        /**
                         * Constructs a new CompanyService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CompanyService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CompanyService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CompanyService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CompanyService;
    
                        /**
                         * Creates new CompanyService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CompanyService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CompanyService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.CompanyService#createCompany}.
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @typedef CreateCompanyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Company} [response] Company
                         */
    
                        /**
                         * Calls CreateCompany.
                         * @function createCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest} request CreateCompanyRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.CompanyService.CreateCompanyCallback} callback Node-style callback called with the error, if any, and Company
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompanyService.prototype.createCompany = function createCompany(request, callback) {
                            return this.rpcCall(createCompany, $root.google.cloud.talent.v4beta1.CreateCompanyRequest, $root.google.cloud.talent.v4beta1.Company, request, callback);
                        }, "name", { value: "CreateCompany" });
    
                        /**
                         * Calls CreateCompany.
                         * @function createCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest} request CreateCompanyRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Company>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.CompanyService#getCompany}.
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @typedef GetCompanyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Company} [response] Company
                         */
    
                        /**
                         * Calls GetCompany.
                         * @function getCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest} request GetCompanyRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.CompanyService.GetCompanyCallback} callback Node-style callback called with the error, if any, and Company
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompanyService.prototype.getCompany = function getCompany(request, callback) {
                            return this.rpcCall(getCompany, $root.google.cloud.talent.v4beta1.GetCompanyRequest, $root.google.cloud.talent.v4beta1.Company, request, callback);
                        }, "name", { value: "GetCompany" });
    
                        /**
                         * Calls GetCompany.
                         * @function getCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest} request GetCompanyRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Company>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.CompanyService#updateCompany}.
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @typedef UpdateCompanyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Company} [response] Company
                         */
    
                        /**
                         * Calls UpdateCompany.
                         * @function updateCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest} request UpdateCompanyRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.CompanyService.UpdateCompanyCallback} callback Node-style callback called with the error, if any, and Company
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompanyService.prototype.updateCompany = function updateCompany(request, callback) {
                            return this.rpcCall(updateCompany, $root.google.cloud.talent.v4beta1.UpdateCompanyRequest, $root.google.cloud.talent.v4beta1.Company, request, callback);
                        }, "name", { value: "UpdateCompany" });
    
                        /**
                         * Calls UpdateCompany.
                         * @function updateCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest} request UpdateCompanyRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Company>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.CompanyService#deleteCompany}.
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @typedef DeleteCompanyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteCompany.
                         * @function deleteCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest} request DeleteCompanyRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.CompanyService.DeleteCompanyCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompanyService.prototype.deleteCompany = function deleteCompany(request, callback) {
                            return this.rpcCall(deleteCompany, $root.google.cloud.talent.v4beta1.DeleteCompanyRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteCompany" });
    
                        /**
                         * Calls DeleteCompany.
                         * @function deleteCompany
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest} request DeleteCompanyRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.CompanyService#listCompanies}.
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @typedef ListCompaniesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ListCompaniesResponse} [response] ListCompaniesResponse
                         */
    
                        /**
                         * Calls ListCompanies.
                         * @function listCompanies
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest} request ListCompaniesRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.CompanyService.ListCompaniesCallback} callback Node-style callback called with the error, if any, and ListCompaniesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompanyService.prototype.listCompanies = function listCompanies(request, callback) {
                            return this.rpcCall(listCompanies, $root.google.cloud.talent.v4beta1.ListCompaniesRequest, $root.google.cloud.talent.v4beta1.ListCompaniesResponse, request, callback);
                        }, "name", { value: "ListCompanies" });
    
                        /**
                         * Calls ListCompanies.
                         * @function listCompanies
                         * @memberof google.cloud.talent.v4beta1.CompanyService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest} request ListCompaniesRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ListCompaniesResponse>} Promise
                         * @variation 2
                         */
    
                        return CompanyService;
                    })();
    
                    v4beta1.CreateCompanyRequest = (function() {
    
                        /**
                         * Properties of a CreateCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateCompanyRequest
                         * @property {string|null} [parent] CreateCompanyRequest parent
                         * @property {google.cloud.talent.v4beta1.ICompany|null} [company] CreateCompanyRequest company
                         */
    
                        /**
                         * Constructs a new CreateCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateCompanyRequest.
                         * @implements ICreateCompanyRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest=} [properties] Properties to set
                         */
                        function CreateCompanyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateCompanyRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @instance
                         */
                        CreateCompanyRequest.prototype.parent = "";
    
                        /**
                         * CreateCompanyRequest company.
                         * @member {google.cloud.talent.v4beta1.ICompany|null|undefined} company
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @instance
                         */
                        CreateCompanyRequest.prototype.company = null;
    
                        /**
                         * Creates a new CreateCompanyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateCompanyRequest} CreateCompanyRequest instance
                         */
                        CreateCompanyRequest.create = function create(properties) {
                            return new CreateCompanyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateCompanyRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateCompanyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest} message CreateCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCompanyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.company != null && message.hasOwnProperty("company"))
                                $root.google.cloud.talent.v4beta1.Company.encode(message.company, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateCompanyRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateCompanyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateCompanyRequest} message CreateCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCompanyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateCompanyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateCompanyRequest} CreateCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCompanyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateCompanyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.company = $root.google.cloud.talent.v4beta1.Company.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateCompanyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateCompanyRequest} CreateCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCompanyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateCompanyRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateCompanyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.company != null && message.hasOwnProperty("company")) {
                                var error = $root.google.cloud.talent.v4beta1.Company.verify(message.company);
                                if (error)
                                    return "company." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateCompanyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateCompanyRequest} CreateCompanyRequest
                         */
                        CreateCompanyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateCompanyRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateCompanyRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.company != null) {
                                if (typeof object.company !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateCompanyRequest.company: object expected");
                                message.company = $root.google.cloud.talent.v4beta1.Company.fromObject(object.company);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateCompanyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateCompanyRequest} message CreateCompanyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateCompanyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.company = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.company != null && message.hasOwnProperty("company"))
                                object.company = $root.google.cloud.talent.v4beta1.Company.toObject(message.company, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateCompanyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateCompanyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateCompanyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateCompanyRequest;
                    })();
    
                    v4beta1.GetCompanyRequest = (function() {
    
                        /**
                         * Properties of a GetCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IGetCompanyRequest
                         * @property {string|null} [name] GetCompanyRequest name
                         */
    
                        /**
                         * Constructs a new GetCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a GetCompanyRequest.
                         * @implements IGetCompanyRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest=} [properties] Properties to set
                         */
                        function GetCompanyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetCompanyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @instance
                         */
                        GetCompanyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetCompanyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.GetCompanyRequest} GetCompanyRequest instance
                         */
                        GetCompanyRequest.create = function create(properties) {
                            return new GetCompanyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetCompanyRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.GetCompanyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest} message GetCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCompanyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetCompanyRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.GetCompanyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetCompanyRequest} message GetCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCompanyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetCompanyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.GetCompanyRequest} GetCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCompanyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.GetCompanyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetCompanyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.GetCompanyRequest} GetCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCompanyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetCompanyRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetCompanyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetCompanyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.GetCompanyRequest} GetCompanyRequest
                         */
                        GetCompanyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.GetCompanyRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.GetCompanyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetCompanyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.GetCompanyRequest} message GetCompanyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetCompanyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetCompanyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.GetCompanyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetCompanyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetCompanyRequest;
                    })();
    
                    v4beta1.UpdateCompanyRequest = (function() {
    
                        /**
                         * Properties of an UpdateCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IUpdateCompanyRequest
                         * @property {google.cloud.talent.v4beta1.ICompany|null} [company] UpdateCompanyRequest company
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCompanyRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an UpdateCompanyRequest.
                         * @implements IUpdateCompanyRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest=} [properties] Properties to set
                         */
                        function UpdateCompanyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateCompanyRequest company.
                         * @member {google.cloud.talent.v4beta1.ICompany|null|undefined} company
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @instance
                         */
                        UpdateCompanyRequest.prototype.company = null;
    
                        /**
                         * UpdateCompanyRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @instance
                         */
                        UpdateCompanyRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateCompanyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.UpdateCompanyRequest} UpdateCompanyRequest instance
                         */
                        UpdateCompanyRequest.create = function create(properties) {
                            return new UpdateCompanyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateCompanyRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateCompanyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest} message UpdateCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCompanyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.company != null && message.hasOwnProperty("company"))
                                $root.google.cloud.talent.v4beta1.Company.encode(message.company, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateCompanyRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateCompanyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateCompanyRequest} message UpdateCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCompanyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateCompanyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.UpdateCompanyRequest} UpdateCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCompanyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.UpdateCompanyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.company = $root.google.cloud.talent.v4beta1.Company.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateCompanyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.UpdateCompanyRequest} UpdateCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCompanyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateCompanyRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateCompanyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.company != null && message.hasOwnProperty("company")) {
                                var error = $root.google.cloud.talent.v4beta1.Company.verify(message.company);
                                if (error)
                                    return "company." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateCompanyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.UpdateCompanyRequest} UpdateCompanyRequest
                         */
                        UpdateCompanyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.UpdateCompanyRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.UpdateCompanyRequest();
                            if (object.company != null) {
                                if (typeof object.company !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateCompanyRequest.company: object expected");
                                message.company = $root.google.cloud.talent.v4beta1.Company.fromObject(object.company);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateCompanyRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateCompanyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.UpdateCompanyRequest} message UpdateCompanyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateCompanyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.company = null;
                                object.updateMask = null;
                            }
                            if (message.company != null && message.hasOwnProperty("company"))
                                object.company = $root.google.cloud.talent.v4beta1.Company.toObject(message.company, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateCompanyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.UpdateCompanyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateCompanyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateCompanyRequest;
                    })();
    
                    v4beta1.DeleteCompanyRequest = (function() {
    
                        /**
                         * Properties of a DeleteCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeleteCompanyRequest
                         * @property {string|null} [name] DeleteCompanyRequest name
                         */
    
                        /**
                         * Constructs a new DeleteCompanyRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeleteCompanyRequest.
                         * @implements IDeleteCompanyRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest=} [properties] Properties to set
                         */
                        function DeleteCompanyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteCompanyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @instance
                         */
                        DeleteCompanyRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteCompanyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeleteCompanyRequest} DeleteCompanyRequest instance
                         */
                        DeleteCompanyRequest.create = function create(properties) {
                            return new DeleteCompanyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteCompanyRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteCompanyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest} message DeleteCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCompanyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteCompanyRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteCompanyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteCompanyRequest} message DeleteCompanyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCompanyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteCompanyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeleteCompanyRequest} DeleteCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCompanyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeleteCompanyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteCompanyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeleteCompanyRequest} DeleteCompanyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCompanyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteCompanyRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteCompanyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteCompanyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeleteCompanyRequest} DeleteCompanyRequest
                         */
                        DeleteCompanyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeleteCompanyRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeleteCompanyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteCompanyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeleteCompanyRequest} message DeleteCompanyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteCompanyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteCompanyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeleteCompanyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteCompanyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteCompanyRequest;
                    })();
    
                    v4beta1.ListCompaniesRequest = (function() {
    
                        /**
                         * Properties of a ListCompaniesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListCompaniesRequest
                         * @property {string|null} [parent] ListCompaniesRequest parent
                         * @property {string|null} [pageToken] ListCompaniesRequest pageToken
                         * @property {number|null} [pageSize] ListCompaniesRequest pageSize
                         * @property {boolean|null} [requireOpenJobs] ListCompaniesRequest requireOpenJobs
                         */
    
                        /**
                         * Constructs a new ListCompaniesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListCompaniesRequest.
                         * @implements IListCompaniesRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest=} [properties] Properties to set
                         */
                        function ListCompaniesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCompaniesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @instance
                         */
                        ListCompaniesRequest.prototype.parent = "";
    
                        /**
                         * ListCompaniesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @instance
                         */
                        ListCompaniesRequest.prototype.pageToken = "";
    
                        /**
                         * ListCompaniesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @instance
                         */
                        ListCompaniesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListCompaniesRequest requireOpenJobs.
                         * @member {boolean} requireOpenJobs
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @instance
                         */
                        ListCompaniesRequest.prototype.requireOpenJobs = false;
    
                        /**
                         * Creates a new ListCompaniesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesRequest} ListCompaniesRequest instance
                         */
                        ListCompaniesRequest.create = function create(properties) {
                            return new ListCompaniesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListCompaniesRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.ListCompaniesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest} message ListCompaniesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCompaniesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.requireOpenJobs != null && message.hasOwnProperty("requireOpenJobs"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.requireOpenJobs);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCompaniesRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListCompaniesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesRequest} message ListCompaniesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCompaniesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCompaniesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesRequest} ListCompaniesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCompaniesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListCompaniesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageToken = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                case 4:
                                    message.requireOpenJobs = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCompaniesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesRequest} ListCompaniesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCompaniesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCompaniesRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCompaniesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.requireOpenJobs != null && message.hasOwnProperty("requireOpenJobs"))
                                if (typeof message.requireOpenJobs !== "boolean")
                                    return "requireOpenJobs: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCompaniesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesRequest} ListCompaniesRequest
                         */
                        ListCompaniesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListCompaniesRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListCompaniesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.requireOpenJobs != null)
                                message.requireOpenJobs = Boolean(object.requireOpenJobs);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCompaniesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListCompaniesRequest} message ListCompaniesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCompaniesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageToken = "";
                                object.pageSize = 0;
                                object.requireOpenJobs = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.requireOpenJobs != null && message.hasOwnProperty("requireOpenJobs"))
                                object.requireOpenJobs = message.requireOpenJobs;
                            return object;
                        };
    
                        /**
                         * Converts this ListCompaniesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCompaniesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListCompaniesRequest;
                    })();
    
                    v4beta1.ListCompaniesResponse = (function() {
    
                        /**
                         * Properties of a ListCompaniesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListCompaniesResponse
                         * @property {Array.<google.cloud.talent.v4beta1.ICompany>|null} [companies] ListCompaniesResponse companies
                         * @property {string|null} [nextPageToken] ListCompaniesResponse nextPageToken
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] ListCompaniesResponse metadata
                         */
    
                        /**
                         * Constructs a new ListCompaniesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListCompaniesResponse.
                         * @implements IListCompaniesResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListCompaniesResponse=} [properties] Properties to set
                         */
                        function ListCompaniesResponse(properties) {
                            this.companies = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCompaniesResponse companies.
                         * @member {Array.<google.cloud.talent.v4beta1.ICompany>} companies
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @instance
                         */
                        ListCompaniesResponse.prototype.companies = $util.emptyArray;
    
                        /**
                         * ListCompaniesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @instance
                         */
                        ListCompaniesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListCompaniesResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @instance
                         */
                        ListCompaniesResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new ListCompaniesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesResponse} ListCompaniesResponse instance
                         */
                        ListCompaniesResponse.create = function create(properties) {
                            return new ListCompaniesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListCompaniesResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.ListCompaniesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesResponse} message ListCompaniesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCompaniesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.companies != null && message.companies.length)
                                for (var i = 0; i < message.companies.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Company.encode(message.companies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCompaniesResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListCompaniesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListCompaniesResponse} message ListCompaniesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCompaniesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCompaniesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesResponse} ListCompaniesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCompaniesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListCompaniesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.companies && message.companies.length))
                                        message.companies = [];
                                    message.companies.push($root.google.cloud.talent.v4beta1.Company.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCompaniesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesResponse} ListCompaniesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCompaniesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCompaniesResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCompaniesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.companies != null && message.hasOwnProperty("companies")) {
                                if (!Array.isArray(message.companies))
                                    return "companies: array expected";
                                for (var i = 0; i < message.companies.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Company.verify(message.companies[i]);
                                    if (error)
                                        return "companies." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListCompaniesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListCompaniesResponse} ListCompaniesResponse
                         */
                        ListCompaniesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListCompaniesResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListCompaniesResponse();
                            if (object.companies) {
                                if (!Array.isArray(object.companies))
                                    throw TypeError(".google.cloud.talent.v4beta1.ListCompaniesResponse.companies: array expected");
                                message.companies = [];
                                for (var i = 0; i < object.companies.length; ++i) {
                                    if (typeof object.companies[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ListCompaniesResponse.companies: object expected");
                                    message.companies[i] = $root.google.cloud.talent.v4beta1.Company.fromObject(object.companies[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ListCompaniesResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCompaniesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListCompaniesResponse} message ListCompaniesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCompaniesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.companies = [];
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.metadata = null;
                            }
                            if (message.companies && message.companies.length) {
                                object.companies = [];
                                for (var j = 0; j < message.companies.length; ++j)
                                    object.companies[j] = $root.google.cloud.talent.v4beta1.Company.toObject(message.companies[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListCompaniesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListCompaniesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCompaniesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListCompaniesResponse;
                    })();
    
                    v4beta1.Company = (function() {
    
                        /**
                         * Properties of a Company.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICompany
                         * @property {string|null} [name] Company name
                         * @property {string|null} [displayName] Company displayName
                         * @property {string|null} [externalId] Company externalId
                         * @property {google.cloud.talent.v4beta1.CompanySize|null} [size] Company size
                         * @property {string|null} [headquartersAddress] Company headquartersAddress
                         * @property {boolean|null} [hiringAgency] Company hiringAgency
                         * @property {string|null} [eeoText] Company eeoText
                         * @property {string|null} [websiteUri] Company websiteUri
                         * @property {string|null} [careerSiteUri] Company careerSiteUri
                         * @property {string|null} [imageUri] Company imageUri
                         * @property {Array.<string>|null} [keywordSearchableJobCustomAttributes] Company keywordSearchableJobCustomAttributes
                         * @property {google.cloud.talent.v4beta1.Company.IDerivedInfo|null} [derivedInfo] Company derivedInfo
                         * @property {boolean|null} [suspended] Company suspended
                         */
    
                        /**
                         * Constructs a new Company.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Company.
                         * @implements ICompany
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICompany=} [properties] Properties to set
                         */
                        function Company(properties) {
                            this.keywordSearchableJobCustomAttributes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Company name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.name = "";
    
                        /**
                         * Company displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.displayName = "";
    
                        /**
                         * Company externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.externalId = "";
    
                        /**
                         * Company size.
                         * @member {google.cloud.talent.v4beta1.CompanySize} size
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.size = 0;
    
                        /**
                         * Company headquartersAddress.
                         * @member {string} headquartersAddress
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.headquartersAddress = "";
    
                        /**
                         * Company hiringAgency.
                         * @member {boolean} hiringAgency
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.hiringAgency = false;
    
                        /**
                         * Company eeoText.
                         * @member {string} eeoText
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.eeoText = "";
    
                        /**
                         * Company websiteUri.
                         * @member {string} websiteUri
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.websiteUri = "";
    
                        /**
                         * Company careerSiteUri.
                         * @member {string} careerSiteUri
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.careerSiteUri = "";
    
                        /**
                         * Company imageUri.
                         * @member {string} imageUri
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.imageUri = "";
    
                        /**
                         * Company keywordSearchableJobCustomAttributes.
                         * @member {Array.<string>} keywordSearchableJobCustomAttributes
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.keywordSearchableJobCustomAttributes = $util.emptyArray;
    
                        /**
                         * Company derivedInfo.
                         * @member {google.cloud.talent.v4beta1.Company.IDerivedInfo|null|undefined} derivedInfo
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.derivedInfo = null;
    
                        /**
                         * Company suspended.
                         * @member {boolean} suspended
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         */
                        Company.prototype.suspended = false;
    
                        /**
                         * Creates a new Company instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompany=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Company} Company instance
                         */
                        Company.create = function create(properties) {
                            return new Company(properties);
                        };
    
                        /**
                         * Encodes the specified Company message. Does not implicitly {@link google.cloud.talent.v4beta1.Company.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompany} message Company message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Company.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.externalId);
                            if (message.size != null && message.hasOwnProperty("size"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.size);
                            if (message.headquartersAddress != null && message.hasOwnProperty("headquartersAddress"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.headquartersAddress);
                            if (message.hiringAgency != null && message.hasOwnProperty("hiringAgency"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.hiringAgency);
                            if (message.eeoText != null && message.hasOwnProperty("eeoText"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.eeoText);
                            if (message.websiteUri != null && message.hasOwnProperty("websiteUri"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.websiteUri);
                            if (message.careerSiteUri != null && message.hasOwnProperty("careerSiteUri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.careerSiteUri);
                            if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.imageUri);
                            if (message.keywordSearchableJobCustomAttributes != null && message.keywordSearchableJobCustomAttributes.length)
                                for (var i = 0; i < message.keywordSearchableJobCustomAttributes.length; ++i)
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.keywordSearchableJobCustomAttributes[i]);
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo"))
                                $root.google.cloud.talent.v4beta1.Company.DerivedInfo.encode(message.derivedInfo, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.suspended != null && message.hasOwnProperty("suspended"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.suspended);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Company message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Company.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompany} message Company message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Company.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Company message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Company} Company
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Company.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Company();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.displayName = reader.string();
                                    break;
                                case 3:
                                    message.externalId = reader.string();
                                    break;
                                case 4:
                                    message.size = reader.int32();
                                    break;
                                case 5:
                                    message.headquartersAddress = reader.string();
                                    break;
                                case 6:
                                    message.hiringAgency = reader.bool();
                                    break;
                                case 7:
                                    message.eeoText = reader.string();
                                    break;
                                case 8:
                                    message.websiteUri = reader.string();
                                    break;
                                case 9:
                                    message.careerSiteUri = reader.string();
                                    break;
                                case 10:
                                    message.imageUri = reader.string();
                                    break;
                                case 11:
                                    if (!(message.keywordSearchableJobCustomAttributes && message.keywordSearchableJobCustomAttributes.length))
                                        message.keywordSearchableJobCustomAttributes = [];
                                    message.keywordSearchableJobCustomAttributes.push(reader.string());
                                    break;
                                case 12:
                                    message.derivedInfo = $root.google.cloud.talent.v4beta1.Company.DerivedInfo.decode(reader, reader.uint32());
                                    break;
                                case 13:
                                    message.suspended = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Company message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Company} Company
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Company.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Company message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Company.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.size != null && message.hasOwnProperty("size"))
                                switch (message.size) {
                                default:
                                    return "size: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headquartersAddress != null && message.hasOwnProperty("headquartersAddress"))
                                if (!$util.isString(message.headquartersAddress))
                                    return "headquartersAddress: string expected";
                            if (message.hiringAgency != null && message.hasOwnProperty("hiringAgency"))
                                if (typeof message.hiringAgency !== "boolean")
                                    return "hiringAgency: boolean expected";
                            if (message.eeoText != null && message.hasOwnProperty("eeoText"))
                                if (!$util.isString(message.eeoText))
                                    return "eeoText: string expected";
                            if (message.websiteUri != null && message.hasOwnProperty("websiteUri"))
                                if (!$util.isString(message.websiteUri))
                                    return "websiteUri: string expected";
                            if (message.careerSiteUri != null && message.hasOwnProperty("careerSiteUri"))
                                if (!$util.isString(message.careerSiteUri))
                                    return "careerSiteUri: string expected";
                            if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                if (!$util.isString(message.imageUri))
                                    return "imageUri: string expected";
                            if (message.keywordSearchableJobCustomAttributes != null && message.hasOwnProperty("keywordSearchableJobCustomAttributes")) {
                                if (!Array.isArray(message.keywordSearchableJobCustomAttributes))
                                    return "keywordSearchableJobCustomAttributes: array expected";
                                for (var i = 0; i < message.keywordSearchableJobCustomAttributes.length; ++i)
                                    if (!$util.isString(message.keywordSearchableJobCustomAttributes[i]))
                                        return "keywordSearchableJobCustomAttributes: string[] expected";
                            }
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.Company.DerivedInfo.verify(message.derivedInfo);
                                if (error)
                                    return "derivedInfo." + error;
                            }
                            if (message.suspended != null && message.hasOwnProperty("suspended"))
                                if (typeof message.suspended !== "boolean")
                                    return "suspended: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a Company message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Company} Company
                         */
                        Company.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Company)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Company();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            switch (object.size) {
                            case "COMPANY_SIZE_UNSPECIFIED":
                            case 0:
                                message.size = 0;
                                break;
                            case "MINI":
                            case 1:
                                message.size = 1;
                                break;
                            case "SMALL":
                            case 2:
                                message.size = 2;
                                break;
                            case "SMEDIUM":
                            case 3:
                                message.size = 3;
                                break;
                            case "MEDIUM":
                            case 4:
                                message.size = 4;
                                break;
                            case "BIG":
                            case 5:
                                message.size = 5;
                                break;
                            case "BIGGER":
                            case 6:
                                message.size = 6;
                                break;
                            case "GIANT":
                            case 7:
                                message.size = 7;
                                break;
                            }
                            if (object.headquartersAddress != null)
                                message.headquartersAddress = String(object.headquartersAddress);
                            if (object.hiringAgency != null)
                                message.hiringAgency = Boolean(object.hiringAgency);
                            if (object.eeoText != null)
                                message.eeoText = String(object.eeoText);
                            if (object.websiteUri != null)
                                message.websiteUri = String(object.websiteUri);
                            if (object.careerSiteUri != null)
                                message.careerSiteUri = String(object.careerSiteUri);
                            if (object.imageUri != null)
                                message.imageUri = String(object.imageUri);
                            if (object.keywordSearchableJobCustomAttributes) {
                                if (!Array.isArray(object.keywordSearchableJobCustomAttributes))
                                    throw TypeError(".google.cloud.talent.v4beta1.Company.keywordSearchableJobCustomAttributes: array expected");
                                message.keywordSearchableJobCustomAttributes = [];
                                for (var i = 0; i < object.keywordSearchableJobCustomAttributes.length; ++i)
                                    message.keywordSearchableJobCustomAttributes[i] = String(object.keywordSearchableJobCustomAttributes[i]);
                            }
                            if (object.derivedInfo != null) {
                                if (typeof object.derivedInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Company.derivedInfo: object expected");
                                message.derivedInfo = $root.google.cloud.talent.v4beta1.Company.DerivedInfo.fromObject(object.derivedInfo);
                            }
                            if (object.suspended != null)
                                message.suspended = Boolean(object.suspended);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Company message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @static
                         * @param {google.cloud.talent.v4beta1.Company} message Company
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Company.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.keywordSearchableJobCustomAttributes = [];
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.externalId = "";
                                object.size = options.enums === String ? "COMPANY_SIZE_UNSPECIFIED" : 0;
                                object.headquartersAddress = "";
                                object.hiringAgency = false;
                                object.eeoText = "";
                                object.websiteUri = "";
                                object.careerSiteUri = "";
                                object.imageUri = "";
                                object.derivedInfo = null;
                                object.suspended = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.size != null && message.hasOwnProperty("size"))
                                object.size = options.enums === String ? $root.google.cloud.talent.v4beta1.CompanySize[message.size] : message.size;
                            if (message.headquartersAddress != null && message.hasOwnProperty("headquartersAddress"))
                                object.headquartersAddress = message.headquartersAddress;
                            if (message.hiringAgency != null && message.hasOwnProperty("hiringAgency"))
                                object.hiringAgency = message.hiringAgency;
                            if (message.eeoText != null && message.hasOwnProperty("eeoText"))
                                object.eeoText = message.eeoText;
                            if (message.websiteUri != null && message.hasOwnProperty("websiteUri"))
                                object.websiteUri = message.websiteUri;
                            if (message.careerSiteUri != null && message.hasOwnProperty("careerSiteUri"))
                                object.careerSiteUri = message.careerSiteUri;
                            if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                object.imageUri = message.imageUri;
                            if (message.keywordSearchableJobCustomAttributes && message.keywordSearchableJobCustomAttributes.length) {
                                object.keywordSearchableJobCustomAttributes = [];
                                for (var j = 0; j < message.keywordSearchableJobCustomAttributes.length; ++j)
                                    object.keywordSearchableJobCustomAttributes[j] = message.keywordSearchableJobCustomAttributes[j];
                            }
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo"))
                                object.derivedInfo = $root.google.cloud.talent.v4beta1.Company.DerivedInfo.toObject(message.derivedInfo, options);
                            if (message.suspended != null && message.hasOwnProperty("suspended"))
                                object.suspended = message.suspended;
                            return object;
                        };
    
                        /**
                         * Converts this Company to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Company
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Company.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        Company.DerivedInfo = (function() {
    
                            /**
                             * Properties of a DerivedInfo.
                             * @memberof google.cloud.talent.v4beta1.Company
                             * @interface IDerivedInfo
                             * @property {google.cloud.talent.v4beta1.ILocation|null} [headquartersLocation] DerivedInfo headquartersLocation
                             */
    
                            /**
                             * Constructs a new DerivedInfo.
                             * @memberof google.cloud.talent.v4beta1.Company
                             * @classdesc Represents a DerivedInfo.
                             * @implements IDerivedInfo
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.Company.IDerivedInfo=} [properties] Properties to set
                             */
                            function DerivedInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DerivedInfo headquartersLocation.
                             * @member {google.cloud.talent.v4beta1.ILocation|null|undefined} headquartersLocation
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @instance
                             */
                            DerivedInfo.prototype.headquartersLocation = null;
    
                            /**
                             * Creates a new DerivedInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Company.IDerivedInfo=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.Company.DerivedInfo} DerivedInfo instance
                             */
                            DerivedInfo.create = function create(properties) {
                                return new DerivedInfo(properties);
                            };
    
                            /**
                             * Encodes the specified DerivedInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.Company.DerivedInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Company.IDerivedInfo} message DerivedInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DerivedInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.headquartersLocation != null && message.hasOwnProperty("headquartersLocation"))
                                    $root.google.cloud.talent.v4beta1.Location.encode(message.headquartersLocation, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DerivedInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Company.DerivedInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Company.IDerivedInfo} message DerivedInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DerivedInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DerivedInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.Company.DerivedInfo} DerivedInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DerivedInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Company.DerivedInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.headquartersLocation = $root.google.cloud.talent.v4beta1.Location.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DerivedInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.Company.DerivedInfo} DerivedInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DerivedInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DerivedInfo message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DerivedInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.headquartersLocation != null && message.hasOwnProperty("headquartersLocation")) {
                                    var error = $root.google.cloud.talent.v4beta1.Location.verify(message.headquartersLocation);
                                    if (error)
                                        return "headquartersLocation." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a DerivedInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.Company.DerivedInfo} DerivedInfo
                             */
                            DerivedInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.Company.DerivedInfo)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.Company.DerivedInfo();
                                if (object.headquartersLocation != null) {
                                    if (typeof object.headquartersLocation !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Company.DerivedInfo.headquartersLocation: object expected");
                                    message.headquartersLocation = $root.google.cloud.talent.v4beta1.Location.fromObject(object.headquartersLocation);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DerivedInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Company.DerivedInfo} message DerivedInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DerivedInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.headquartersLocation = null;
                                if (message.headquartersLocation != null && message.hasOwnProperty("headquartersLocation"))
                                    object.headquartersLocation = $root.google.cloud.talent.v4beta1.Location.toObject(message.headquartersLocation, options);
                                return object;
                            };
    
                            /**
                             * Converts this DerivedInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.Company.DerivedInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DerivedInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return DerivedInfo;
                        })();
    
                        return Company;
                    })();
    
                    v4beta1.Completion = (function() {
    
                        /**
                         * Constructs a new Completion service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Completion
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Completion(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Completion.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Completion;
    
                        /**
                         * Creates new Completion service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Completion
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Completion} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Completion.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.Completion#completeQuery}.
                         * @memberof google.cloud.talent.v4beta1.Completion
                         * @typedef CompleteQueryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.CompleteQueryResponse} [response] CompleteQueryResponse
                         */
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.talent.v4beta1.Completion
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.Completion.CompleteQueryCallback} callback Node-style callback called with the error, if any, and CompleteQueryResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Completion.prototype.completeQuery = function completeQuery(request, callback) {
                            return this.rpcCall(completeQuery, $root.google.cloud.talent.v4beta1.CompleteQueryRequest, $root.google.cloud.talent.v4beta1.CompleteQueryResponse, request, callback);
                        }, "name", { value: "CompleteQuery" });
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.talent.v4beta1.Completion
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.CompleteQueryResponse>} Promise
                         * @variation 2
                         */
    
                        return Completion;
                    })();
    
                    v4beta1.CompleteQueryRequest = (function() {
    
                        /**
                         * Properties of a CompleteQueryRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICompleteQueryRequest
                         * @property {string|null} [parent] CompleteQueryRequest parent
                         * @property {string|null} [query] CompleteQueryRequest query
                         * @property {Array.<string>|null} [languageCodes] CompleteQueryRequest languageCodes
                         * @property {number|null} [pageSize] CompleteQueryRequest pageSize
                         * @property {string|null} [company] CompleteQueryRequest company
                         * @property {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionScope|null} [scope] CompleteQueryRequest scope
                         * @property {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType|null} [type] CompleteQueryRequest type
                         */
    
                        /**
                         * Constructs a new CompleteQueryRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CompleteQueryRequest.
                         * @implements ICompleteQueryRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest=} [properties] Properties to set
                         */
                        function CompleteQueryRequest(properties) {
                            this.languageCodes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.parent = "";
    
                        /**
                         * CompleteQueryRequest query.
                         * @member {string} query
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.query = "";
    
                        /**
                         * CompleteQueryRequest languageCodes.
                         * @member {Array.<string>} languageCodes
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.languageCodes = $util.emptyArray;
    
                        /**
                         * CompleteQueryRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.pageSize = 0;
    
                        /**
                         * CompleteQueryRequest company.
                         * @member {string} company
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.company = "";
    
                        /**
                         * CompleteQueryRequest scope.
                         * @member {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionScope} scope
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.scope = 0;
    
                        /**
                         * CompleteQueryRequest type.
                         * @member {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType} type
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.type = 0;
    
                        /**
                         * Creates a new CompleteQueryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryRequest} CompleteQueryRequest instance
                         */
                        CompleteQueryRequest.create = function create(properties) {
                            return new CompleteQueryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.query != null && message.hasOwnProperty("query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            if (message.languageCodes != null && message.languageCodes.length)
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCodes[i]);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.company != null && message.hasOwnProperty("company"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.company);
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.scope);
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompleteQueryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.query = reader.string();
                                    break;
                                case 3:
                                    if (!(message.languageCodes && message.languageCodes.length))
                                        message.languageCodes = [];
                                    message.languageCodes.push(reader.string());
                                    break;
                                case 4:
                                    message.pageSize = reader.int32();
                                    break;
                                case 5:
                                    message.company = reader.string();
                                    break;
                                case 6:
                                    message.scope = reader.int32();
                                    break;
                                case 7:
                                    message.type = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.languageCodes != null && message.hasOwnProperty("languageCodes")) {
                                if (!Array.isArray(message.languageCodes))
                                    return "languageCodes: array expected";
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    if (!$util.isString(message.languageCodes[i]))
                                        return "languageCodes: string[] expected";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.company != null && message.hasOwnProperty("company"))
                                if (!$util.isString(message.company))
                                    return "company: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                switch (message.scope) {
                                default:
                                    return "scope: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryRequest} CompleteQueryRequest
                         */
                        CompleteQueryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CompleteQueryRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CompleteQueryRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.languageCodes) {
                                if (!Array.isArray(object.languageCodes))
                                    throw TypeError(".google.cloud.talent.v4beta1.CompleteQueryRequest.languageCodes: array expected");
                                message.languageCodes = [];
                                for (var i = 0; i < object.languageCodes.length; ++i)
                                    message.languageCodes[i] = String(object.languageCodes[i]);
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.company != null)
                                message.company = String(object.company);
                            switch (object.scope) {
                            case "COMPLETION_SCOPE_UNSPECIFIED":
                            case 0:
                                message.scope = 0;
                                break;
                            case "TENANT":
                            case 1:
                                message.scope = 1;
                                break;
                            case "PUBLIC":
                            case 2:
                                message.scope = 2;
                                break;
                            }
                            switch (object.type) {
                            case "COMPLETION_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "JOB_TITLE":
                            case 1:
                                message.type = 1;
                                break;
                            case "COMPANY_NAME":
                            case 2:
                                message.type = 2;
                                break;
                            case "COMBINED":
                            case 3:
                                message.type = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CompleteQueryRequest} message CompleteQueryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.languageCodes = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.query = "";
                                object.pageSize = 0;
                                object.company = "";
                                object.scope = options.enums === String ? "COMPLETION_SCOPE_UNSPECIFIED" : 0;
                                object.type = options.enums === String ? "COMPLETION_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.languageCodes && message.languageCodes.length) {
                                object.languageCodes = [];
                                for (var j = 0; j < message.languageCodes.length; ++j)
                                    object.languageCodes[j] = message.languageCodes[j];
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.company != null && message.hasOwnProperty("company"))
                                object.company = message.company;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = options.enums === String ? $root.google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionScope[message.scope] : message.scope;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * CompletionScope enum.
                         * @name google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionScope
                         * @enum {string}
                         * @property {number} COMPLETION_SCOPE_UNSPECIFIED=0 COMPLETION_SCOPE_UNSPECIFIED value
                         * @property {number} TENANT=1 TENANT value
                         * @property {number} PUBLIC=2 PUBLIC value
                         */
                        CompleteQueryRequest.CompletionScope = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMPLETION_SCOPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TENANT"] = 1;
                            values[valuesById[2] = "PUBLIC"] = 2;
                            return values;
                        })();
    
                        /**
                         * CompletionType enum.
                         * @name google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType
                         * @enum {string}
                         * @property {number} COMPLETION_TYPE_UNSPECIFIED=0 COMPLETION_TYPE_UNSPECIFIED value
                         * @property {number} JOB_TITLE=1 JOB_TITLE value
                         * @property {number} COMPANY_NAME=2 COMPANY_NAME value
                         * @property {number} COMBINED=3 COMBINED value
                         */
                        CompleteQueryRequest.CompletionType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMPLETION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "JOB_TITLE"] = 1;
                            values[valuesById[2] = "COMPANY_NAME"] = 2;
                            values[valuesById[3] = "COMBINED"] = 3;
                            return values;
                        })();
    
                        return CompleteQueryRequest;
                    })();
    
                    v4beta1.CompleteQueryResponse = (function() {
    
                        /**
                         * Properties of a CompleteQueryResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICompleteQueryResponse
                         * @property {Array.<google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult>|null} [completionResults] CompleteQueryResponse completionResults
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] CompleteQueryResponse metadata
                         */
    
                        /**
                         * Constructs a new CompleteQueryResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CompleteQueryResponse.
                         * @implements ICompleteQueryResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryResponse=} [properties] Properties to set
                         */
                        function CompleteQueryResponse(properties) {
                            this.completionResults = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryResponse completionResults.
                         * @member {Array.<google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult>} completionResults
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @instance
                         */
                        CompleteQueryResponse.prototype.completionResults = $util.emptyArray;
    
                        /**
                         * CompleteQueryResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @instance
                         */
                        CompleteQueryResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new CompleteQueryResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse} CompleteQueryResponse instance
                         */
                        CompleteQueryResponse.create = function create(properties) {
                            return new CompleteQueryResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.completionResults != null && message.completionResults.length)
                                for (var i = 0; i < message.completionResults.length; ++i)
                                    $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.encode(message.completionResults[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompleteQueryResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.completionResults && message.completionResults.length))
                                        message.completionResults = [];
                                    message.completionResults.push($root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.completionResults != null && message.hasOwnProperty("completionResults")) {
                                if (!Array.isArray(message.completionResults))
                                    return "completionResults: array expected";
                                for (var i = 0; i < message.completionResults.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.verify(message.completionResults[i]);
                                    if (error)
                                        return "completionResults." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse} CompleteQueryResponse
                         */
                        CompleteQueryResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CompleteQueryResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CompleteQueryResponse();
                            if (object.completionResults) {
                                if (!Array.isArray(object.completionResults))
                                    throw TypeError(".google.cloud.talent.v4beta1.CompleteQueryResponse.completionResults: array expected");
                                message.completionResults = [];
                                for (var i = 0; i < object.completionResults.length; ++i) {
                                    if (typeof object.completionResults[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.CompleteQueryResponse.completionResults: object expected");
                                    message.completionResults[i] = $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.fromObject(object.completionResults[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CompleteQueryResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.CompleteQueryResponse} message CompleteQueryResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.completionResults = [];
                            if (options.defaults)
                                object.metadata = null;
                            if (message.completionResults && message.completionResults.length) {
                                object.completionResults = [];
                                for (var j = 0; j < message.completionResults.length; ++j)
                                    object.completionResults[j] = $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.toObject(message.completionResults[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        CompleteQueryResponse.CompletionResult = (function() {
    
                            /**
                             * Properties of a CompletionResult.
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                             * @interface ICompletionResult
                             * @property {string|null} [suggestion] CompletionResult suggestion
                             * @property {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType|null} [type] CompletionResult type
                             * @property {string|null} [imageUri] CompletionResult imageUri
                             */
    
                            /**
                             * Constructs a new CompletionResult.
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse
                             * @classdesc Represents a CompletionResult.
                             * @implements ICompletionResult
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult=} [properties] Properties to set
                             */
                            function CompletionResult(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CompletionResult suggestion.
                             * @member {string} suggestion
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @instance
                             */
                            CompletionResult.prototype.suggestion = "";
    
                            /**
                             * CompletionResult type.
                             * @member {google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType} type
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @instance
                             */
                            CompletionResult.prototype.type = 0;
    
                            /**
                             * CompletionResult imageUri.
                             * @member {string} imageUri
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @instance
                             */
                            CompletionResult.prototype.imageUri = "";
    
                            /**
                             * Creates a new CompletionResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult} CompletionResult instance
                             */
                            CompletionResult.create = function create(properties) {
                                return new CompletionResult(properties);
                            };
    
                            /**
                             * Encodes the specified CompletionResult message. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult} message CompletionResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompletionResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.suggestion);
                                if (message.type != null && message.hasOwnProperty("type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.imageUri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CompletionResult message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompleteQueryResponse.ICompletionResult} message CompletionResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CompletionResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CompletionResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult} CompletionResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompletionResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.suggestion = reader.string();
                                        break;
                                    case 2:
                                        message.type = reader.int32();
                                        break;
                                    case 3:
                                        message.imageUri = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CompletionResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult} CompletionResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CompletionResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CompletionResult message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CompletionResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    if (!$util.isString(message.suggestion))
                                        return "suggestion: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                    if (!$util.isString(message.imageUri))
                                        return "imageUri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CompletionResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult} CompletionResult
                             */
                            CompletionResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult();
                                if (object.suggestion != null)
                                    message.suggestion = String(object.suggestion);
                                switch (object.type) {
                                case "COMPLETION_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "JOB_TITLE":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "COMPANY_NAME":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "COMBINED":
                                case 3:
                                    message.type = 3;
                                    break;
                                }
                                if (object.imageUri != null)
                                    message.imageUri = String(object.imageUri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CompletionResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult} message CompletionResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CompletionResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.suggestion = "";
                                    object.type = options.enums === String ? "COMPLETION_TYPE_UNSPECIFIED" : 0;
                                    object.imageUri = "";
                                }
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    object.suggestion = message.suggestion;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.CompleteQueryRequest.CompletionType[message.type] : message.type;
                                if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                    object.imageUri = message.imageUri;
                                return object;
                            };
    
                            /**
                             * Converts this CompletionResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.CompleteQueryResponse.CompletionResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CompletionResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return CompletionResult;
                        })();
    
                        return CompleteQueryResponse;
                    })();
    
                    v4beta1.EventService = (function() {
    
                        /**
                         * Constructs a new EventService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an EventService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function EventService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (EventService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = EventService;
    
                        /**
                         * Creates new EventService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.EventService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {EventService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        EventService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.EventService#createClientEvent}.
                         * @memberof google.cloud.talent.v4beta1.EventService
                         * @typedef CreateClientEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ClientEvent} [response] ClientEvent
                         */
    
                        /**
                         * Calls CreateClientEvent.
                         * @function createClientEvent
                         * @memberof google.cloud.talent.v4beta1.EventService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest} request CreateClientEventRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.EventService.CreateClientEventCallback} callback Node-style callback called with the error, if any, and ClientEvent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(EventService.prototype.createClientEvent = function createClientEvent(request, callback) {
                            return this.rpcCall(createClientEvent, $root.google.cloud.talent.v4beta1.CreateClientEventRequest, $root.google.cloud.talent.v4beta1.ClientEvent, request, callback);
                        }, "name", { value: "CreateClientEvent" });
    
                        /**
                         * Calls CreateClientEvent.
                         * @function createClientEvent
                         * @memberof google.cloud.talent.v4beta1.EventService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest} request CreateClientEventRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ClientEvent>} Promise
                         * @variation 2
                         */
    
                        return EventService;
                    })();
    
                    v4beta1.CreateClientEventRequest = (function() {
    
                        /**
                         * Properties of a CreateClientEventRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateClientEventRequest
                         * @property {string|null} [parent] CreateClientEventRequest parent
                         * @property {google.cloud.talent.v4beta1.IClientEvent|null} [clientEvent] CreateClientEventRequest clientEvent
                         */
    
                        /**
                         * Constructs a new CreateClientEventRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateClientEventRequest.
                         * @implements ICreateClientEventRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest=} [properties] Properties to set
                         */
                        function CreateClientEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateClientEventRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @instance
                         */
                        CreateClientEventRequest.prototype.parent = "";
    
                        /**
                         * CreateClientEventRequest clientEvent.
                         * @member {google.cloud.talent.v4beta1.IClientEvent|null|undefined} clientEvent
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @instance
                         */
                        CreateClientEventRequest.prototype.clientEvent = null;
    
                        /**
                         * Creates a new CreateClientEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateClientEventRequest} CreateClientEventRequest instance
                         */
                        CreateClientEventRequest.create = function create(properties) {
                            return new CreateClientEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateClientEventRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateClientEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest} message CreateClientEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClientEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.clientEvent != null && message.hasOwnProperty("clientEvent"))
                                $root.google.cloud.talent.v4beta1.ClientEvent.encode(message.clientEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateClientEventRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateClientEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateClientEventRequest} message CreateClientEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClientEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateClientEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateClientEventRequest} CreateClientEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClientEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateClientEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.clientEvent = $root.google.cloud.talent.v4beta1.ClientEvent.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateClientEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateClientEventRequest} CreateClientEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClientEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateClientEventRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateClientEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.clientEvent != null && message.hasOwnProperty("clientEvent")) {
                                var error = $root.google.cloud.talent.v4beta1.ClientEvent.verify(message.clientEvent);
                                if (error)
                                    return "clientEvent." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateClientEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateClientEventRequest} CreateClientEventRequest
                         */
                        CreateClientEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateClientEventRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateClientEventRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.clientEvent != null) {
                                if (typeof object.clientEvent !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateClientEventRequest.clientEvent: object expected");
                                message.clientEvent = $root.google.cloud.talent.v4beta1.ClientEvent.fromObject(object.clientEvent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateClientEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateClientEventRequest} message CreateClientEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateClientEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.clientEvent = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.clientEvent != null && message.hasOwnProperty("clientEvent"))
                                object.clientEvent = $root.google.cloud.talent.v4beta1.ClientEvent.toObject(message.clientEvent, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateClientEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateClientEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateClientEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateClientEventRequest;
                    })();
    
                    v4beta1.ClientEvent = (function() {
    
                        /**
                         * Properties of a ClientEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IClientEvent
                         * @property {string|null} [requestId] ClientEvent requestId
                         * @property {string|null} [eventId] ClientEvent eventId
                         * @property {google.protobuf.ITimestamp|null} [createTime] ClientEvent createTime
                         * @property {google.cloud.talent.v4beta1.IJobEvent|null} [jobEvent] ClientEvent jobEvent
                         * @property {google.cloud.talent.v4beta1.IProfileEvent|null} [profileEvent] ClientEvent profileEvent
                         * @property {string|null} [eventNotes] ClientEvent eventNotes
                         */
    
                        /**
                         * Constructs a new ClientEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ClientEvent.
                         * @implements IClientEvent
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IClientEvent=} [properties] Properties to set
                         */
                        function ClientEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClientEvent requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.requestId = "";
    
                        /**
                         * ClientEvent eventId.
                         * @member {string} eventId
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.eventId = "";
    
                        /**
                         * ClientEvent createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.createTime = null;
    
                        /**
                         * ClientEvent jobEvent.
                         * @member {google.cloud.talent.v4beta1.IJobEvent|null|undefined} jobEvent
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.jobEvent = null;
    
                        /**
                         * ClientEvent profileEvent.
                         * @member {google.cloud.talent.v4beta1.IProfileEvent|null|undefined} profileEvent
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.profileEvent = null;
    
                        /**
                         * ClientEvent eventNotes.
                         * @member {string} eventNotes
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        ClientEvent.prototype.eventNotes = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ClientEvent event.
                         * @member {"jobEvent"|"profileEvent"|undefined} event
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         */
                        Object.defineProperty(ClientEvent.prototype, "event", {
                            get: $util.oneOfGetter($oneOfFields = ["jobEvent", "profileEvent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ClientEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IClientEvent=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ClientEvent} ClientEvent instance
                         */
                        ClientEvent.create = function create(properties) {
                            return new ClientEvent(properties);
                        };
    
                        /**
                         * Encodes the specified ClientEvent message. Does not implicitly {@link google.cloud.talent.v4beta1.ClientEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IClientEvent} message ClientEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClientEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.requestId);
                            if (message.eventId != null && message.hasOwnProperty("eventId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.eventId);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.jobEvent != null && message.hasOwnProperty("jobEvent"))
                                $root.google.cloud.talent.v4beta1.JobEvent.encode(message.jobEvent, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.profileEvent != null && message.hasOwnProperty("profileEvent"))
                                $root.google.cloud.talent.v4beta1.ProfileEvent.encode(message.profileEvent, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.eventNotes != null && message.hasOwnProperty("eventNotes"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.eventNotes);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClientEvent message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ClientEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IClientEvent} message ClientEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClientEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClientEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ClientEvent} ClientEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClientEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ClientEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.requestId = reader.string();
                                    break;
                                case 2:
                                    message.eventId = reader.string();
                                    break;
                                case 4:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.jobEvent = $root.google.cloud.talent.v4beta1.JobEvent.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.profileEvent = $root.google.cloud.talent.v4beta1.ProfileEvent.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.eventNotes = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClientEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ClientEvent} ClientEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClientEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClientEvent message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClientEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.eventId != null && message.hasOwnProperty("eventId"))
                                if (!$util.isString(message.eventId))
                                    return "eventId: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.jobEvent != null && message.hasOwnProperty("jobEvent")) {
                                properties.event = 1;
                                {
                                    var error = $root.google.cloud.talent.v4beta1.JobEvent.verify(message.jobEvent);
                                    if (error)
                                        return "jobEvent." + error;
                                }
                            }
                            if (message.profileEvent != null && message.hasOwnProperty("profileEvent")) {
                                if (properties.event === 1)
                                    return "event: multiple values";
                                properties.event = 1;
                                {
                                    var error = $root.google.cloud.talent.v4beta1.ProfileEvent.verify(message.profileEvent);
                                    if (error)
                                        return "profileEvent." + error;
                                }
                            }
                            if (message.eventNotes != null && message.hasOwnProperty("eventNotes"))
                                if (!$util.isString(message.eventNotes))
                                    return "eventNotes: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ClientEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ClientEvent} ClientEvent
                         */
                        ClientEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ClientEvent)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ClientEvent();
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.eventId != null)
                                message.eventId = String(object.eventId);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ClientEvent.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.jobEvent != null) {
                                if (typeof object.jobEvent !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ClientEvent.jobEvent: object expected");
                                message.jobEvent = $root.google.cloud.talent.v4beta1.JobEvent.fromObject(object.jobEvent);
                            }
                            if (object.profileEvent != null) {
                                if (typeof object.profileEvent !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ClientEvent.profileEvent: object expected");
                                message.profileEvent = $root.google.cloud.talent.v4beta1.ProfileEvent.fromObject(object.profileEvent);
                            }
                            if (object.eventNotes != null)
                                message.eventNotes = String(object.eventNotes);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClientEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.ClientEvent} message ClientEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClientEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.requestId = "";
                                object.eventId = "";
                                object.createTime = null;
                                object.eventNotes = "";
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.eventId != null && message.hasOwnProperty("eventId"))
                                object.eventId = message.eventId;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.jobEvent != null && message.hasOwnProperty("jobEvent")) {
                                object.jobEvent = $root.google.cloud.talent.v4beta1.JobEvent.toObject(message.jobEvent, options);
                                if (options.oneofs)
                                    object.event = "jobEvent";
                            }
                            if (message.profileEvent != null && message.hasOwnProperty("profileEvent")) {
                                object.profileEvent = $root.google.cloud.talent.v4beta1.ProfileEvent.toObject(message.profileEvent, options);
                                if (options.oneofs)
                                    object.event = "profileEvent";
                            }
                            if (message.eventNotes != null && message.hasOwnProperty("eventNotes"))
                                object.eventNotes = message.eventNotes;
                            return object;
                        };
    
                        /**
                         * Converts this ClientEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ClientEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClientEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ClientEvent;
                    })();
    
                    v4beta1.JobEvent = (function() {
    
                        /**
                         * Properties of a JobEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IJobEvent
                         * @property {google.cloud.talent.v4beta1.JobEvent.JobEventType|null} [type] JobEvent type
                         * @property {Array.<string>|null} [jobs] JobEvent jobs
                         * @property {string|null} [profile] JobEvent profile
                         */
    
                        /**
                         * Constructs a new JobEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a JobEvent.
                         * @implements IJobEvent
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IJobEvent=} [properties] Properties to set
                         */
                        function JobEvent(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobEvent type.
                         * @member {google.cloud.talent.v4beta1.JobEvent.JobEventType} type
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @instance
                         */
                        JobEvent.prototype.type = 0;
    
                        /**
                         * JobEvent jobs.
                         * @member {Array.<string>} jobs
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @instance
                         */
                        JobEvent.prototype.jobs = $util.emptyArray;
    
                        /**
                         * JobEvent profile.
                         * @member {string} profile
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @instance
                         */
                        JobEvent.prototype.profile = "";
    
                        /**
                         * Creates a new JobEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobEvent=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.JobEvent} JobEvent instance
                         */
                        JobEvent.create = function create(properties) {
                            return new JobEvent(properties);
                        };
    
                        /**
                         * Encodes the specified JobEvent message. Does not implicitly {@link google.cloud.talent.v4beta1.JobEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobEvent} message JobEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobs[i]);
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.profile);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobEvent message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.JobEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobEvent} message JobEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.JobEvent} JobEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.JobEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    if (!(message.jobs && message.jobs.length))
                                        message.jobs = [];
                                    message.jobs.push(reader.string());
                                    break;
                                case 3:
                                    message.profile = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.JobEvent} JobEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobEvent message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                    break;
                                }
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i)
                                    if (!$util.isString(message.jobs[i]))
                                        return "jobs: string[] expected";
                            }
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                if (!$util.isString(message.profile))
                                    return "profile: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a JobEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.JobEvent} JobEvent
                         */
                        JobEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.JobEvent)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.JobEvent();
                            switch (object.type) {
                            case "JOB_EVENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "IMPRESSION":
                            case 1:
                                message.type = 1;
                                break;
                            case "VIEW":
                            case 2:
                                message.type = 2;
                                break;
                            case "VIEW_REDIRECT":
                            case 3:
                                message.type = 3;
                                break;
                            case "APPLICATION_START":
                            case 4:
                                message.type = 4;
                                break;
                            case "APPLICATION_FINISH":
                            case 5:
                                message.type = 5;
                                break;
                            case "APPLICATION_QUICK_SUBMISSION":
                            case 6:
                                message.type = 6;
                                break;
                            case "APPLICATION_REDIRECT":
                            case 7:
                                message.type = 7;
                                break;
                            case "APPLICATION_START_FROM_SEARCH":
                            case 8:
                                message.type = 8;
                                break;
                            case "APPLICATION_REDIRECT_FROM_SEARCH":
                            case 9:
                                message.type = 9;
                                break;
                            case "APPLICATION_COMPANY_SUBMIT":
                            case 10:
                                message.type = 10;
                                break;
                            case "BOOKMARK":
                            case 11:
                                message.type = 11;
                                break;
                            case "NOTIFICATION":
                            case 12:
                                message.type = 12;
                                break;
                            case "HIRED":
                            case 13:
                                message.type = 13;
                                break;
                            case "SENT_CV":
                            case 14:
                                message.type = 14;
                                break;
                            case "INTERVIEW_GRANTED":
                            case 15:
                                message.type = 15;
                                break;
                            }
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobEvent.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i)
                                    message.jobs[i] = String(object.jobs[i]);
                            }
                            if (object.profile != null)
                                message.profile = String(object.profile);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.JobEvent} message JobEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults) {
                                object.type = options.enums === String ? "JOB_EVENT_TYPE_UNSPECIFIED" : 0;
                                object.profile = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.JobEvent.JobEventType[message.type] : message.type;
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = message.jobs[j];
                            }
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                object.profile = message.profile;
                            return object;
                        };
    
                        /**
                         * Converts this JobEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.JobEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * JobEventType enum.
                         * @name google.cloud.talent.v4beta1.JobEvent.JobEventType
                         * @enum {string}
                         * @property {number} JOB_EVENT_TYPE_UNSPECIFIED=0 JOB_EVENT_TYPE_UNSPECIFIED value
                         * @property {number} IMPRESSION=1 IMPRESSION value
                         * @property {number} VIEW=2 VIEW value
                         * @property {number} VIEW_REDIRECT=3 VIEW_REDIRECT value
                         * @property {number} APPLICATION_START=4 APPLICATION_START value
                         * @property {number} APPLICATION_FINISH=5 APPLICATION_FINISH value
                         * @property {number} APPLICATION_QUICK_SUBMISSION=6 APPLICATION_QUICK_SUBMISSION value
                         * @property {number} APPLICATION_REDIRECT=7 APPLICATION_REDIRECT value
                         * @property {number} APPLICATION_START_FROM_SEARCH=8 APPLICATION_START_FROM_SEARCH value
                         * @property {number} APPLICATION_REDIRECT_FROM_SEARCH=9 APPLICATION_REDIRECT_FROM_SEARCH value
                         * @property {number} APPLICATION_COMPANY_SUBMIT=10 APPLICATION_COMPANY_SUBMIT value
                         * @property {number} BOOKMARK=11 BOOKMARK value
                         * @property {number} NOTIFICATION=12 NOTIFICATION value
                         * @property {number} HIRED=13 HIRED value
                         * @property {number} SENT_CV=14 SENT_CV value
                         * @property {number} INTERVIEW_GRANTED=15 INTERVIEW_GRANTED value
                         */
                        JobEvent.JobEventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "JOB_EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IMPRESSION"] = 1;
                            values[valuesById[2] = "VIEW"] = 2;
                            values[valuesById[3] = "VIEW_REDIRECT"] = 3;
                            values[valuesById[4] = "APPLICATION_START"] = 4;
                            values[valuesById[5] = "APPLICATION_FINISH"] = 5;
                            values[valuesById[6] = "APPLICATION_QUICK_SUBMISSION"] = 6;
                            values[valuesById[7] = "APPLICATION_REDIRECT"] = 7;
                            values[valuesById[8] = "APPLICATION_START_FROM_SEARCH"] = 8;
                            values[valuesById[9] = "APPLICATION_REDIRECT_FROM_SEARCH"] = 9;
                            values[valuesById[10] = "APPLICATION_COMPANY_SUBMIT"] = 10;
                            values[valuesById[11] = "BOOKMARK"] = 11;
                            values[valuesById[12] = "NOTIFICATION"] = 12;
                            values[valuesById[13] = "HIRED"] = 13;
                            values[valuesById[14] = "SENT_CV"] = 14;
                            values[valuesById[15] = "INTERVIEW_GRANTED"] = 15;
                            return values;
                        })();
    
                        return JobEvent;
                    })();
    
                    v4beta1.ProfileEvent = (function() {
    
                        /**
                         * Properties of a ProfileEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IProfileEvent
                         * @property {google.cloud.talent.v4beta1.ProfileEvent.ProfileEventType|null} [type] ProfileEvent type
                         * @property {Array.<string>|null} [profiles] ProfileEvent profiles
                         * @property {Array.<string>|null} [jobs] ProfileEvent jobs
                         */
    
                        /**
                         * Constructs a new ProfileEvent.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ProfileEvent.
                         * @implements IProfileEvent
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IProfileEvent=} [properties] Properties to set
                         */
                        function ProfileEvent(properties) {
                            this.profiles = [];
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProfileEvent type.
                         * @member {google.cloud.talent.v4beta1.ProfileEvent.ProfileEventType} type
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @instance
                         */
                        ProfileEvent.prototype.type = 0;
    
                        /**
                         * ProfileEvent profiles.
                         * @member {Array.<string>} profiles
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @instance
                         */
                        ProfileEvent.prototype.profiles = $util.emptyArray;
    
                        /**
                         * ProfileEvent jobs.
                         * @member {Array.<string>} jobs
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @instance
                         */
                        ProfileEvent.prototype.jobs = $util.emptyArray;
    
                        /**
                         * Creates a new ProfileEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileEvent=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ProfileEvent} ProfileEvent instance
                         */
                        ProfileEvent.create = function create(properties) {
                            return new ProfileEvent(properties);
                        };
    
                        /**
                         * Encodes the specified ProfileEvent message. Does not implicitly {@link google.cloud.talent.v4beta1.ProfileEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileEvent} message ProfileEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProfileEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.profiles != null && message.profiles.length)
                                for (var i = 0; i < message.profiles.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.profiles[i]);
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.jobs[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProfileEvent message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ProfileEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileEvent} message ProfileEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProfileEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProfileEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ProfileEvent} ProfileEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProfileEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ProfileEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    if (!(message.profiles && message.profiles.length))
                                        message.profiles = [];
                                    message.profiles.push(reader.string());
                                    break;
                                case 6:
                                    if (!(message.jobs && message.jobs.length))
                                        message.jobs = [];
                                    message.jobs.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProfileEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ProfileEvent} ProfileEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProfileEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProfileEvent message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProfileEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.profiles != null && message.hasOwnProperty("profiles")) {
                                if (!Array.isArray(message.profiles))
                                    return "profiles: array expected";
                                for (var i = 0; i < message.profiles.length; ++i)
                                    if (!$util.isString(message.profiles[i]))
                                        return "profiles: string[] expected";
                            }
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i)
                                    if (!$util.isString(message.jobs[i]))
                                        return "jobs: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProfileEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ProfileEvent} ProfileEvent
                         */
                        ProfileEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ProfileEvent)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ProfileEvent();
                            switch (object.type) {
                            case "PROFILE_EVENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "IMPRESSION":
                            case 1:
                                message.type = 1;
                                break;
                            case "VIEW":
                            case 2:
                                message.type = 2;
                                break;
                            case "BOOKMARK":
                            case 3:
                                message.type = 3;
                                break;
                            }
                            if (object.profiles) {
                                if (!Array.isArray(object.profiles))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileEvent.profiles: array expected");
                                message.profiles = [];
                                for (var i = 0; i < object.profiles.length; ++i)
                                    message.profiles[i] = String(object.profiles[i]);
                            }
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileEvent.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i)
                                    message.jobs[i] = String(object.jobs[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProfileEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @static
                         * @param {google.cloud.talent.v4beta1.ProfileEvent} message ProfileEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProfileEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.profiles = [];
                                object.jobs = [];
                            }
                            if (options.defaults)
                                object.type = options.enums === String ? "PROFILE_EVENT_TYPE_UNSPECIFIED" : 0;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.ProfileEvent.ProfileEventType[message.type] : message.type;
                            if (message.profiles && message.profiles.length) {
                                object.profiles = [];
                                for (var j = 0; j < message.profiles.length; ++j)
                                    object.profiles[j] = message.profiles[j];
                            }
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = message.jobs[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ProfileEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ProfileEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProfileEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * ProfileEventType enum.
                         * @name google.cloud.talent.v4beta1.ProfileEvent.ProfileEventType
                         * @enum {string}
                         * @property {number} PROFILE_EVENT_TYPE_UNSPECIFIED=0 PROFILE_EVENT_TYPE_UNSPECIFIED value
                         * @property {number} IMPRESSION=1 IMPRESSION value
                         * @property {number} VIEW=2 VIEW value
                         * @property {number} BOOKMARK=3 BOOKMARK value
                         */
                        ProfileEvent.ProfileEventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PROFILE_EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IMPRESSION"] = 1;
                            values[valuesById[2] = "VIEW"] = 2;
                            values[valuesById[3] = "BOOKMARK"] = 3;
                            return values;
                        })();
    
                        return ProfileEvent;
                    })();
    
                    v4beta1.JobService = (function() {
    
                        /**
                         * Constructs a new JobService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a JobService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function JobService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (JobService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = JobService;
    
                        /**
                         * Creates new JobService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {JobService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        JobService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#createJob}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef CreateJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Job} [response] Job
                         */
    
                        /**
                         * Calls CreateJob.
                         * @function createJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest} request CreateJobRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.CreateJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.createJob = function createJob(request, callback) {
                            return this.rpcCall(createJob, $root.google.cloud.talent.v4beta1.CreateJobRequest, $root.google.cloud.talent.v4beta1.Job, request, callback);
                        }, "name", { value: "CreateJob" });
    
                        /**
                         * Calls CreateJob.
                         * @function createJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest} request CreateJobRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#batchCreateJobs}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef BatchCreateJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls BatchCreateJobs.
                         * @function batchCreateJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest} request BatchCreateJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.BatchCreateJobsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.batchCreateJobs = function batchCreateJobs(request, callback) {
                            return this.rpcCall(batchCreateJobs, $root.google.cloud.talent.v4beta1.BatchCreateJobsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "BatchCreateJobs" });
    
                        /**
                         * Calls BatchCreateJobs.
                         * @function batchCreateJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest} request BatchCreateJobsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#getJob}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef GetJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Job} [response] Job
                         */
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest} request GetJobRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.GetJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.getJob = function getJob(request, callback) {
                            return this.rpcCall(getJob, $root.google.cloud.talent.v4beta1.GetJobRequest, $root.google.cloud.talent.v4beta1.Job, request, callback);
                        }, "name", { value: "GetJob" });
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest} request GetJobRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#updateJob}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef UpdateJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Job} [response] Job
                         */
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.UpdateJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.updateJob = function updateJob(request, callback) {
                            return this.rpcCall(updateJob, $root.google.cloud.talent.v4beta1.UpdateJobRequest, $root.google.cloud.talent.v4beta1.Job, request, callback);
                        }, "name", { value: "UpdateJob" });
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#batchUpdateJobs}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef BatchUpdateJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls BatchUpdateJobs.
                         * @function batchUpdateJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest} request BatchUpdateJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.BatchUpdateJobsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.batchUpdateJobs = function batchUpdateJobs(request, callback) {
                            return this.rpcCall(batchUpdateJobs, $root.google.cloud.talent.v4beta1.BatchUpdateJobsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "BatchUpdateJobs" });
    
                        /**
                         * Calls BatchUpdateJobs.
                         * @function batchUpdateJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest} request BatchUpdateJobsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#deleteJob}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef DeleteJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.DeleteJobCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.deleteJob = function deleteJob(request, callback) {
                            return this.rpcCall(deleteJob, $root.google.cloud.talent.v4beta1.DeleteJobRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteJob" });
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#batchDeleteJobs}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef BatchDeleteJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls BatchDeleteJobs.
                         * @function batchDeleteJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest} request BatchDeleteJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.BatchDeleteJobsCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.batchDeleteJobs = function batchDeleteJobs(request, callback) {
                            return this.rpcCall(batchDeleteJobs, $root.google.cloud.talent.v4beta1.BatchDeleteJobsRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "BatchDeleteJobs" });
    
                        /**
                         * Calls BatchDeleteJobs.
                         * @function batchDeleteJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest} request BatchDeleteJobsRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#listJobs}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef ListJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ListJobsResponse} [response] ListJobsResponse
                         */
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest} request ListJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.ListJobsCallback} callback Node-style callback called with the error, if any, and ListJobsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.listJobs = function listJobs(request, callback) {
                            return this.rpcCall(listJobs, $root.google.cloud.talent.v4beta1.ListJobsRequest, $root.google.cloud.talent.v4beta1.ListJobsResponse, request, callback);
                        }, "name", { value: "ListJobs" });
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest} request ListJobsRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ListJobsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#searchJobs}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef SearchJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.SearchJobsResponse} [response] SearchJobsResponse
                         */
    
                        /**
                         * Calls SearchJobs.
                         * @function searchJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} request SearchJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.SearchJobsCallback} callback Node-style callback called with the error, if any, and SearchJobsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.searchJobs = function searchJobs(request, callback) {
                            return this.rpcCall(searchJobs, $root.google.cloud.talent.v4beta1.SearchJobsRequest, $root.google.cloud.talent.v4beta1.SearchJobsResponse, request, callback);
                        }, "name", { value: "SearchJobs" });
    
                        /**
                         * Calls SearchJobs.
                         * @function searchJobs
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} request SearchJobsRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.SearchJobsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.JobService#searchJobsForAlert}.
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @typedef SearchJobsForAlertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.SearchJobsResponse} [response] SearchJobsResponse
                         */
    
                        /**
                         * Calls SearchJobsForAlert.
                         * @function searchJobsForAlert
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} request SearchJobsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.JobService.SearchJobsForAlertCallback} callback Node-style callback called with the error, if any, and SearchJobsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobService.prototype.searchJobsForAlert = function searchJobsForAlert(request, callback) {
                            return this.rpcCall(searchJobsForAlert, $root.google.cloud.talent.v4beta1.SearchJobsRequest, $root.google.cloud.talent.v4beta1.SearchJobsResponse, request, callback);
                        }, "name", { value: "SearchJobsForAlert" });
    
                        /**
                         * Calls SearchJobsForAlert.
                         * @function searchJobsForAlert
                         * @memberof google.cloud.talent.v4beta1.JobService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} request SearchJobsRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.SearchJobsResponse>} Promise
                         * @variation 2
                         */
    
                        return JobService;
                    })();
    
                    v4beta1.CreateJobRequest = (function() {
    
                        /**
                         * Properties of a CreateJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateJobRequest
                         * @property {string|null} [parent] CreateJobRequest parent
                         * @property {google.cloud.talent.v4beta1.IJob|null} [job] CreateJobRequest job
                         */
    
                        /**
                         * Constructs a new CreateJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateJobRequest.
                         * @implements ICreateJobRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest=} [properties] Properties to set
                         */
                        function CreateJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateJobRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.parent = "";
    
                        /**
                         * CreateJobRequest job.
                         * @member {google.cloud.talent.v4beta1.IJob|null|undefined} job
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.job = null;
    
                        /**
                         * Creates a new CreateJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateJobRequest} CreateJobRequest instance
                         */
                        CreateJobRequest.create = function create(properties) {
                            return new CreateJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateJobRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest} message CreateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.job != null && message.hasOwnProperty("job"))
                                $root.google.cloud.talent.v4beta1.Job.encode(message.job, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateJobRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateJobRequest} message CreateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateJobRequest} CreateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.job = $root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateJobRequest} CreateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateJobRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.talent.v4beta1.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateJobRequest} CreateJobRequest
                         */
                        CreateJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateJobRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateJobRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateJobRequest.job: object expected");
                                message.job = $root.google.cloud.talent.v4beta1.Job.fromObject(object.job);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateJobRequest} message CreateJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.job = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.talent.v4beta1.Job.toObject(message.job, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateJobRequest;
                    })();
    
                    v4beta1.GetJobRequest = (function() {
    
                        /**
                         * Properties of a GetJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IGetJobRequest
                         * @property {string|null} [name] GetJobRequest name
                         */
    
                        /**
                         * Constructs a new GetJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a GetJobRequest.
                         * @implements IGetJobRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest=} [properties] Properties to set
                         */
                        function GetJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @instance
                         */
                        GetJobRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.GetJobRequest} GetJobRequest instance
                         */
                        GetJobRequest.create = function create(properties) {
                            return new GetJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.GetJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.GetJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.GetJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetJobRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.GetJobRequest} GetJobRequest
                         */
                        GetJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.GetJobRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.GetJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.GetJobRequest} message GetJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.GetJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetJobRequest;
                    })();
    
                    v4beta1.UpdateJobRequest = (function() {
    
                        /**
                         * Properties of an UpdateJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IUpdateJobRequest
                         * @property {google.cloud.talent.v4beta1.IJob|null} [job] UpdateJobRequest job
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateJobRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an UpdateJobRequest.
                         * @implements IUpdateJobRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest=} [properties] Properties to set
                         */
                        function UpdateJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateJobRequest job.
                         * @member {google.cloud.talent.v4beta1.IJob|null|undefined} job
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.job = null;
    
                        /**
                         * UpdateJobRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.UpdateJobRequest} UpdateJobRequest instance
                         */
                        UpdateJobRequest.create = function create(properties) {
                            return new UpdateJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.job != null && message.hasOwnProperty("job"))
                                $root.google.cloud.talent.v4beta1.Job.encode(message.job, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.UpdateJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.job = $root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateJobRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.talent.v4beta1.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.UpdateJobRequest} UpdateJobRequest
                         */
                        UpdateJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.UpdateJobRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.UpdateJobRequest();
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateJobRequest.job: object expected");
                                message.job = $root.google.cloud.talent.v4beta1.Job.fromObject(object.job);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateJobRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.UpdateJobRequest} message UpdateJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.job = null;
                                object.updateMask = null;
                            }
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.talent.v4beta1.Job.toObject(message.job, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.UpdateJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateJobRequest;
                    })();
    
                    v4beta1.DeleteJobRequest = (function() {
    
                        /**
                         * Properties of a DeleteJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeleteJobRequest
                         * @property {string|null} [name] DeleteJobRequest name
                         */
    
                        /**
                         * Constructs a new DeleteJobRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeleteJobRequest.
                         * @implements IDeleteJobRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest=} [properties] Properties to set
                         */
                        function DeleteJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeleteJobRequest} DeleteJobRequest instance
                         */
                        DeleteJobRequest.create = function create(properties) {
                            return new DeleteJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeleteJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteJobRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeleteJobRequest} DeleteJobRequest
                         */
                        DeleteJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeleteJobRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeleteJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeleteJobRequest} message DeleteJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeleteJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteJobRequest;
                    })();
    
                    v4beta1.BatchDeleteJobsRequest = (function() {
    
                        /**
                         * Properties of a BatchDeleteJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IBatchDeleteJobsRequest
                         * @property {string|null} [parent] BatchDeleteJobsRequest parent
                         * @property {string|null} [filter] BatchDeleteJobsRequest filter
                         */
    
                        /**
                         * Constructs a new BatchDeleteJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a BatchDeleteJobsRequest.
                         * @implements IBatchDeleteJobsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest=} [properties] Properties to set
                         */
                        function BatchDeleteJobsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchDeleteJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @instance
                         */
                        BatchDeleteJobsRequest.prototype.parent = "";
    
                        /**
                         * BatchDeleteJobsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @instance
                         */
                        BatchDeleteJobsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new BatchDeleteJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.BatchDeleteJobsRequest} BatchDeleteJobsRequest instance
                         */
                        BatchDeleteJobsRequest.create = function create(properties) {
                            return new BatchDeleteJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchDeleteJobsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.BatchDeleteJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest} message BatchDeleteJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchDeleteJobsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.BatchDeleteJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchDeleteJobsRequest} message BatchDeleteJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchDeleteJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.BatchDeleteJobsRequest} BatchDeleteJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.BatchDeleteJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.filter = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchDeleteJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.BatchDeleteJobsRequest} BatchDeleteJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchDeleteJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchDeleteJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchDeleteJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.BatchDeleteJobsRequest} BatchDeleteJobsRequest
                         */
                        BatchDeleteJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.BatchDeleteJobsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.BatchDeleteJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchDeleteJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.BatchDeleteJobsRequest} message BatchDeleteJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchDeleteJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this BatchDeleteJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.BatchDeleteJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchDeleteJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BatchDeleteJobsRequest;
                    })();
    
                    v4beta1.ListJobsRequest = (function() {
    
                        /**
                         * Properties of a ListJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListJobsRequest
                         * @property {string|null} [parent] ListJobsRequest parent
                         * @property {string|null} [filter] ListJobsRequest filter
                         * @property {string|null} [pageToken] ListJobsRequest pageToken
                         * @property {number|null} [pageSize] ListJobsRequest pageSize
                         * @property {google.cloud.talent.v4beta1.JobView|null} [jobView] ListJobsRequest jobView
                         */
    
                        /**
                         * Constructs a new ListJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListJobsRequest.
                         * @implements IListJobsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest=} [properties] Properties to set
                         */
                        function ListJobsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.parent = "";
    
                        /**
                         * ListJobsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.filter = "";
    
                        /**
                         * ListJobsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageToken = "";
    
                        /**
                         * ListJobsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListJobsRequest jobView.
                         * @member {google.cloud.talent.v4beta1.JobView} jobView
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.jobView = 0;
    
                        /**
                         * Creates a new ListJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListJobsRequest} ListJobsRequest instance
                         */
                        ListJobsRequest.create = function create(properties) {
                            return new ListJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.ListJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.jobView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.filter = reader.string();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.pageSize = reader.int32();
                                    break;
                                case 5:
                                    message.jobView = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                switch (message.jobView) {
                                default:
                                    return "jobView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListJobsRequest} ListJobsRequest
                         */
                        ListJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListJobsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            switch (object.jobView) {
                            case "JOB_VIEW_UNSPECIFIED":
                            case 0:
                                message.jobView = 0;
                                break;
                            case "JOB_VIEW_ID_ONLY":
                            case 1:
                                message.jobView = 1;
                                break;
                            case "JOB_VIEW_MINIMAL":
                            case 2:
                                message.jobView = 2;
                                break;
                            case "JOB_VIEW_SMALL":
                            case 3:
                                message.jobView = 3;
                                break;
                            case "JOB_VIEW_FULL":
                            case 4:
                                message.jobView = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListJobsRequest} message ListJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageToken = "";
                                object.pageSize = 0;
                                object.jobView = options.enums === String ? "JOB_VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                object.jobView = options.enums === String ? $root.google.cloud.talent.v4beta1.JobView[message.jobView] : message.jobView;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListJobsRequest;
                    })();
    
                    /**
                     * JobView enum.
                     * @name google.cloud.talent.v4beta1.JobView
                     * @enum {string}
                     * @property {number} JOB_VIEW_UNSPECIFIED=0 JOB_VIEW_UNSPECIFIED value
                     * @property {number} JOB_VIEW_ID_ONLY=1 JOB_VIEW_ID_ONLY value
                     * @property {number} JOB_VIEW_MINIMAL=2 JOB_VIEW_MINIMAL value
                     * @property {number} JOB_VIEW_SMALL=3 JOB_VIEW_SMALL value
                     * @property {number} JOB_VIEW_FULL=4 JOB_VIEW_FULL value
                     */
                    v4beta1.JobView = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "JOB_VIEW_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "JOB_VIEW_ID_ONLY"] = 1;
                        values[valuesById[2] = "JOB_VIEW_MINIMAL"] = 2;
                        values[valuesById[3] = "JOB_VIEW_SMALL"] = 3;
                        values[valuesById[4] = "JOB_VIEW_FULL"] = 4;
                        return values;
                    })();
    
                    v4beta1.ListJobsResponse = (function() {
    
                        /**
                         * Properties of a ListJobsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListJobsResponse
                         * @property {Array.<google.cloud.talent.v4beta1.IJob>|null} [jobs] ListJobsResponse jobs
                         * @property {string|null} [nextPageToken] ListJobsResponse nextPageToken
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] ListJobsResponse metadata
                         */
    
                        /**
                         * Constructs a new ListJobsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListJobsResponse.
                         * @implements IListJobsResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListJobsResponse=} [properties] Properties to set
                         */
                        function ListJobsResponse(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsResponse jobs.
                         * @member {Array.<google.cloud.talent.v4beta1.IJob>} jobs
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.jobs = $util.emptyArray;
    
                        /**
                         * ListJobsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListJobsResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new ListJobsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListJobsResponse} ListJobsResponse instance
                         */
                        ListJobsResponse.create = function create(properties) {
                            return new ListJobsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.ListJobsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Job.encode(message.jobs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListJobsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListJobsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.jobs && message.jobs.length))
                                        message.jobs = [];
                                    message.jobs.push($root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Job.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListJobsResponse} ListJobsResponse
                         */
                        ListJobsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListJobsResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListJobsResponse();
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.ListJobsResponse.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ListJobsResponse.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.talent.v4beta1.Job.fromObject(object.jobs[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ListJobsResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListJobsResponse} message ListJobsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.metadata = null;
                            }
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.talent.v4beta1.Job.toObject(message.jobs[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListJobsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListJobsResponse;
                    })();
    
                    v4beta1.SearchJobsRequest = (function() {
    
                        /**
                         * Properties of a SearchJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISearchJobsRequest
                         * @property {string|null} [parent] SearchJobsRequest parent
                         * @property {google.cloud.talent.v4beta1.SearchJobsRequest.SearchMode|null} [searchMode] SearchJobsRequest searchMode
                         * @property {google.cloud.talent.v4beta1.IRequestMetadata|null} [requestMetadata] SearchJobsRequest requestMetadata
                         * @property {google.cloud.talent.v4beta1.IJobQuery|null} [jobQuery] SearchJobsRequest jobQuery
                         * @property {boolean|null} [enableBroadening] SearchJobsRequest enableBroadening
                         * @property {boolean|null} [requirePreciseResultSize] SearchJobsRequest requirePreciseResultSize
                         * @property {Array.<google.cloud.talent.v4beta1.IHistogramQuery>|null} [histogramQueries] SearchJobsRequest histogramQueries
                         * @property {google.cloud.talent.v4beta1.JobView|null} [jobView] SearchJobsRequest jobView
                         * @property {number|null} [offset] SearchJobsRequest offset
                         * @property {number|null} [pageSize] SearchJobsRequest pageSize
                         * @property {string|null} [pageToken] SearchJobsRequest pageToken
                         * @property {string|null} [orderBy] SearchJobsRequest orderBy
                         * @property {google.cloud.talent.v4beta1.SearchJobsRequest.DiversificationLevel|null} [diversificationLevel] SearchJobsRequest diversificationLevel
                         * @property {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo|null} [customRankingInfo] SearchJobsRequest customRankingInfo
                         * @property {boolean|null} [disableKeywordMatch] SearchJobsRequest disableKeywordMatch
                         */
    
                        /**
                         * Constructs a new SearchJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SearchJobsRequest.
                         * @implements ISearchJobsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest=} [properties] Properties to set
                         */
                        function SearchJobsRequest(properties) {
                            this.histogramQueries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.parent = "";
    
                        /**
                         * SearchJobsRequest searchMode.
                         * @member {google.cloud.talent.v4beta1.SearchJobsRequest.SearchMode} searchMode
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.searchMode = 0;
    
                        /**
                         * SearchJobsRequest requestMetadata.
                         * @member {google.cloud.talent.v4beta1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.requestMetadata = null;
    
                        /**
                         * SearchJobsRequest jobQuery.
                         * @member {google.cloud.talent.v4beta1.IJobQuery|null|undefined} jobQuery
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.jobQuery = null;
    
                        /**
                         * SearchJobsRequest enableBroadening.
                         * @member {boolean} enableBroadening
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.enableBroadening = false;
    
                        /**
                         * SearchJobsRequest requirePreciseResultSize.
                         * @member {boolean} requirePreciseResultSize
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.requirePreciseResultSize = false;
    
                        /**
                         * SearchJobsRequest histogramQueries.
                         * @member {Array.<google.cloud.talent.v4beta1.IHistogramQuery>} histogramQueries
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.histogramQueries = $util.emptyArray;
    
                        /**
                         * SearchJobsRequest jobView.
                         * @member {google.cloud.talent.v4beta1.JobView} jobView
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.jobView = 0;
    
                        /**
                         * SearchJobsRequest offset.
                         * @member {number} offset
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.offset = 0;
    
                        /**
                         * SearchJobsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchJobsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.pageToken = "";
    
                        /**
                         * SearchJobsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.orderBy = "";
    
                        /**
                         * SearchJobsRequest diversificationLevel.
                         * @member {google.cloud.talent.v4beta1.SearchJobsRequest.DiversificationLevel} diversificationLevel
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.diversificationLevel = 0;
    
                        /**
                         * SearchJobsRequest customRankingInfo.
                         * @member {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo|null|undefined} customRankingInfo
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.customRankingInfo = null;
    
                        /**
                         * SearchJobsRequest disableKeywordMatch.
                         * @member {boolean} disableKeywordMatch
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         */
                        SearchJobsRequest.prototype.disableKeywordMatch = false;
    
                        /**
                         * Creates a new SearchJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SearchJobsRequest} SearchJobsRequest instance
                         */
                        SearchJobsRequest.create = function create(properties) {
                            return new SearchJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchJobsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} message SearchJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.searchMode != null && message.hasOwnProperty("searchMode"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.searchMode);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                $root.google.cloud.talent.v4beta1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.jobQuery != null && message.hasOwnProperty("jobQuery"))
                                $root.google.cloud.talent.v4beta1.JobQuery.encode(message.jobQuery, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.enableBroadening != null && message.hasOwnProperty("enableBroadening"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.enableBroadening);
                            if (message.requirePreciseResultSize != null && message.hasOwnProperty("requirePreciseResultSize"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requirePreciseResultSize);
                            if (message.histogramQueries != null && message.histogramQueries.length)
                                for (var i = 0; i < message.histogramQueries.length; ++i)
                                    $root.google.cloud.talent.v4beta1.HistogramQuery.encode(message.histogramQueries[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.jobView);
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.offset);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.pageToken);
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.orderBy);
                            if (message.diversificationLevel != null && message.hasOwnProperty("diversificationLevel"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.diversificationLevel);
                            if (message.customRankingInfo != null && message.hasOwnProperty("customRankingInfo"))
                                $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.encode(message.customRankingInfo, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.disableKeywordMatch != null && message.hasOwnProperty("disableKeywordMatch"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.disableKeywordMatch);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchJobsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsRequest} message SearchJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SearchJobsRequest} SearchJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.searchMode = reader.int32();
                                    break;
                                case 3:
                                    message.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.jobQuery = $root.google.cloud.talent.v4beta1.JobQuery.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.enableBroadening = reader.bool();
                                    break;
                                case 6:
                                    message.requirePreciseResultSize = reader.bool();
                                    break;
                                case 7:
                                    if (!(message.histogramQueries && message.histogramQueries.length))
                                        message.histogramQueries = [];
                                    message.histogramQueries.push($root.google.cloud.talent.v4beta1.HistogramQuery.decode(reader, reader.uint32()));
                                    break;
                                case 8:
                                    message.jobView = reader.int32();
                                    break;
                                case 9:
                                    message.offset = reader.int32();
                                    break;
                                case 10:
                                    message.pageSize = reader.int32();
                                    break;
                                case 11:
                                    message.pageToken = reader.string();
                                    break;
                                case 12:
                                    message.orderBy = reader.string();
                                    break;
                                case 13:
                                    message.diversificationLevel = reader.int32();
                                    break;
                                case 14:
                                    message.customRankingInfo = $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.decode(reader, reader.uint32());
                                    break;
                                case 16:
                                    message.disableKeywordMatch = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SearchJobsRequest} SearchJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.searchMode != null && message.hasOwnProperty("searchMode"))
                                switch (message.searchMode) {
                                default:
                                    return "searchMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.talent.v4beta1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.jobQuery != null && message.hasOwnProperty("jobQuery")) {
                                var error = $root.google.cloud.talent.v4beta1.JobQuery.verify(message.jobQuery);
                                if (error)
                                    return "jobQuery." + error;
                            }
                            if (message.enableBroadening != null && message.hasOwnProperty("enableBroadening"))
                                if (typeof message.enableBroadening !== "boolean")
                                    return "enableBroadening: boolean expected";
                            if (message.requirePreciseResultSize != null && message.hasOwnProperty("requirePreciseResultSize"))
                                if (typeof message.requirePreciseResultSize !== "boolean")
                                    return "requirePreciseResultSize: boolean expected";
                            if (message.histogramQueries != null && message.hasOwnProperty("histogramQueries")) {
                                if (!Array.isArray(message.histogramQueries))
                                    return "histogramQueries: array expected";
                                for (var i = 0; i < message.histogramQueries.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.HistogramQuery.verify(message.histogramQueries[i]);
                                    if (error)
                                        return "histogramQueries." + error;
                                }
                            }
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                switch (message.jobView) {
                                default:
                                    return "jobView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.diversificationLevel != null && message.hasOwnProperty("diversificationLevel"))
                                switch (message.diversificationLevel) {
                                default:
                                    return "diversificationLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.customRankingInfo != null && message.hasOwnProperty("customRankingInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.verify(message.customRankingInfo);
                                if (error)
                                    return "customRankingInfo." + error;
                            }
                            if (message.disableKeywordMatch != null && message.hasOwnProperty("disableKeywordMatch"))
                                if (typeof message.disableKeywordMatch !== "boolean")
                                    return "disableKeywordMatch: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SearchJobsRequest} SearchJobsRequest
                         */
                        SearchJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SearchJobsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SearchJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.searchMode) {
                            case "SEARCH_MODE_UNSPECIFIED":
                            case 0:
                                message.searchMode = 0;
                                break;
                            case "JOB_SEARCH":
                            case 1:
                                message.searchMode = 1;
                                break;
                            case "FEATURED_JOB_SEARCH":
                            case 2:
                                message.searchMode = 2;
                                break;
                            }
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.jobQuery != null) {
                                if (typeof object.jobQuery !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsRequest.jobQuery: object expected");
                                message.jobQuery = $root.google.cloud.talent.v4beta1.JobQuery.fromObject(object.jobQuery);
                            }
                            if (object.enableBroadening != null)
                                message.enableBroadening = Boolean(object.enableBroadening);
                            if (object.requirePreciseResultSize != null)
                                message.requirePreciseResultSize = Boolean(object.requirePreciseResultSize);
                            if (object.histogramQueries) {
                                if (!Array.isArray(object.histogramQueries))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsRequest.histogramQueries: array expected");
                                message.histogramQueries = [];
                                for (var i = 0; i < object.histogramQueries.length; ++i) {
                                    if (typeof object.histogramQueries[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsRequest.histogramQueries: object expected");
                                    message.histogramQueries[i] = $root.google.cloud.talent.v4beta1.HistogramQuery.fromObject(object.histogramQueries[i]);
                                }
                            }
                            switch (object.jobView) {
                            case "JOB_VIEW_UNSPECIFIED":
                            case 0:
                                message.jobView = 0;
                                break;
                            case "JOB_VIEW_ID_ONLY":
                            case 1:
                                message.jobView = 1;
                                break;
                            case "JOB_VIEW_MINIMAL":
                            case 2:
                                message.jobView = 2;
                                break;
                            case "JOB_VIEW_SMALL":
                            case 3:
                                message.jobView = 3;
                                break;
                            case "JOB_VIEW_FULL":
                            case 4:
                                message.jobView = 4;
                                break;
                            }
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            switch (object.diversificationLevel) {
                            case "DIVERSIFICATION_LEVEL_UNSPECIFIED":
                            case 0:
                                message.diversificationLevel = 0;
                                break;
                            case "DISABLED":
                            case 1:
                                message.diversificationLevel = 1;
                                break;
                            case "SIMPLE":
                            case 2:
                                message.diversificationLevel = 2;
                                break;
                            }
                            if (object.customRankingInfo != null) {
                                if (typeof object.customRankingInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsRequest.customRankingInfo: object expected");
                                message.customRankingInfo = $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.fromObject(object.customRankingInfo);
                            }
                            if (object.disableKeywordMatch != null)
                                message.disableKeywordMatch = Boolean(object.disableKeywordMatch);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.SearchJobsRequest} message SearchJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.histogramQueries = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.searchMode = options.enums === String ? "SEARCH_MODE_UNSPECIFIED" : 0;
                                object.requestMetadata = null;
                                object.jobQuery = null;
                                object.enableBroadening = false;
                                object.requirePreciseResultSize = false;
                                object.jobView = options.enums === String ? "JOB_VIEW_UNSPECIFIED" : 0;
                                object.offset = 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.orderBy = "";
                                object.diversificationLevel = options.enums === String ? "DIVERSIFICATION_LEVEL_UNSPECIFIED" : 0;
                                object.customRankingInfo = null;
                                object.disableKeywordMatch = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.searchMode != null && message.hasOwnProperty("searchMode"))
                                object.searchMode = options.enums === String ? $root.google.cloud.talent.v4beta1.SearchJobsRequest.SearchMode[message.searchMode] : message.searchMode;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.jobQuery != null && message.hasOwnProperty("jobQuery"))
                                object.jobQuery = $root.google.cloud.talent.v4beta1.JobQuery.toObject(message.jobQuery, options);
                            if (message.enableBroadening != null && message.hasOwnProperty("enableBroadening"))
                                object.enableBroadening = message.enableBroadening;
                            if (message.requirePreciseResultSize != null && message.hasOwnProperty("requirePreciseResultSize"))
                                object.requirePreciseResultSize = message.requirePreciseResultSize;
                            if (message.histogramQueries && message.histogramQueries.length) {
                                object.histogramQueries = [];
                                for (var j = 0; j < message.histogramQueries.length; ++j)
                                    object.histogramQueries[j] = $root.google.cloud.talent.v4beta1.HistogramQuery.toObject(message.histogramQueries[j], options);
                            }
                            if (message.jobView != null && message.hasOwnProperty("jobView"))
                                object.jobView = options.enums === String ? $root.google.cloud.talent.v4beta1.JobView[message.jobView] : message.jobView;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = message.offset;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.diversificationLevel != null && message.hasOwnProperty("diversificationLevel"))
                                object.diversificationLevel = options.enums === String ? $root.google.cloud.talent.v4beta1.SearchJobsRequest.DiversificationLevel[message.diversificationLevel] : message.diversificationLevel;
                            if (message.customRankingInfo != null && message.hasOwnProperty("customRankingInfo"))
                                object.customRankingInfo = $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.toObject(message.customRankingInfo, options);
                            if (message.disableKeywordMatch != null && message.hasOwnProperty("disableKeywordMatch"))
                                object.disableKeywordMatch = message.disableKeywordMatch;
                            return object;
                        };
    
                        /**
                         * Converts this SearchJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        SearchJobsRequest.CustomRankingInfo = (function() {
    
                            /**
                             * Properties of a CustomRankingInfo.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                             * @interface ICustomRankingInfo
                             * @property {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ImportanceLevel|null} [importanceLevel] CustomRankingInfo importanceLevel
                             * @property {string|null} [rankingExpression] CustomRankingInfo rankingExpression
                             */
    
                            /**
                             * Constructs a new CustomRankingInfo.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest
                             * @classdesc Represents a CustomRankingInfo.
                             * @implements ICustomRankingInfo
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo=} [properties] Properties to set
                             */
                            function CustomRankingInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CustomRankingInfo importanceLevel.
                             * @member {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ImportanceLevel} importanceLevel
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @instance
                             */
                            CustomRankingInfo.prototype.importanceLevel = 0;
    
                            /**
                             * CustomRankingInfo rankingExpression.
                             * @member {string} rankingExpression
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @instance
                             */
                            CustomRankingInfo.prototype.rankingExpression = "";
    
                            /**
                             * Creates a new CustomRankingInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo} CustomRankingInfo instance
                             */
                            CustomRankingInfo.create = function create(properties) {
                                return new CustomRankingInfo(properties);
                            };
    
                            /**
                             * Encodes the specified CustomRankingInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo} message CustomRankingInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomRankingInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importanceLevel != null && message.hasOwnProperty("importanceLevel"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.importanceLevel);
                                if (message.rankingExpression != null && message.hasOwnProperty("rankingExpression"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.rankingExpression);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CustomRankingInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsRequest.ICustomRankingInfo} message CustomRankingInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomRankingInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CustomRankingInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo} CustomRankingInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomRankingInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importanceLevel = reader.int32();
                                        break;
                                    case 2:
                                        message.rankingExpression = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CustomRankingInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo} CustomRankingInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomRankingInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CustomRankingInfo message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CustomRankingInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importanceLevel != null && message.hasOwnProperty("importanceLevel"))
                                    switch (message.importanceLevel) {
                                    default:
                                        return "importanceLevel: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.rankingExpression != null && message.hasOwnProperty("rankingExpression"))
                                    if (!$util.isString(message.rankingExpression))
                                        return "rankingExpression: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CustomRankingInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo} CustomRankingInfo
                             */
                            CustomRankingInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo();
                                switch (object.importanceLevel) {
                                case "IMPORTANCE_LEVEL_UNSPECIFIED":
                                case 0:
                                    message.importanceLevel = 0;
                                    break;
                                case "NONE":
                                case 1:
                                    message.importanceLevel = 1;
                                    break;
                                case "LOW":
                                case 2:
                                    message.importanceLevel = 2;
                                    break;
                                case "MILD":
                                case 3:
                                    message.importanceLevel = 3;
                                    break;
                                case "MEDIUM":
                                case 4:
                                    message.importanceLevel = 4;
                                    break;
                                case "HIGH":
                                case 5:
                                    message.importanceLevel = 5;
                                    break;
                                case "EXTREME":
                                case 6:
                                    message.importanceLevel = 6;
                                    break;
                                }
                                if (object.rankingExpression != null)
                                    message.rankingExpression = String(object.rankingExpression);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CustomRankingInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo} message CustomRankingInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CustomRankingInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importanceLevel = options.enums === String ? "IMPORTANCE_LEVEL_UNSPECIFIED" : 0;
                                    object.rankingExpression = "";
                                }
                                if (message.importanceLevel != null && message.hasOwnProperty("importanceLevel"))
                                    object.importanceLevel = options.enums === String ? $root.google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ImportanceLevel[message.importanceLevel] : message.importanceLevel;
                                if (message.rankingExpression != null && message.hasOwnProperty("rankingExpression"))
                                    object.rankingExpression = message.rankingExpression;
                                return object;
                            };
    
                            /**
                             * Converts this CustomRankingInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CustomRankingInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * ImportanceLevel enum.
                             * @name google.cloud.talent.v4beta1.SearchJobsRequest.CustomRankingInfo.ImportanceLevel
                             * @enum {string}
                             * @property {number} IMPORTANCE_LEVEL_UNSPECIFIED=0 IMPORTANCE_LEVEL_UNSPECIFIED value
                             * @property {number} NONE=1 NONE value
                             * @property {number} LOW=2 LOW value
                             * @property {number} MILD=3 MILD value
                             * @property {number} MEDIUM=4 MEDIUM value
                             * @property {number} HIGH=5 HIGH value
                             * @property {number} EXTREME=6 EXTREME value
                             */
                            CustomRankingInfo.ImportanceLevel = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "IMPORTANCE_LEVEL_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NONE"] = 1;
                                values[valuesById[2] = "LOW"] = 2;
                                values[valuesById[3] = "MILD"] = 3;
                                values[valuesById[4] = "MEDIUM"] = 4;
                                values[valuesById[5] = "HIGH"] = 5;
                                values[valuesById[6] = "EXTREME"] = 6;
                                return values;
                            })();
    
                            return CustomRankingInfo;
                        })();
    
                        /**
                         * SearchMode enum.
                         * @name google.cloud.talent.v4beta1.SearchJobsRequest.SearchMode
                         * @enum {string}
                         * @property {number} SEARCH_MODE_UNSPECIFIED=0 SEARCH_MODE_UNSPECIFIED value
                         * @property {number} JOB_SEARCH=1 JOB_SEARCH value
                         * @property {number} FEATURED_JOB_SEARCH=2 FEATURED_JOB_SEARCH value
                         */
                        SearchJobsRequest.SearchMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEARCH_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "JOB_SEARCH"] = 1;
                            values[valuesById[2] = "FEATURED_JOB_SEARCH"] = 2;
                            return values;
                        })();
    
                        /**
                         * DiversificationLevel enum.
                         * @name google.cloud.talent.v4beta1.SearchJobsRequest.DiversificationLevel
                         * @enum {string}
                         * @property {number} DIVERSIFICATION_LEVEL_UNSPECIFIED=0 DIVERSIFICATION_LEVEL_UNSPECIFIED value
                         * @property {number} DISABLED=1 DISABLED value
                         * @property {number} SIMPLE=2 SIMPLE value
                         */
                        SearchJobsRequest.DiversificationLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DIVERSIFICATION_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DISABLED"] = 1;
                            values[valuesById[2] = "SIMPLE"] = 2;
                            return values;
                        })();
    
                        return SearchJobsRequest;
                    })();
    
                    v4beta1.SearchJobsResponse = (function() {
    
                        /**
                         * Properties of a SearchJobsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISearchJobsResponse
                         * @property {Array.<google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob>|null} [matchingJobs] SearchJobsResponse matchingJobs
                         * @property {Array.<google.cloud.talent.v4beta1.IHistogramQueryResult>|null} [histogramQueryResults] SearchJobsResponse histogramQueryResults
                         * @property {string|null} [nextPageToken] SearchJobsResponse nextPageToken
                         * @property {Array.<google.cloud.talent.v4beta1.ILocation>|null} [locationFilters] SearchJobsResponse locationFilters
                         * @property {number|null} [estimatedTotalSize] SearchJobsResponse estimatedTotalSize
                         * @property {number|null} [totalSize] SearchJobsResponse totalSize
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] SearchJobsResponse metadata
                         * @property {number|null} [broadenedQueryJobsCount] SearchJobsResponse broadenedQueryJobsCount
                         * @property {google.cloud.talent.v4beta1.ISpellingCorrection|null} [spellCorrection] SearchJobsResponse spellCorrection
                         */
    
                        /**
                         * Constructs a new SearchJobsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SearchJobsResponse.
                         * @implements ISearchJobsResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISearchJobsResponse=} [properties] Properties to set
                         */
                        function SearchJobsResponse(properties) {
                            this.matchingJobs = [];
                            this.histogramQueryResults = [];
                            this.locationFilters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchJobsResponse matchingJobs.
                         * @member {Array.<google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob>} matchingJobs
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.matchingJobs = $util.emptyArray;
    
                        /**
                         * SearchJobsResponse histogramQueryResults.
                         * @member {Array.<google.cloud.talent.v4beta1.IHistogramQueryResult>} histogramQueryResults
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.histogramQueryResults = $util.emptyArray;
    
                        /**
                         * SearchJobsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.nextPageToken = "";
    
                        /**
                         * SearchJobsResponse locationFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.ILocation>} locationFilters
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.locationFilters = $util.emptyArray;
    
                        /**
                         * SearchJobsResponse estimatedTotalSize.
                         * @member {number} estimatedTotalSize
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.estimatedTotalSize = 0;
    
                        /**
                         * SearchJobsResponse totalSize.
                         * @member {number} totalSize
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.totalSize = 0;
    
                        /**
                         * SearchJobsResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.metadata = null;
    
                        /**
                         * SearchJobsResponse broadenedQueryJobsCount.
                         * @member {number} broadenedQueryJobsCount
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.broadenedQueryJobsCount = 0;
    
                        /**
                         * SearchJobsResponse spellCorrection.
                         * @member {google.cloud.talent.v4beta1.ISpellingCorrection|null|undefined} spellCorrection
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         */
                        SearchJobsResponse.prototype.spellCorrection = null;
    
                        /**
                         * Creates a new SearchJobsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SearchJobsResponse} SearchJobsResponse instance
                         */
                        SearchJobsResponse.create = function create(properties) {
                            return new SearchJobsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchJobsResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsResponse} message SearchJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchJobsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.matchingJobs != null && message.matchingJobs.length)
                                for (var i = 0; i < message.matchingJobs.length; ++i)
                                    $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.encode(message.matchingJobs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.histogramQueryResults != null && message.histogramQueryResults.length)
                                for (var i = 0; i < message.histogramQueryResults.length; ++i)
                                    $root.google.cloud.talent.v4beta1.HistogramQueryResult.encode(message.histogramQueryResults[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            if (message.locationFilters != null && message.locationFilters.length)
                                for (var i = 0; i < message.locationFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Location.encode(message.locationFilters[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.estimatedTotalSize);
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.totalSize);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.broadenedQueryJobsCount != null && message.hasOwnProperty("broadenedQueryJobsCount"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.broadenedQueryJobsCount);
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection"))
                                $root.google.cloud.talent.v4beta1.SpellingCorrection.encode(message.spellCorrection, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchJobsResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchJobsResponse} message SearchJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchJobsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchJobsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SearchJobsResponse} SearchJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchJobsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.matchingJobs && message.matchingJobs.length))
                                        message.matchingJobs = [];
                                    message.matchingJobs.push($root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    if (!(message.histogramQueryResults && message.histogramQueryResults.length))
                                        message.histogramQueryResults = [];
                                    message.histogramQueryResults.push($root.google.cloud.talent.v4beta1.HistogramQueryResult.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 4:
                                    if (!(message.locationFilters && message.locationFilters.length))
                                        message.locationFilters = [];
                                    message.locationFilters.push($root.google.cloud.talent.v4beta1.Location.decode(reader, reader.uint32()));
                                    break;
                                case 5:
                                    message.estimatedTotalSize = reader.int32();
                                    break;
                                case 6:
                                    message.totalSize = reader.int32();
                                    break;
                                case 7:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.broadenedQueryJobsCount = reader.int32();
                                    break;
                                case 9:
                                    message.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchJobsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SearchJobsResponse} SearchJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchJobsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchJobsResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchJobsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.matchingJobs != null && message.hasOwnProperty("matchingJobs")) {
                                if (!Array.isArray(message.matchingJobs))
                                    return "matchingJobs: array expected";
                                for (var i = 0; i < message.matchingJobs.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.verify(message.matchingJobs[i]);
                                    if (error)
                                        return "matchingJobs." + error;
                                }
                            }
                            if (message.histogramQueryResults != null && message.hasOwnProperty("histogramQueryResults")) {
                                if (!Array.isArray(message.histogramQueryResults))
                                    return "histogramQueryResults: array expected";
                                for (var i = 0; i < message.histogramQueryResults.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.HistogramQueryResult.verify(message.histogramQueryResults[i]);
                                    if (error)
                                        return "histogramQueryResults." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.locationFilters != null && message.hasOwnProperty("locationFilters")) {
                                if (!Array.isArray(message.locationFilters))
                                    return "locationFilters: array expected";
                                for (var i = 0; i < message.locationFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Location.verify(message.locationFilters[i]);
                                    if (error)
                                        return "locationFilters." + error;
                                }
                            }
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                if (!$util.isInteger(message.estimatedTotalSize))
                                    return "estimatedTotalSize: integer expected";
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                if (!$util.isInteger(message.totalSize))
                                    return "totalSize: integer expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.broadenedQueryJobsCount != null && message.hasOwnProperty("broadenedQueryJobsCount"))
                                if (!$util.isInteger(message.broadenedQueryJobsCount))
                                    return "broadenedQueryJobsCount: integer expected";
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection")) {
                                var error = $root.google.cloud.talent.v4beta1.SpellingCorrection.verify(message.spellCorrection);
                                if (error)
                                    return "spellCorrection." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchJobsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SearchJobsResponse} SearchJobsResponse
                         */
                        SearchJobsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SearchJobsResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse();
                            if (object.matchingJobs) {
                                if (!Array.isArray(object.matchingJobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.matchingJobs: array expected");
                                message.matchingJobs = [];
                                for (var i = 0; i < object.matchingJobs.length; ++i) {
                                    if (typeof object.matchingJobs[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.matchingJobs: object expected");
                                    message.matchingJobs[i] = $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.fromObject(object.matchingJobs[i]);
                                }
                            }
                            if (object.histogramQueryResults) {
                                if (!Array.isArray(object.histogramQueryResults))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.histogramQueryResults: array expected");
                                message.histogramQueryResults = [];
                                for (var i = 0; i < object.histogramQueryResults.length; ++i) {
                                    if (typeof object.histogramQueryResults[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.histogramQueryResults: object expected");
                                    message.histogramQueryResults[i] = $root.google.cloud.talent.v4beta1.HistogramQueryResult.fromObject(object.histogramQueryResults[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.locationFilters) {
                                if (!Array.isArray(object.locationFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.locationFilters: array expected");
                                message.locationFilters = [];
                                for (var i = 0; i < object.locationFilters.length; ++i) {
                                    if (typeof object.locationFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.locationFilters: object expected");
                                    message.locationFilters[i] = $root.google.cloud.talent.v4beta1.Location.fromObject(object.locationFilters[i]);
                                }
                            }
                            if (object.estimatedTotalSize != null)
                                message.estimatedTotalSize = object.estimatedTotalSize | 0;
                            if (object.totalSize != null)
                                message.totalSize = object.totalSize | 0;
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            if (object.broadenedQueryJobsCount != null)
                                message.broadenedQueryJobsCount = object.broadenedQueryJobsCount | 0;
                            if (object.spellCorrection != null) {
                                if (typeof object.spellCorrection !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.spellCorrection: object expected");
                                message.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.fromObject(object.spellCorrection);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchJobsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.SearchJobsResponse} message SearchJobsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchJobsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.matchingJobs = [];
                                object.histogramQueryResults = [];
                                object.locationFilters = [];
                            }
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.estimatedTotalSize = 0;
                                object.totalSize = 0;
                                object.metadata = null;
                                object.broadenedQueryJobsCount = 0;
                                object.spellCorrection = null;
                            }
                            if (message.matchingJobs && message.matchingJobs.length) {
                                object.matchingJobs = [];
                                for (var j = 0; j < message.matchingJobs.length; ++j)
                                    object.matchingJobs[j] = $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.toObject(message.matchingJobs[j], options);
                            }
                            if (message.histogramQueryResults && message.histogramQueryResults.length) {
                                object.histogramQueryResults = [];
                                for (var j = 0; j < message.histogramQueryResults.length; ++j)
                                    object.histogramQueryResults[j] = $root.google.cloud.talent.v4beta1.HistogramQueryResult.toObject(message.histogramQueryResults[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.locationFilters && message.locationFilters.length) {
                                object.locationFilters = [];
                                for (var j = 0; j < message.locationFilters.length; ++j)
                                    object.locationFilters[j] = $root.google.cloud.talent.v4beta1.Location.toObject(message.locationFilters[j], options);
                            }
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                object.estimatedTotalSize = message.estimatedTotalSize;
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                object.totalSize = message.totalSize;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            if (message.broadenedQueryJobsCount != null && message.hasOwnProperty("broadenedQueryJobsCount"))
                                object.broadenedQueryJobsCount = message.broadenedQueryJobsCount;
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection"))
                                object.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.toObject(message.spellCorrection, options);
                            return object;
                        };
    
                        /**
                         * Converts this SearchJobsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchJobsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        SearchJobsResponse.MatchingJob = (function() {
    
                            /**
                             * Properties of a MatchingJob.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                             * @interface IMatchingJob
                             * @property {google.cloud.talent.v4beta1.IJob|null} [job] MatchingJob job
                             * @property {string|null} [jobSummary] MatchingJob jobSummary
                             * @property {string|null} [jobTitleSnippet] MatchingJob jobTitleSnippet
                             * @property {string|null} [searchTextSnippet] MatchingJob searchTextSnippet
                             * @property {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo|null} [commuteInfo] MatchingJob commuteInfo
                             */
    
                            /**
                             * Constructs a new MatchingJob.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                             * @classdesc Represents a MatchingJob.
                             * @implements IMatchingJob
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob=} [properties] Properties to set
                             */
                            function MatchingJob(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MatchingJob job.
                             * @member {google.cloud.talent.v4beta1.IJob|null|undefined} job
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             */
                            MatchingJob.prototype.job = null;
    
                            /**
                             * MatchingJob jobSummary.
                             * @member {string} jobSummary
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             */
                            MatchingJob.prototype.jobSummary = "";
    
                            /**
                             * MatchingJob jobTitleSnippet.
                             * @member {string} jobTitleSnippet
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             */
                            MatchingJob.prototype.jobTitleSnippet = "";
    
                            /**
                             * MatchingJob searchTextSnippet.
                             * @member {string} searchTextSnippet
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             */
                            MatchingJob.prototype.searchTextSnippet = "";
    
                            /**
                             * MatchingJob commuteInfo.
                             * @member {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo|null|undefined} commuteInfo
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             */
                            MatchingJob.prototype.commuteInfo = null;
    
                            /**
                             * Creates a new MatchingJob instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob} MatchingJob instance
                             */
                            MatchingJob.create = function create(properties) {
                                return new MatchingJob(properties);
                            };
    
                            /**
                             * Encodes the specified MatchingJob message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob} message MatchingJob message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MatchingJob.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.job != null && message.hasOwnProperty("job"))
                                    $root.google.cloud.talent.v4beta1.Job.encode(message.job, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.jobSummary != null && message.hasOwnProperty("jobSummary"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobSummary);
                                if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobTitleSnippet);
                                if (message.searchTextSnippet != null && message.hasOwnProperty("searchTextSnippet"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.searchTextSnippet);
                                if (message.commuteInfo != null && message.hasOwnProperty("commuteInfo"))
                                    $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.encode(message.commuteInfo, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MatchingJob message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.IMatchingJob} message MatchingJob message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MatchingJob.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MatchingJob message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob} MatchingJob
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MatchingJob.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.job = $root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.jobSummary = reader.string();
                                        break;
                                    case 3:
                                        message.jobTitleSnippet = reader.string();
                                        break;
                                    case 4:
                                        message.searchTextSnippet = reader.string();
                                        break;
                                    case 5:
                                        message.commuteInfo = $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MatchingJob message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob} MatchingJob
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MatchingJob.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MatchingJob message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MatchingJob.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.job != null && message.hasOwnProperty("job")) {
                                    var error = $root.google.cloud.talent.v4beta1.Job.verify(message.job);
                                    if (error)
                                        return "job." + error;
                                }
                                if (message.jobSummary != null && message.hasOwnProperty("jobSummary"))
                                    if (!$util.isString(message.jobSummary))
                                        return "jobSummary: string expected";
                                if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                    if (!$util.isString(message.jobTitleSnippet))
                                        return "jobTitleSnippet: string expected";
                                if (message.searchTextSnippet != null && message.hasOwnProperty("searchTextSnippet"))
                                    if (!$util.isString(message.searchTextSnippet))
                                        return "searchTextSnippet: string expected";
                                if (message.commuteInfo != null && message.hasOwnProperty("commuteInfo")) {
                                    var error = $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.verify(message.commuteInfo);
                                    if (error)
                                        return "commuteInfo." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MatchingJob message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob} MatchingJob
                             */
                            MatchingJob.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob();
                                if (object.job != null) {
                                    if (typeof object.job !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.job: object expected");
                                    message.job = $root.google.cloud.talent.v4beta1.Job.fromObject(object.job);
                                }
                                if (object.jobSummary != null)
                                    message.jobSummary = String(object.jobSummary);
                                if (object.jobTitleSnippet != null)
                                    message.jobTitleSnippet = String(object.jobTitleSnippet);
                                if (object.searchTextSnippet != null)
                                    message.searchTextSnippet = String(object.searchTextSnippet);
                                if (object.commuteInfo != null) {
                                    if (typeof object.commuteInfo !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob.commuteInfo: object expected");
                                    message.commuteInfo = $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.fromObject(object.commuteInfo);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MatchingJob message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob} message MatchingJob
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MatchingJob.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.job = null;
                                    object.jobSummary = "";
                                    object.jobTitleSnippet = "";
                                    object.searchTextSnippet = "";
                                    object.commuteInfo = null;
                                }
                                if (message.job != null && message.hasOwnProperty("job"))
                                    object.job = $root.google.cloud.talent.v4beta1.Job.toObject(message.job, options);
                                if (message.jobSummary != null && message.hasOwnProperty("jobSummary"))
                                    object.jobSummary = message.jobSummary;
                                if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                    object.jobTitleSnippet = message.jobTitleSnippet;
                                if (message.searchTextSnippet != null && message.hasOwnProperty("searchTextSnippet"))
                                    object.searchTextSnippet = message.searchTextSnippet;
                                if (message.commuteInfo != null && message.hasOwnProperty("commuteInfo"))
                                    object.commuteInfo = $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.toObject(message.commuteInfo, options);
                                return object;
                            };
    
                            /**
                             * Converts this MatchingJob to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.MatchingJob
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MatchingJob.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MatchingJob;
                        })();
    
                        SearchJobsResponse.CommuteInfo = (function() {
    
                            /**
                             * Properties of a CommuteInfo.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                             * @interface ICommuteInfo
                             * @property {google.cloud.talent.v4beta1.ILocation|null} [jobLocation] CommuteInfo jobLocation
                             * @property {google.protobuf.IDuration|null} [travelDuration] CommuteInfo travelDuration
                             */
    
                            /**
                             * Constructs a new CommuteInfo.
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse
                             * @classdesc Represents a CommuteInfo.
                             * @implements ICommuteInfo
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo=} [properties] Properties to set
                             */
                            function CommuteInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CommuteInfo jobLocation.
                             * @member {google.cloud.talent.v4beta1.ILocation|null|undefined} jobLocation
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @instance
                             */
                            CommuteInfo.prototype.jobLocation = null;
    
                            /**
                             * CommuteInfo travelDuration.
                             * @member {google.protobuf.IDuration|null|undefined} travelDuration
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @instance
                             */
                            CommuteInfo.prototype.travelDuration = null;
    
                            /**
                             * Creates a new CommuteInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo} CommuteInfo instance
                             */
                            CommuteInfo.create = function create(properties) {
                                return new CommuteInfo(properties);
                            };
    
                            /**
                             * Encodes the specified CommuteInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo} message CommuteInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommuteInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.jobLocation != null && message.hasOwnProperty("jobLocation"))
                                    $root.google.cloud.talent.v4beta1.Location.encode(message.jobLocation, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.travelDuration != null && message.hasOwnProperty("travelDuration"))
                                    $root.google.protobuf.Duration.encode(message.travelDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CommuteInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.ICommuteInfo} message CommuteInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommuteInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CommuteInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo} CommuteInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommuteInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.jobLocation = $root.google.cloud.talent.v4beta1.Location.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.travelDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CommuteInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo} CommuteInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommuteInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CommuteInfo message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CommuteInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.jobLocation != null && message.hasOwnProperty("jobLocation")) {
                                    var error = $root.google.cloud.talent.v4beta1.Location.verify(message.jobLocation);
                                    if (error)
                                        return "jobLocation." + error;
                                }
                                if (message.travelDuration != null && message.hasOwnProperty("travelDuration")) {
                                    var error = $root.google.protobuf.Duration.verify(message.travelDuration);
                                    if (error)
                                        return "travelDuration." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CommuteInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo} CommuteInfo
                             */
                            CommuteInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo();
                                if (object.jobLocation != null) {
                                    if (typeof object.jobLocation !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.jobLocation: object expected");
                                    message.jobLocation = $root.google.cloud.talent.v4beta1.Location.fromObject(object.jobLocation);
                                }
                                if (object.travelDuration != null) {
                                    if (typeof object.travelDuration !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo.travelDuration: object expected");
                                    message.travelDuration = $root.google.protobuf.Duration.fromObject(object.travelDuration);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CommuteInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo} message CommuteInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CommuteInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.jobLocation = null;
                                    object.travelDuration = null;
                                }
                                if (message.jobLocation != null && message.hasOwnProperty("jobLocation"))
                                    object.jobLocation = $root.google.cloud.talent.v4beta1.Location.toObject(message.jobLocation, options);
                                if (message.travelDuration != null && message.hasOwnProperty("travelDuration"))
                                    object.travelDuration = $root.google.protobuf.Duration.toObject(message.travelDuration, options);
                                return object;
                            };
    
                            /**
                             * Converts this CommuteInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.SearchJobsResponse.CommuteInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CommuteInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return CommuteInfo;
                        })();
    
                        return SearchJobsResponse;
                    })();
    
                    v4beta1.BatchCreateJobsRequest = (function() {
    
                        /**
                         * Properties of a BatchCreateJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IBatchCreateJobsRequest
                         * @property {string|null} [parent] BatchCreateJobsRequest parent
                         * @property {Array.<google.cloud.talent.v4beta1.IJob>|null} [jobs] BatchCreateJobsRequest jobs
                         */
    
                        /**
                         * Constructs a new BatchCreateJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a BatchCreateJobsRequest.
                         * @implements IBatchCreateJobsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest=} [properties] Properties to set
                         */
                        function BatchCreateJobsRequest(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchCreateJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @instance
                         */
                        BatchCreateJobsRequest.prototype.parent = "";
    
                        /**
                         * BatchCreateJobsRequest jobs.
                         * @member {Array.<google.cloud.talent.v4beta1.IJob>} jobs
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @instance
                         */
                        BatchCreateJobsRequest.prototype.jobs = $util.emptyArray;
    
                        /**
                         * Creates a new BatchCreateJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.BatchCreateJobsRequest} BatchCreateJobsRequest instance
                         */
                        BatchCreateJobsRequest.create = function create(properties) {
                            return new BatchCreateJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchCreateJobsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.BatchCreateJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest} message BatchCreateJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchCreateJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Job.encode(message.jobs[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchCreateJobsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.BatchCreateJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchCreateJobsRequest} message BatchCreateJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchCreateJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchCreateJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.BatchCreateJobsRequest} BatchCreateJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchCreateJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.BatchCreateJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    if (!(message.jobs && message.jobs.length))
                                        message.jobs = [];
                                    message.jobs.push($root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchCreateJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.BatchCreateJobsRequest} BatchCreateJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchCreateJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchCreateJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchCreateJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Job.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchCreateJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.BatchCreateJobsRequest} BatchCreateJobsRequest
                         */
                        BatchCreateJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.BatchCreateJobsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.BatchCreateJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchCreateJobsRequest.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.BatchCreateJobsRequest.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.talent.v4beta1.Job.fromObject(object.jobs[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchCreateJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.BatchCreateJobsRequest} message BatchCreateJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchCreateJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.talent.v4beta1.Job.toObject(message.jobs[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchCreateJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.BatchCreateJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchCreateJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BatchCreateJobsRequest;
                    })();
    
                    v4beta1.BatchUpdateJobsRequest = (function() {
    
                        /**
                         * Properties of a BatchUpdateJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IBatchUpdateJobsRequest
                         * @property {string|null} [parent] BatchUpdateJobsRequest parent
                         * @property {Array.<google.cloud.talent.v4beta1.IJob>|null} [jobs] BatchUpdateJobsRequest jobs
                         * @property {google.protobuf.IFieldMask|null} [updateMask] BatchUpdateJobsRequest updateMask
                         */
    
                        /**
                         * Constructs a new BatchUpdateJobsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a BatchUpdateJobsRequest.
                         * @implements IBatchUpdateJobsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest=} [properties] Properties to set
                         */
                        function BatchUpdateJobsRequest(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchUpdateJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @instance
                         */
                        BatchUpdateJobsRequest.prototype.parent = "";
    
                        /**
                         * BatchUpdateJobsRequest jobs.
                         * @member {Array.<google.cloud.talent.v4beta1.IJob>} jobs
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @instance
                         */
                        BatchUpdateJobsRequest.prototype.jobs = $util.emptyArray;
    
                        /**
                         * BatchUpdateJobsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @instance
                         */
                        BatchUpdateJobsRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new BatchUpdateJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.BatchUpdateJobsRequest} BatchUpdateJobsRequest instance
                         */
                        BatchUpdateJobsRequest.create = function create(properties) {
                            return new BatchUpdateJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchUpdateJobsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.BatchUpdateJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest} message BatchUpdateJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchUpdateJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Job.encode(message.jobs[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchUpdateJobsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.BatchUpdateJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IBatchUpdateJobsRequest} message BatchUpdateJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchUpdateJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchUpdateJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.BatchUpdateJobsRequest} BatchUpdateJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchUpdateJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.BatchUpdateJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    if (!(message.jobs && message.jobs.length))
                                        message.jobs = [];
                                    message.jobs.push($root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchUpdateJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.BatchUpdateJobsRequest} BatchUpdateJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchUpdateJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchUpdateJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchUpdateJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Job.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchUpdateJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.BatchUpdateJobsRequest} BatchUpdateJobsRequest
                         */
                        BatchUpdateJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.BatchUpdateJobsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.BatchUpdateJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchUpdateJobsRequest.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.BatchUpdateJobsRequest.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.talent.v4beta1.Job.fromObject(object.jobs[i]);
                                }
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.BatchUpdateJobsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchUpdateJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.BatchUpdateJobsRequest} message BatchUpdateJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchUpdateJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.updateMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.talent.v4beta1.Job.toObject(message.jobs[j], options);
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this BatchUpdateJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.BatchUpdateJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchUpdateJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BatchUpdateJobsRequest;
                    })();
    
                    v4beta1.JobOperationResult = (function() {
    
                        /**
                         * Properties of a JobOperationResult.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IJobOperationResult
                         * @property {Array.<google.cloud.talent.v4beta1.JobOperationResult.IJobResult>|null} [jobResults] JobOperationResult jobResults
                         */
    
                        /**
                         * Constructs a new JobOperationResult.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a JobOperationResult.
                         * @implements IJobOperationResult
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IJobOperationResult=} [properties] Properties to set
                         */
                        function JobOperationResult(properties) {
                            this.jobResults = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobOperationResult jobResults.
                         * @member {Array.<google.cloud.talent.v4beta1.JobOperationResult.IJobResult>} jobResults
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @instance
                         */
                        JobOperationResult.prototype.jobResults = $util.emptyArray;
    
                        /**
                         * Creates a new JobOperationResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobOperationResult=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.JobOperationResult} JobOperationResult instance
                         */
                        JobOperationResult.create = function create(properties) {
                            return new JobOperationResult(properties);
                        };
    
                        /**
                         * Encodes the specified JobOperationResult message. Does not implicitly {@link google.cloud.talent.v4beta1.JobOperationResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobOperationResult} message JobOperationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobOperationResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobResults != null && message.jobResults.length)
                                for (var i = 0; i < message.jobResults.length; ++i)
                                    $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult.encode(message.jobResults[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobOperationResult message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.JobOperationResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobOperationResult} message JobOperationResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobOperationResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobOperationResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.JobOperationResult} JobOperationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobOperationResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.JobOperationResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.jobResults && message.jobResults.length))
                                        message.jobResults = [];
                                    message.jobResults.push($root.google.cloud.talent.v4beta1.JobOperationResult.JobResult.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobOperationResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.JobOperationResult} JobOperationResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobOperationResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobOperationResult message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobOperationResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobResults != null && message.hasOwnProperty("jobResults")) {
                                if (!Array.isArray(message.jobResults))
                                    return "jobResults: array expected";
                                for (var i = 0; i < message.jobResults.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult.verify(message.jobResults[i]);
                                    if (error)
                                        return "jobResults." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a JobOperationResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.JobOperationResult} JobOperationResult
                         */
                        JobOperationResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.JobOperationResult)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.JobOperationResult();
                            if (object.jobResults) {
                                if (!Array.isArray(object.jobResults))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobOperationResult.jobResults: array expected");
                                message.jobResults = [];
                                for (var i = 0; i < object.jobResults.length; ++i) {
                                    if (typeof object.jobResults[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.JobOperationResult.jobResults: object expected");
                                    message.jobResults[i] = $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult.fromObject(object.jobResults[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobOperationResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.JobOperationResult} message JobOperationResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobOperationResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobResults = [];
                            if (message.jobResults && message.jobResults.length) {
                                object.jobResults = [];
                                for (var j = 0; j < message.jobResults.length; ++j)
                                    object.jobResults[j] = $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult.toObject(message.jobResults[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this JobOperationResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.JobOperationResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobOperationResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        JobOperationResult.JobResult = (function() {
    
                            /**
                             * Properties of a JobResult.
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult
                             * @interface IJobResult
                             * @property {google.cloud.talent.v4beta1.IJob|null} [job] JobResult job
                             * @property {google.rpc.IStatus|null} [status] JobResult status
                             */
    
                            /**
                             * Constructs a new JobResult.
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult
                             * @classdesc Represents a JobResult.
                             * @implements IJobResult
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.JobOperationResult.IJobResult=} [properties] Properties to set
                             */
                            function JobResult(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * JobResult job.
                             * @member {google.cloud.talent.v4beta1.IJob|null|undefined} job
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @instance
                             */
                            JobResult.prototype.job = null;
    
                            /**
                             * JobResult status.
                             * @member {google.rpc.IStatus|null|undefined} status
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @instance
                             */
                            JobResult.prototype.status = null;
    
                            /**
                             * Creates a new JobResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.JobOperationResult.IJobResult=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.JobOperationResult.JobResult} JobResult instance
                             */
                            JobResult.create = function create(properties) {
                                return new JobResult(properties);
                            };
    
                            /**
                             * Encodes the specified JobResult message. Does not implicitly {@link google.cloud.talent.v4beta1.JobOperationResult.JobResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.JobOperationResult.IJobResult} message JobResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            JobResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.job != null && message.hasOwnProperty("job"))
                                    $root.google.cloud.talent.v4beta1.Job.encode(message.job, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.status != null && message.hasOwnProperty("status"))
                                    $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified JobResult message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.JobOperationResult.JobResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.JobOperationResult.IJobResult} message JobResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            JobResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a JobResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.JobOperationResult.JobResult} JobResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            JobResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.job = $root.google.cloud.talent.v4beta1.Job.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a JobResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.JobOperationResult.JobResult} JobResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            JobResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a JobResult message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            JobResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.job != null && message.hasOwnProperty("job")) {
                                    var error = $root.google.cloud.talent.v4beta1.Job.verify(message.job);
                                    if (error)
                                        return "job." + error;
                                }
                                if (message.status != null && message.hasOwnProperty("status")) {
                                    var error = $root.google.rpc.Status.verify(message.status);
                                    if (error)
                                        return "status." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a JobResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.JobOperationResult.JobResult} JobResult
                             */
                            JobResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.JobOperationResult.JobResult();
                                if (object.job != null) {
                                    if (typeof object.job !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.JobOperationResult.JobResult.job: object expected");
                                    message.job = $root.google.cloud.talent.v4beta1.Job.fromObject(object.job);
                                }
                                if (object.status != null) {
                                    if (typeof object.status !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.JobOperationResult.JobResult.status: object expected");
                                    message.status = $root.google.rpc.Status.fromObject(object.status);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a JobResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @static
                             * @param {google.cloud.talent.v4beta1.JobOperationResult.JobResult} message JobResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            JobResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.job = null;
                                    object.status = null;
                                }
                                if (message.job != null && message.hasOwnProperty("job"))
                                    object.job = $root.google.cloud.talent.v4beta1.Job.toObject(message.job, options);
                                if (message.status != null && message.hasOwnProperty("status"))
                                    object.status = $root.google.rpc.Status.toObject(message.status, options);
                                return object;
                            };
    
                            /**
                             * Converts this JobResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.JobOperationResult.JobResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            JobResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return JobResult;
                        })();
    
                        return JobOperationResult;
                    })();
    
                    v4beta1.JobQuery = (function() {
    
                        /**
                         * Properties of a JobQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IJobQuery
                         * @property {string|null} [query] JobQuery query
                         * @property {string|null} [queryLanguageCode] JobQuery queryLanguageCode
                         * @property {Array.<string>|null} [companies] JobQuery companies
                         * @property {Array.<google.cloud.talent.v4beta1.ILocationFilter>|null} [locationFilters] JobQuery locationFilters
                         * @property {Array.<google.cloud.talent.v4beta1.JobCategory>|null} [jobCategories] JobQuery jobCategories
                         * @property {google.cloud.talent.v4beta1.ICommuteFilter|null} [commuteFilter] JobQuery commuteFilter
                         * @property {Array.<string>|null} [companyDisplayNames] JobQuery companyDisplayNames
                         * @property {google.cloud.talent.v4beta1.ICompensationFilter|null} [compensationFilter] JobQuery compensationFilter
                         * @property {string|null} [customAttributeFilter] JobQuery customAttributeFilter
                         * @property {boolean|null} [disableSpellCheck] JobQuery disableSpellCheck
                         * @property {Array.<google.cloud.talent.v4beta1.EmploymentType>|null} [employmentTypes] JobQuery employmentTypes
                         * @property {Array.<string>|null} [languageCodes] JobQuery languageCodes
                         * @property {google.cloud.talent.v4beta1.ITimestampRange|null} [publishTimeRange] JobQuery publishTimeRange
                         * @property {Array.<string>|null} [excludedJobs] JobQuery excludedJobs
                         */
    
                        /**
                         * Constructs a new JobQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a JobQuery.
                         * @implements IJobQuery
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IJobQuery=} [properties] Properties to set
                         */
                        function JobQuery(properties) {
                            this.companies = [];
                            this.locationFilters = [];
                            this.jobCategories = [];
                            this.companyDisplayNames = [];
                            this.employmentTypes = [];
                            this.languageCodes = [];
                            this.excludedJobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobQuery query.
                         * @member {string} query
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.query = "";
    
                        /**
                         * JobQuery queryLanguageCode.
                         * @member {string} queryLanguageCode
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.queryLanguageCode = "";
    
                        /**
                         * JobQuery companies.
                         * @member {Array.<string>} companies
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.companies = $util.emptyArray;
    
                        /**
                         * JobQuery locationFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.ILocationFilter>} locationFilters
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.locationFilters = $util.emptyArray;
    
                        /**
                         * JobQuery jobCategories.
                         * @member {Array.<google.cloud.talent.v4beta1.JobCategory>} jobCategories
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.jobCategories = $util.emptyArray;
    
                        /**
                         * JobQuery commuteFilter.
                         * @member {google.cloud.talent.v4beta1.ICommuteFilter|null|undefined} commuteFilter
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.commuteFilter = null;
    
                        /**
                         * JobQuery companyDisplayNames.
                         * @member {Array.<string>} companyDisplayNames
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.companyDisplayNames = $util.emptyArray;
    
                        /**
                         * JobQuery compensationFilter.
                         * @member {google.cloud.talent.v4beta1.ICompensationFilter|null|undefined} compensationFilter
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.compensationFilter = null;
    
                        /**
                         * JobQuery customAttributeFilter.
                         * @member {string} customAttributeFilter
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.customAttributeFilter = "";
    
                        /**
                         * JobQuery disableSpellCheck.
                         * @member {boolean} disableSpellCheck
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.disableSpellCheck = false;
    
                        /**
                         * JobQuery employmentTypes.
                         * @member {Array.<google.cloud.talent.v4beta1.EmploymentType>} employmentTypes
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.employmentTypes = $util.emptyArray;
    
                        /**
                         * JobQuery languageCodes.
                         * @member {Array.<string>} languageCodes
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.languageCodes = $util.emptyArray;
    
                        /**
                         * JobQuery publishTimeRange.
                         * @member {google.cloud.talent.v4beta1.ITimestampRange|null|undefined} publishTimeRange
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.publishTimeRange = null;
    
                        /**
                         * JobQuery excludedJobs.
                         * @member {Array.<string>} excludedJobs
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         */
                        JobQuery.prototype.excludedJobs = $util.emptyArray;
    
                        /**
                         * Creates a new JobQuery instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobQuery=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.JobQuery} JobQuery instance
                         */
                        JobQuery.create = function create(properties) {
                            return new JobQuery(properties);
                        };
    
                        /**
                         * Encodes the specified JobQuery message. Does not implicitly {@link google.cloud.talent.v4beta1.JobQuery.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobQuery} message JobQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobQuery.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && message.hasOwnProperty("query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.companies != null && message.companies.length)
                                for (var i = 0; i < message.companies.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.companies[i]);
                            if (message.locationFilters != null && message.locationFilters.length)
                                for (var i = 0; i < message.locationFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.LocationFilter.encode(message.locationFilters[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.jobCategories != null && message.jobCategories.length) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork();
                                for (var i = 0; i < message.jobCategories.length; ++i)
                                    writer.int32(message.jobCategories[i]);
                                writer.ldelim();
                            }
                            if (message.commuteFilter != null && message.hasOwnProperty("commuteFilter"))
                                $root.google.cloud.talent.v4beta1.CommuteFilter.encode(message.commuteFilter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.companyDisplayNames != null && message.companyDisplayNames.length)
                                for (var i = 0; i < message.companyDisplayNames.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.companyDisplayNames[i]);
                            if (message.compensationFilter != null && message.hasOwnProperty("compensationFilter"))
                                $root.google.cloud.talent.v4beta1.CompensationFilter.encode(message.compensationFilter, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.customAttributeFilter);
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.disableSpellCheck);
                            if (message.employmentTypes != null && message.employmentTypes.length) {
                                writer.uint32(/* id 10, wireType 2 =*/82).fork();
                                for (var i = 0; i < message.employmentTypes.length; ++i)
                                    writer.int32(message.employmentTypes[i]);
                                writer.ldelim();
                            }
                            if (message.languageCodes != null && message.languageCodes.length)
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.languageCodes[i]);
                            if (message.publishTimeRange != null && message.hasOwnProperty("publishTimeRange"))
                                $root.google.cloud.talent.v4beta1.TimestampRange.encode(message.publishTimeRange, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.excludedJobs != null && message.excludedJobs.length)
                                for (var i = 0; i < message.excludedJobs.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.excludedJobs[i]);
                            if (message.queryLanguageCode != null && message.hasOwnProperty("queryLanguageCode"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.queryLanguageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobQuery message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.JobQuery.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobQuery} message JobQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobQuery.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobQuery message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.JobQuery} JobQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobQuery.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.JobQuery();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.query = reader.string();
                                    break;
                                case 14:
                                    message.queryLanguageCode = reader.string();
                                    break;
                                case 2:
                                    if (!(message.companies && message.companies.length))
                                        message.companies = [];
                                    message.companies.push(reader.string());
                                    break;
                                case 3:
                                    if (!(message.locationFilters && message.locationFilters.length))
                                        message.locationFilters = [];
                                    message.locationFilters.push($root.google.cloud.talent.v4beta1.LocationFilter.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    if (!(message.jobCategories && message.jobCategories.length))
                                        message.jobCategories = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.jobCategories.push(reader.int32());
                                    } else
                                        message.jobCategories.push(reader.int32());
                                    break;
                                case 5:
                                    message.commuteFilter = $root.google.cloud.talent.v4beta1.CommuteFilter.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    if (!(message.companyDisplayNames && message.companyDisplayNames.length))
                                        message.companyDisplayNames = [];
                                    message.companyDisplayNames.push(reader.string());
                                    break;
                                case 7:
                                    message.compensationFilter = $root.google.cloud.talent.v4beta1.CompensationFilter.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.customAttributeFilter = reader.string();
                                    break;
                                case 9:
                                    message.disableSpellCheck = reader.bool();
                                    break;
                                case 10:
                                    if (!(message.employmentTypes && message.employmentTypes.length))
                                        message.employmentTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.employmentTypes.push(reader.int32());
                                    } else
                                        message.employmentTypes.push(reader.int32());
                                    break;
                                case 11:
                                    if (!(message.languageCodes && message.languageCodes.length))
                                        message.languageCodes = [];
                                    message.languageCodes.push(reader.string());
                                    break;
                                case 12:
                                    message.publishTimeRange = $root.google.cloud.talent.v4beta1.TimestampRange.decode(reader, reader.uint32());
                                    break;
                                case 13:
                                    if (!(message.excludedJobs && message.excludedJobs.length))
                                        message.excludedJobs = [];
                                    message.excludedJobs.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobQuery message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.JobQuery} JobQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobQuery.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobQuery message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobQuery.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.queryLanguageCode != null && message.hasOwnProperty("queryLanguageCode"))
                                if (!$util.isString(message.queryLanguageCode))
                                    return "queryLanguageCode: string expected";
                            if (message.companies != null && message.hasOwnProperty("companies")) {
                                if (!Array.isArray(message.companies))
                                    return "companies: array expected";
                                for (var i = 0; i < message.companies.length; ++i)
                                    if (!$util.isString(message.companies[i]))
                                        return "companies: string[] expected";
                            }
                            if (message.locationFilters != null && message.hasOwnProperty("locationFilters")) {
                                if (!Array.isArray(message.locationFilters))
                                    return "locationFilters: array expected";
                                for (var i = 0; i < message.locationFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.LocationFilter.verify(message.locationFilters[i]);
                                    if (error)
                                        return "locationFilters." + error;
                                }
                            }
                            if (message.jobCategories != null && message.hasOwnProperty("jobCategories")) {
                                if (!Array.isArray(message.jobCategories))
                                    return "jobCategories: array expected";
                                for (var i = 0; i < message.jobCategories.length; ++i)
                                    switch (message.jobCategories[i]) {
                                    default:
                                        return "jobCategories: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                    case 16:
                                    case 17:
                                    case 18:
                                    case 19:
                                    case 20:
                                    case 21:
                                    case 22:
                                    case 23:
                                    case 24:
                                    case 25:
                                    case 26:
                                    case 27:
                                    case 28:
                                    case 29:
                                    case 30:
                                        break;
                                    }
                            }
                            if (message.commuteFilter != null && message.hasOwnProperty("commuteFilter")) {
                                var error = $root.google.cloud.talent.v4beta1.CommuteFilter.verify(message.commuteFilter);
                                if (error)
                                    return "commuteFilter." + error;
                            }
                            if (message.companyDisplayNames != null && message.hasOwnProperty("companyDisplayNames")) {
                                if (!Array.isArray(message.companyDisplayNames))
                                    return "companyDisplayNames: array expected";
                                for (var i = 0; i < message.companyDisplayNames.length; ++i)
                                    if (!$util.isString(message.companyDisplayNames[i]))
                                        return "companyDisplayNames: string[] expected";
                            }
                            if (message.compensationFilter != null && message.hasOwnProperty("compensationFilter")) {
                                var error = $root.google.cloud.talent.v4beta1.CompensationFilter.verify(message.compensationFilter);
                                if (error)
                                    return "compensationFilter." + error;
                            }
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                if (!$util.isString(message.customAttributeFilter))
                                    return "customAttributeFilter: string expected";
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                if (typeof message.disableSpellCheck !== "boolean")
                                    return "disableSpellCheck: boolean expected";
                            if (message.employmentTypes != null && message.hasOwnProperty("employmentTypes")) {
                                if (!Array.isArray(message.employmentTypes))
                                    return "employmentTypes: array expected";
                                for (var i = 0; i < message.employmentTypes.length; ++i)
                                    switch (message.employmentTypes[i]) {
                                    default:
                                        return "employmentTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                        break;
                                    }
                            }
                            if (message.languageCodes != null && message.hasOwnProperty("languageCodes")) {
                                if (!Array.isArray(message.languageCodes))
                                    return "languageCodes: array expected";
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    if (!$util.isString(message.languageCodes[i]))
                                        return "languageCodes: string[] expected";
                            }
                            if (message.publishTimeRange != null && message.hasOwnProperty("publishTimeRange")) {
                                var error = $root.google.cloud.talent.v4beta1.TimestampRange.verify(message.publishTimeRange);
                                if (error)
                                    return "publishTimeRange." + error;
                            }
                            if (message.excludedJobs != null && message.hasOwnProperty("excludedJobs")) {
                                if (!Array.isArray(message.excludedJobs))
                                    return "excludedJobs: array expected";
                                for (var i = 0; i < message.excludedJobs.length; ++i)
                                    if (!$util.isString(message.excludedJobs[i]))
                                        return "excludedJobs: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a JobQuery message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.JobQuery} JobQuery
                         */
                        JobQuery.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.JobQuery)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.JobQuery();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.queryLanguageCode != null)
                                message.queryLanguageCode = String(object.queryLanguageCode);
                            if (object.companies) {
                                if (!Array.isArray(object.companies))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.companies: array expected");
                                message.companies = [];
                                for (var i = 0; i < object.companies.length; ++i)
                                    message.companies[i] = String(object.companies[i]);
                            }
                            if (object.locationFilters) {
                                if (!Array.isArray(object.locationFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.locationFilters: array expected");
                                message.locationFilters = [];
                                for (var i = 0; i < object.locationFilters.length; ++i) {
                                    if (typeof object.locationFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.JobQuery.locationFilters: object expected");
                                    message.locationFilters[i] = $root.google.cloud.talent.v4beta1.LocationFilter.fromObject(object.locationFilters[i]);
                                }
                            }
                            if (object.jobCategories) {
                                if (!Array.isArray(object.jobCategories))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.jobCategories: array expected");
                                message.jobCategories = [];
                                for (var i = 0; i < object.jobCategories.length; ++i)
                                    switch (object.jobCategories[i]) {
                                    default:
                                    case "JOB_CATEGORY_UNSPECIFIED":
                                    case 0:
                                        message.jobCategories[i] = 0;
                                        break;
                                    case "ACCOUNTING_AND_FINANCE":
                                    case 1:
                                        message.jobCategories[i] = 1;
                                        break;
                                    case "ADMINISTRATIVE_AND_OFFICE":
                                    case 2:
                                        message.jobCategories[i] = 2;
                                        break;
                                    case "ADVERTISING_AND_MARKETING":
                                    case 3:
                                        message.jobCategories[i] = 3;
                                        break;
                                    case "ANIMAL_CARE":
                                    case 4:
                                        message.jobCategories[i] = 4;
                                        break;
                                    case "ART_FASHION_AND_DESIGN":
                                    case 5:
                                        message.jobCategories[i] = 5;
                                        break;
                                    case "BUSINESS_OPERATIONS":
                                    case 6:
                                        message.jobCategories[i] = 6;
                                        break;
                                    case "CLEANING_AND_FACILITIES":
                                    case 7:
                                        message.jobCategories[i] = 7;
                                        break;
                                    case "COMPUTER_AND_IT":
                                    case 8:
                                        message.jobCategories[i] = 8;
                                        break;
                                    case "CONSTRUCTION":
                                    case 9:
                                        message.jobCategories[i] = 9;
                                        break;
                                    case "CUSTOMER_SERVICE":
                                    case 10:
                                        message.jobCategories[i] = 10;
                                        break;
                                    case "EDUCATION":
                                    case 11:
                                        message.jobCategories[i] = 11;
                                        break;
                                    case "ENTERTAINMENT_AND_TRAVEL":
                                    case 12:
                                        message.jobCategories[i] = 12;
                                        break;
                                    case "FARMING_AND_OUTDOORS":
                                    case 13:
                                        message.jobCategories[i] = 13;
                                        break;
                                    case "HEALTHCARE":
                                    case 14:
                                        message.jobCategories[i] = 14;
                                        break;
                                    case "HUMAN_RESOURCES":
                                    case 15:
                                        message.jobCategories[i] = 15;
                                        break;
                                    case "INSTALLATION_MAINTENANCE_AND_REPAIR":
                                    case 16:
                                        message.jobCategories[i] = 16;
                                        break;
                                    case "LEGAL":
                                    case 17:
                                        message.jobCategories[i] = 17;
                                        break;
                                    case "MANAGEMENT":
                                    case 18:
                                        message.jobCategories[i] = 18;
                                        break;
                                    case "MANUFACTURING_AND_WAREHOUSE":
                                    case 19:
                                        message.jobCategories[i] = 19;
                                        break;
                                    case "MEDIA_COMMUNICATIONS_AND_WRITING":
                                    case 20:
                                        message.jobCategories[i] = 20;
                                        break;
                                    case "OIL_GAS_AND_MINING":
                                    case 21:
                                        message.jobCategories[i] = 21;
                                        break;
                                    case "PERSONAL_CARE_AND_SERVICES":
                                    case 22:
                                        message.jobCategories[i] = 22;
                                        break;
                                    case "PROTECTIVE_SERVICES":
                                    case 23:
                                        message.jobCategories[i] = 23;
                                        break;
                                    case "REAL_ESTATE":
                                    case 24:
                                        message.jobCategories[i] = 24;
                                        break;
                                    case "RESTAURANT_AND_HOSPITALITY":
                                    case 25:
                                        message.jobCategories[i] = 25;
                                        break;
                                    case "SALES_AND_RETAIL":
                                    case 26:
                                        message.jobCategories[i] = 26;
                                        break;
                                    case "SCIENCE_AND_ENGINEERING":
                                    case 27:
                                        message.jobCategories[i] = 27;
                                        break;
                                    case "SOCIAL_SERVICES_AND_NON_PROFIT":
                                    case 28:
                                        message.jobCategories[i] = 28;
                                        break;
                                    case "SPORTS_FITNESS_AND_RECREATION":
                                    case 29:
                                        message.jobCategories[i] = 29;
                                        break;
                                    case "TRANSPORTATION_AND_LOGISTICS":
                                    case 30:
                                        message.jobCategories[i] = 30;
                                        break;
                                    }
                            }
                            if (object.commuteFilter != null) {
                                if (typeof object.commuteFilter !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.commuteFilter: object expected");
                                message.commuteFilter = $root.google.cloud.talent.v4beta1.CommuteFilter.fromObject(object.commuteFilter);
                            }
                            if (object.companyDisplayNames) {
                                if (!Array.isArray(object.companyDisplayNames))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.companyDisplayNames: array expected");
                                message.companyDisplayNames = [];
                                for (var i = 0; i < object.companyDisplayNames.length; ++i)
                                    message.companyDisplayNames[i] = String(object.companyDisplayNames[i]);
                            }
                            if (object.compensationFilter != null) {
                                if (typeof object.compensationFilter !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.compensationFilter: object expected");
                                message.compensationFilter = $root.google.cloud.talent.v4beta1.CompensationFilter.fromObject(object.compensationFilter);
                            }
                            if (object.customAttributeFilter != null)
                                message.customAttributeFilter = String(object.customAttributeFilter);
                            if (object.disableSpellCheck != null)
                                message.disableSpellCheck = Boolean(object.disableSpellCheck);
                            if (object.employmentTypes) {
                                if (!Array.isArray(object.employmentTypes))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.employmentTypes: array expected");
                                message.employmentTypes = [];
                                for (var i = 0; i < object.employmentTypes.length; ++i)
                                    switch (object.employmentTypes[i]) {
                                    default:
                                    case "EMPLOYMENT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.employmentTypes[i] = 0;
                                        break;
                                    case "FULL_TIME":
                                    case 1:
                                        message.employmentTypes[i] = 1;
                                        break;
                                    case "PART_TIME":
                                    case 2:
                                        message.employmentTypes[i] = 2;
                                        break;
                                    case "CONTRACTOR":
                                    case 3:
                                        message.employmentTypes[i] = 3;
                                        break;
                                    case "CONTRACT_TO_HIRE":
                                    case 4:
                                        message.employmentTypes[i] = 4;
                                        break;
                                    case "TEMPORARY":
                                    case 5:
                                        message.employmentTypes[i] = 5;
                                        break;
                                    case "INTERN":
                                    case 6:
                                        message.employmentTypes[i] = 6;
                                        break;
                                    case "VOLUNTEER":
                                    case 7:
                                        message.employmentTypes[i] = 7;
                                        break;
                                    case "PER_DIEM":
                                    case 8:
                                        message.employmentTypes[i] = 8;
                                        break;
                                    case "FLY_IN_FLY_OUT":
                                    case 9:
                                        message.employmentTypes[i] = 9;
                                        break;
                                    case "OTHER_EMPLOYMENT_TYPE":
                                    case 10:
                                        message.employmentTypes[i] = 10;
                                        break;
                                    }
                            }
                            if (object.languageCodes) {
                                if (!Array.isArray(object.languageCodes))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.languageCodes: array expected");
                                message.languageCodes = [];
                                for (var i = 0; i < object.languageCodes.length; ++i)
                                    message.languageCodes[i] = String(object.languageCodes[i]);
                            }
                            if (object.publishTimeRange != null) {
                                if (typeof object.publishTimeRange !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.publishTimeRange: object expected");
                                message.publishTimeRange = $root.google.cloud.talent.v4beta1.TimestampRange.fromObject(object.publishTimeRange);
                            }
                            if (object.excludedJobs) {
                                if (!Array.isArray(object.excludedJobs))
                                    throw TypeError(".google.cloud.talent.v4beta1.JobQuery.excludedJobs: array expected");
                                message.excludedJobs = [];
                                for (var i = 0; i < object.excludedJobs.length; ++i)
                                    message.excludedJobs[i] = String(object.excludedJobs[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobQuery message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.JobQuery} message JobQuery
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobQuery.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.companies = [];
                                object.locationFilters = [];
                                object.jobCategories = [];
                                object.companyDisplayNames = [];
                                object.employmentTypes = [];
                                object.languageCodes = [];
                                object.excludedJobs = [];
                            }
                            if (options.defaults) {
                                object.query = "";
                                object.commuteFilter = null;
                                object.compensationFilter = null;
                                object.customAttributeFilter = "";
                                object.disableSpellCheck = false;
                                object.publishTimeRange = null;
                                object.queryLanguageCode = "";
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.companies && message.companies.length) {
                                object.companies = [];
                                for (var j = 0; j < message.companies.length; ++j)
                                    object.companies[j] = message.companies[j];
                            }
                            if (message.locationFilters && message.locationFilters.length) {
                                object.locationFilters = [];
                                for (var j = 0; j < message.locationFilters.length; ++j)
                                    object.locationFilters[j] = $root.google.cloud.talent.v4beta1.LocationFilter.toObject(message.locationFilters[j], options);
                            }
                            if (message.jobCategories && message.jobCategories.length) {
                                object.jobCategories = [];
                                for (var j = 0; j < message.jobCategories.length; ++j)
                                    object.jobCategories[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.JobCategory[message.jobCategories[j]] : message.jobCategories[j];
                            }
                            if (message.commuteFilter != null && message.hasOwnProperty("commuteFilter"))
                                object.commuteFilter = $root.google.cloud.talent.v4beta1.CommuteFilter.toObject(message.commuteFilter, options);
                            if (message.companyDisplayNames && message.companyDisplayNames.length) {
                                object.companyDisplayNames = [];
                                for (var j = 0; j < message.companyDisplayNames.length; ++j)
                                    object.companyDisplayNames[j] = message.companyDisplayNames[j];
                            }
                            if (message.compensationFilter != null && message.hasOwnProperty("compensationFilter"))
                                object.compensationFilter = $root.google.cloud.talent.v4beta1.CompensationFilter.toObject(message.compensationFilter, options);
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                object.customAttributeFilter = message.customAttributeFilter;
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                object.disableSpellCheck = message.disableSpellCheck;
                            if (message.employmentTypes && message.employmentTypes.length) {
                                object.employmentTypes = [];
                                for (var j = 0; j < message.employmentTypes.length; ++j)
                                    object.employmentTypes[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.EmploymentType[message.employmentTypes[j]] : message.employmentTypes[j];
                            }
                            if (message.languageCodes && message.languageCodes.length) {
                                object.languageCodes = [];
                                for (var j = 0; j < message.languageCodes.length; ++j)
                                    object.languageCodes[j] = message.languageCodes[j];
                            }
                            if (message.publishTimeRange != null && message.hasOwnProperty("publishTimeRange"))
                                object.publishTimeRange = $root.google.cloud.talent.v4beta1.TimestampRange.toObject(message.publishTimeRange, options);
                            if (message.excludedJobs && message.excludedJobs.length) {
                                object.excludedJobs = [];
                                for (var j = 0; j < message.excludedJobs.length; ++j)
                                    object.excludedJobs[j] = message.excludedJobs[j];
                            }
                            if (message.queryLanguageCode != null && message.hasOwnProperty("queryLanguageCode"))
                                object.queryLanguageCode = message.queryLanguageCode;
                            return object;
                        };
    
                        /**
                         * Converts this JobQuery to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.JobQuery
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobQuery.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return JobQuery;
                    })();
    
                    v4beta1.ProfileQuery = (function() {
    
                        /**
                         * Properties of a ProfileQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IProfileQuery
                         * @property {string|null} [query] ProfileQuery query
                         * @property {Array.<google.cloud.talent.v4beta1.ILocationFilter>|null} [locationFilters] ProfileQuery locationFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IJobTitleFilter>|null} [jobTitleFilters] ProfileQuery jobTitleFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IEmployerFilter>|null} [employerFilters] ProfileQuery employerFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IEducationFilter>|null} [educationFilters] ProfileQuery educationFilters
                         * @property {Array.<google.cloud.talent.v4beta1.ISkillFilter>|null} [skillFilters] ProfileQuery skillFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IWorkExperienceFilter>|null} [workExperienceFilter] ProfileQuery workExperienceFilter
                         * @property {Array.<google.cloud.talent.v4beta1.ITimeFilter>|null} [timeFilters] ProfileQuery timeFilters
                         * @property {google.protobuf.IBoolValue|null} [hirableFilter] ProfileQuery hirableFilter
                         * @property {Array.<google.cloud.talent.v4beta1.IApplicationDateFilter>|null} [applicationDateFilters] ProfileQuery applicationDateFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter>|null} [applicationOutcomeNotesFilters] ProfileQuery applicationOutcomeNotesFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IApplicationJobFilter>|null} [applicationJobFilters] ProfileQuery applicationJobFilters
                         * @property {string|null} [customAttributeFilter] ProfileQuery customAttributeFilter
                         * @property {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter|null} [candidateAvailabilityFilter] ProfileQuery candidateAvailabilityFilter
                         * @property {Array.<google.cloud.talent.v4beta1.IAvailabilityFilter>|null} [availabilityFilters] ProfileQuery availabilityFilters
                         * @property {Array.<google.cloud.talent.v4beta1.IPersonNameFilter>|null} [personNameFilters] ProfileQuery personNameFilters
                         */
    
                        /**
                         * Constructs a new ProfileQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ProfileQuery.
                         * @implements IProfileQuery
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IProfileQuery=} [properties] Properties to set
                         */
                        function ProfileQuery(properties) {
                            this.locationFilters = [];
                            this.jobTitleFilters = [];
                            this.employerFilters = [];
                            this.educationFilters = [];
                            this.skillFilters = [];
                            this.workExperienceFilter = [];
                            this.timeFilters = [];
                            this.applicationDateFilters = [];
                            this.applicationOutcomeNotesFilters = [];
                            this.applicationJobFilters = [];
                            this.availabilityFilters = [];
                            this.personNameFilters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProfileQuery query.
                         * @member {string} query
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.query = "";
    
                        /**
                         * ProfileQuery locationFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.ILocationFilter>} locationFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.locationFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery jobTitleFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IJobTitleFilter>} jobTitleFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.jobTitleFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery employerFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IEmployerFilter>} employerFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.employerFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery educationFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IEducationFilter>} educationFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.educationFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery skillFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.ISkillFilter>} skillFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.skillFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery workExperienceFilter.
                         * @member {Array.<google.cloud.talent.v4beta1.IWorkExperienceFilter>} workExperienceFilter
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.workExperienceFilter = $util.emptyArray;
    
                        /**
                         * ProfileQuery timeFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.ITimeFilter>} timeFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.timeFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery hirableFilter.
                         * @member {google.protobuf.IBoolValue|null|undefined} hirableFilter
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.hirableFilter = null;
    
                        /**
                         * ProfileQuery applicationDateFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IApplicationDateFilter>} applicationDateFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.applicationDateFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery applicationOutcomeNotesFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter>} applicationOutcomeNotesFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.applicationOutcomeNotesFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery applicationJobFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IApplicationJobFilter>} applicationJobFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.applicationJobFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery customAttributeFilter.
                         * @member {string} customAttributeFilter
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.customAttributeFilter = "";
    
                        /**
                         * ProfileQuery candidateAvailabilityFilter.
                         * @member {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter|null|undefined} candidateAvailabilityFilter
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.candidateAvailabilityFilter = null;
    
                        /**
                         * ProfileQuery availabilityFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IAvailabilityFilter>} availabilityFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.availabilityFilters = $util.emptyArray;
    
                        /**
                         * ProfileQuery personNameFilters.
                         * @member {Array.<google.cloud.talent.v4beta1.IPersonNameFilter>} personNameFilters
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         */
                        ProfileQuery.prototype.personNameFilters = $util.emptyArray;
    
                        /**
                         * Creates a new ProfileQuery instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileQuery=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ProfileQuery} ProfileQuery instance
                         */
                        ProfileQuery.create = function create(properties) {
                            return new ProfileQuery(properties);
                        };
    
                        /**
                         * Encodes the specified ProfileQuery message. Does not implicitly {@link google.cloud.talent.v4beta1.ProfileQuery.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileQuery} message ProfileQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProfileQuery.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && message.hasOwnProperty("query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.locationFilters != null && message.locationFilters.length)
                                for (var i = 0; i < message.locationFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.LocationFilter.encode(message.locationFilters[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.jobTitleFilters != null && message.jobTitleFilters.length)
                                for (var i = 0; i < message.jobTitleFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.JobTitleFilter.encode(message.jobTitleFilters[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.employerFilters != null && message.employerFilters.length)
                                for (var i = 0; i < message.employerFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.EmployerFilter.encode(message.employerFilters[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.educationFilters != null && message.educationFilters.length)
                                for (var i = 0; i < message.educationFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.EducationFilter.encode(message.educationFilters[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.skillFilters != null && message.skillFilters.length)
                                for (var i = 0; i < message.skillFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.SkillFilter.encode(message.skillFilters[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.workExperienceFilter != null && message.workExperienceFilter.length)
                                for (var i = 0; i < message.workExperienceFilter.length; ++i)
                                    $root.google.cloud.talent.v4beta1.WorkExperienceFilter.encode(message.workExperienceFilter[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.timeFilters != null && message.timeFilters.length)
                                for (var i = 0; i < message.timeFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.TimeFilter.encode(message.timeFilters[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.hirableFilter != null && message.hasOwnProperty("hirableFilter"))
                                $root.google.protobuf.BoolValue.encode(message.hirableFilter, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.applicationDateFilters != null && message.applicationDateFilters.length)
                                for (var i = 0; i < message.applicationDateFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.ApplicationDateFilter.encode(message.applicationDateFilters[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.applicationOutcomeNotesFilters != null && message.applicationOutcomeNotesFilters.length)
                                for (var i = 0; i < message.applicationOutcomeNotesFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.encode(message.applicationOutcomeNotesFilters[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.applicationJobFilters != null && message.applicationJobFilters.length)
                                for (var i = 0; i < message.applicationJobFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.ApplicationJobFilter.encode(message.applicationJobFilters[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.customAttributeFilter);
                            if (message.candidateAvailabilityFilter != null && message.hasOwnProperty("candidateAvailabilityFilter"))
                                $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter.encode(message.candidateAvailabilityFilter, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.personNameFilters != null && message.personNameFilters.length)
                                for (var i = 0; i < message.personNameFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.PersonNameFilter.encode(message.personNameFilters[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.availabilityFilters != null && message.availabilityFilters.length)
                                for (var i = 0; i < message.availabilityFilters.length; ++i)
                                    $root.google.cloud.talent.v4beta1.AvailabilityFilter.encode(message.availabilityFilters[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProfileQuery message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ProfileQuery.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfileQuery} message ProfileQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProfileQuery.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProfileQuery message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ProfileQuery} ProfileQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProfileQuery.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ProfileQuery();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.query = reader.string();
                                    break;
                                case 2:
                                    if (!(message.locationFilters && message.locationFilters.length))
                                        message.locationFilters = [];
                                    message.locationFilters.push($root.google.cloud.talent.v4beta1.LocationFilter.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.jobTitleFilters && message.jobTitleFilters.length))
                                        message.jobTitleFilters = [];
                                    message.jobTitleFilters.push($root.google.cloud.talent.v4beta1.JobTitleFilter.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    if (!(message.employerFilters && message.employerFilters.length))
                                        message.employerFilters = [];
                                    message.employerFilters.push($root.google.cloud.talent.v4beta1.EmployerFilter.decode(reader, reader.uint32()));
                                    break;
                                case 5:
                                    if (!(message.educationFilters && message.educationFilters.length))
                                        message.educationFilters = [];
                                    message.educationFilters.push($root.google.cloud.talent.v4beta1.EducationFilter.decode(reader, reader.uint32()));
                                    break;
                                case 6:
                                    if (!(message.skillFilters && message.skillFilters.length))
                                        message.skillFilters = [];
                                    message.skillFilters.push($root.google.cloud.talent.v4beta1.SkillFilter.decode(reader, reader.uint32()));
                                    break;
                                case 7:
                                    if (!(message.workExperienceFilter && message.workExperienceFilter.length))
                                        message.workExperienceFilter = [];
                                    message.workExperienceFilter.push($root.google.cloud.talent.v4beta1.WorkExperienceFilter.decode(reader, reader.uint32()));
                                    break;
                                case 8:
                                    if (!(message.timeFilters && message.timeFilters.length))
                                        message.timeFilters = [];
                                    message.timeFilters.push($root.google.cloud.talent.v4beta1.TimeFilter.decode(reader, reader.uint32()));
                                    break;
                                case 9:
                                    message.hirableFilter = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    if (!(message.applicationDateFilters && message.applicationDateFilters.length))
                                        message.applicationDateFilters = [];
                                    message.applicationDateFilters.push($root.google.cloud.talent.v4beta1.ApplicationDateFilter.decode(reader, reader.uint32()));
                                    break;
                                case 11:
                                    if (!(message.applicationOutcomeNotesFilters && message.applicationOutcomeNotesFilters.length))
                                        message.applicationOutcomeNotesFilters = [];
                                    message.applicationOutcomeNotesFilters.push($root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.decode(reader, reader.uint32()));
                                    break;
                                case 13:
                                    if (!(message.applicationJobFilters && message.applicationJobFilters.length))
                                        message.applicationJobFilters = [];
                                    message.applicationJobFilters.push($root.google.cloud.talent.v4beta1.ApplicationJobFilter.decode(reader, reader.uint32()));
                                    break;
                                case 15:
                                    message.customAttributeFilter = reader.string();
                                    break;
                                case 16:
                                    message.candidateAvailabilityFilter = $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter.decode(reader, reader.uint32());
                                    break;
                                case 18:
                                    if (!(message.availabilityFilters && message.availabilityFilters.length))
                                        message.availabilityFilters = [];
                                    message.availabilityFilters.push($root.google.cloud.talent.v4beta1.AvailabilityFilter.decode(reader, reader.uint32()));
                                    break;
                                case 17:
                                    if (!(message.personNameFilters && message.personNameFilters.length))
                                        message.personNameFilters = [];
                                    message.personNameFilters.push($root.google.cloud.talent.v4beta1.PersonNameFilter.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProfileQuery message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ProfileQuery} ProfileQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProfileQuery.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProfileQuery message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProfileQuery.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.locationFilters != null && message.hasOwnProperty("locationFilters")) {
                                if (!Array.isArray(message.locationFilters))
                                    return "locationFilters: array expected";
                                for (var i = 0; i < message.locationFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.LocationFilter.verify(message.locationFilters[i]);
                                    if (error)
                                        return "locationFilters." + error;
                                }
                            }
                            if (message.jobTitleFilters != null && message.hasOwnProperty("jobTitleFilters")) {
                                if (!Array.isArray(message.jobTitleFilters))
                                    return "jobTitleFilters: array expected";
                                for (var i = 0; i < message.jobTitleFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.JobTitleFilter.verify(message.jobTitleFilters[i]);
                                    if (error)
                                        return "jobTitleFilters." + error;
                                }
                            }
                            if (message.employerFilters != null && message.hasOwnProperty("employerFilters")) {
                                if (!Array.isArray(message.employerFilters))
                                    return "employerFilters: array expected";
                                for (var i = 0; i < message.employerFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.EmployerFilter.verify(message.employerFilters[i]);
                                    if (error)
                                        return "employerFilters." + error;
                                }
                            }
                            if (message.educationFilters != null && message.hasOwnProperty("educationFilters")) {
                                if (!Array.isArray(message.educationFilters))
                                    return "educationFilters: array expected";
                                for (var i = 0; i < message.educationFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.EducationFilter.verify(message.educationFilters[i]);
                                    if (error)
                                        return "educationFilters." + error;
                                }
                            }
                            if (message.skillFilters != null && message.hasOwnProperty("skillFilters")) {
                                if (!Array.isArray(message.skillFilters))
                                    return "skillFilters: array expected";
                                for (var i = 0; i < message.skillFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.SkillFilter.verify(message.skillFilters[i]);
                                    if (error)
                                        return "skillFilters." + error;
                                }
                            }
                            if (message.workExperienceFilter != null && message.hasOwnProperty("workExperienceFilter")) {
                                if (!Array.isArray(message.workExperienceFilter))
                                    return "workExperienceFilter: array expected";
                                for (var i = 0; i < message.workExperienceFilter.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.WorkExperienceFilter.verify(message.workExperienceFilter[i]);
                                    if (error)
                                        return "workExperienceFilter." + error;
                                }
                            }
                            if (message.timeFilters != null && message.hasOwnProperty("timeFilters")) {
                                if (!Array.isArray(message.timeFilters))
                                    return "timeFilters: array expected";
                                for (var i = 0; i < message.timeFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.TimeFilter.verify(message.timeFilters[i]);
                                    if (error)
                                        return "timeFilters." + error;
                                }
                            }
                            if (message.hirableFilter != null && message.hasOwnProperty("hirableFilter")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.hirableFilter);
                                if (error)
                                    return "hirableFilter." + error;
                            }
                            if (message.applicationDateFilters != null && message.hasOwnProperty("applicationDateFilters")) {
                                if (!Array.isArray(message.applicationDateFilters))
                                    return "applicationDateFilters: array expected";
                                for (var i = 0; i < message.applicationDateFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.ApplicationDateFilter.verify(message.applicationDateFilters[i]);
                                    if (error)
                                        return "applicationDateFilters." + error;
                                }
                            }
                            if (message.applicationOutcomeNotesFilters != null && message.hasOwnProperty("applicationOutcomeNotesFilters")) {
                                if (!Array.isArray(message.applicationOutcomeNotesFilters))
                                    return "applicationOutcomeNotesFilters: array expected";
                                for (var i = 0; i < message.applicationOutcomeNotesFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.verify(message.applicationOutcomeNotesFilters[i]);
                                    if (error)
                                        return "applicationOutcomeNotesFilters." + error;
                                }
                            }
                            if (message.applicationJobFilters != null && message.hasOwnProperty("applicationJobFilters")) {
                                if (!Array.isArray(message.applicationJobFilters))
                                    return "applicationJobFilters: array expected";
                                for (var i = 0; i < message.applicationJobFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.ApplicationJobFilter.verify(message.applicationJobFilters[i]);
                                    if (error)
                                        return "applicationJobFilters." + error;
                                }
                            }
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                if (!$util.isString(message.customAttributeFilter))
                                    return "customAttributeFilter: string expected";
                            if (message.candidateAvailabilityFilter != null && message.hasOwnProperty("candidateAvailabilityFilter")) {
                                var error = $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter.verify(message.candidateAvailabilityFilter);
                                if (error)
                                    return "candidateAvailabilityFilter." + error;
                            }
                            if (message.availabilityFilters != null && message.hasOwnProperty("availabilityFilters")) {
                                if (!Array.isArray(message.availabilityFilters))
                                    return "availabilityFilters: array expected";
                                for (var i = 0; i < message.availabilityFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.AvailabilityFilter.verify(message.availabilityFilters[i]);
                                    if (error)
                                        return "availabilityFilters." + error;
                                }
                            }
                            if (message.personNameFilters != null && message.hasOwnProperty("personNameFilters")) {
                                if (!Array.isArray(message.personNameFilters))
                                    return "personNameFilters: array expected";
                                for (var i = 0; i < message.personNameFilters.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.PersonNameFilter.verify(message.personNameFilters[i]);
                                    if (error)
                                        return "personNameFilters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProfileQuery message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ProfileQuery} ProfileQuery
                         */
                        ProfileQuery.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ProfileQuery)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ProfileQuery();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.locationFilters) {
                                if (!Array.isArray(object.locationFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.locationFilters: array expected");
                                message.locationFilters = [];
                                for (var i = 0; i < object.locationFilters.length; ++i) {
                                    if (typeof object.locationFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.locationFilters: object expected");
                                    message.locationFilters[i] = $root.google.cloud.talent.v4beta1.LocationFilter.fromObject(object.locationFilters[i]);
                                }
                            }
                            if (object.jobTitleFilters) {
                                if (!Array.isArray(object.jobTitleFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.jobTitleFilters: array expected");
                                message.jobTitleFilters = [];
                                for (var i = 0; i < object.jobTitleFilters.length; ++i) {
                                    if (typeof object.jobTitleFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.jobTitleFilters: object expected");
                                    message.jobTitleFilters[i] = $root.google.cloud.talent.v4beta1.JobTitleFilter.fromObject(object.jobTitleFilters[i]);
                                }
                            }
                            if (object.employerFilters) {
                                if (!Array.isArray(object.employerFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.employerFilters: array expected");
                                message.employerFilters = [];
                                for (var i = 0; i < object.employerFilters.length; ++i) {
                                    if (typeof object.employerFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.employerFilters: object expected");
                                    message.employerFilters[i] = $root.google.cloud.talent.v4beta1.EmployerFilter.fromObject(object.employerFilters[i]);
                                }
                            }
                            if (object.educationFilters) {
                                if (!Array.isArray(object.educationFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.educationFilters: array expected");
                                message.educationFilters = [];
                                for (var i = 0; i < object.educationFilters.length; ++i) {
                                    if (typeof object.educationFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.educationFilters: object expected");
                                    message.educationFilters[i] = $root.google.cloud.talent.v4beta1.EducationFilter.fromObject(object.educationFilters[i]);
                                }
                            }
                            if (object.skillFilters) {
                                if (!Array.isArray(object.skillFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.skillFilters: array expected");
                                message.skillFilters = [];
                                for (var i = 0; i < object.skillFilters.length; ++i) {
                                    if (typeof object.skillFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.skillFilters: object expected");
                                    message.skillFilters[i] = $root.google.cloud.talent.v4beta1.SkillFilter.fromObject(object.skillFilters[i]);
                                }
                            }
                            if (object.workExperienceFilter) {
                                if (!Array.isArray(object.workExperienceFilter))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.workExperienceFilter: array expected");
                                message.workExperienceFilter = [];
                                for (var i = 0; i < object.workExperienceFilter.length; ++i) {
                                    if (typeof object.workExperienceFilter[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.workExperienceFilter: object expected");
                                    message.workExperienceFilter[i] = $root.google.cloud.talent.v4beta1.WorkExperienceFilter.fromObject(object.workExperienceFilter[i]);
                                }
                            }
                            if (object.timeFilters) {
                                if (!Array.isArray(object.timeFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.timeFilters: array expected");
                                message.timeFilters = [];
                                for (var i = 0; i < object.timeFilters.length; ++i) {
                                    if (typeof object.timeFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.timeFilters: object expected");
                                    message.timeFilters[i] = $root.google.cloud.talent.v4beta1.TimeFilter.fromObject(object.timeFilters[i]);
                                }
                            }
                            if (object.hirableFilter != null) {
                                if (typeof object.hirableFilter !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.hirableFilter: object expected");
                                message.hirableFilter = $root.google.protobuf.BoolValue.fromObject(object.hirableFilter);
                            }
                            if (object.applicationDateFilters) {
                                if (!Array.isArray(object.applicationDateFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationDateFilters: array expected");
                                message.applicationDateFilters = [];
                                for (var i = 0; i < object.applicationDateFilters.length; ++i) {
                                    if (typeof object.applicationDateFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationDateFilters: object expected");
                                    message.applicationDateFilters[i] = $root.google.cloud.talent.v4beta1.ApplicationDateFilter.fromObject(object.applicationDateFilters[i]);
                                }
                            }
                            if (object.applicationOutcomeNotesFilters) {
                                if (!Array.isArray(object.applicationOutcomeNotesFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationOutcomeNotesFilters: array expected");
                                message.applicationOutcomeNotesFilters = [];
                                for (var i = 0; i < object.applicationOutcomeNotesFilters.length; ++i) {
                                    if (typeof object.applicationOutcomeNotesFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationOutcomeNotesFilters: object expected");
                                    message.applicationOutcomeNotesFilters[i] = $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.fromObject(object.applicationOutcomeNotesFilters[i]);
                                }
                            }
                            if (object.applicationJobFilters) {
                                if (!Array.isArray(object.applicationJobFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationJobFilters: array expected");
                                message.applicationJobFilters = [];
                                for (var i = 0; i < object.applicationJobFilters.length; ++i) {
                                    if (typeof object.applicationJobFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.applicationJobFilters: object expected");
                                    message.applicationJobFilters[i] = $root.google.cloud.talent.v4beta1.ApplicationJobFilter.fromObject(object.applicationJobFilters[i]);
                                }
                            }
                            if (object.customAttributeFilter != null)
                                message.customAttributeFilter = String(object.customAttributeFilter);
                            if (object.candidateAvailabilityFilter != null) {
                                if (typeof object.candidateAvailabilityFilter !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.candidateAvailabilityFilter: object expected");
                                message.candidateAvailabilityFilter = $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter.fromObject(object.candidateAvailabilityFilter);
                            }
                            if (object.availabilityFilters) {
                                if (!Array.isArray(object.availabilityFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.availabilityFilters: array expected");
                                message.availabilityFilters = [];
                                for (var i = 0; i < object.availabilityFilters.length; ++i) {
                                    if (typeof object.availabilityFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.availabilityFilters: object expected");
                                    message.availabilityFilters[i] = $root.google.cloud.talent.v4beta1.AvailabilityFilter.fromObject(object.availabilityFilters[i]);
                                }
                            }
                            if (object.personNameFilters) {
                                if (!Array.isArray(object.personNameFilters))
                                    throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.personNameFilters: array expected");
                                message.personNameFilters = [];
                                for (var i = 0; i < object.personNameFilters.length; ++i) {
                                    if (typeof object.personNameFilters[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ProfileQuery.personNameFilters: object expected");
                                    message.personNameFilters[i] = $root.google.cloud.talent.v4beta1.PersonNameFilter.fromObject(object.personNameFilters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProfileQuery message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.ProfileQuery} message ProfileQuery
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProfileQuery.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.locationFilters = [];
                                object.jobTitleFilters = [];
                                object.employerFilters = [];
                                object.educationFilters = [];
                                object.skillFilters = [];
                                object.workExperienceFilter = [];
                                object.timeFilters = [];
                                object.applicationDateFilters = [];
                                object.applicationOutcomeNotesFilters = [];
                                object.applicationJobFilters = [];
                                object.personNameFilters = [];
                                object.availabilityFilters = [];
                            }
                            if (options.defaults) {
                                object.query = "";
                                object.hirableFilter = null;
                                object.customAttributeFilter = "";
                                object.candidateAvailabilityFilter = null;
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.locationFilters && message.locationFilters.length) {
                                object.locationFilters = [];
                                for (var j = 0; j < message.locationFilters.length; ++j)
                                    object.locationFilters[j] = $root.google.cloud.talent.v4beta1.LocationFilter.toObject(message.locationFilters[j], options);
                            }
                            if (message.jobTitleFilters && message.jobTitleFilters.length) {
                                object.jobTitleFilters = [];
                                for (var j = 0; j < message.jobTitleFilters.length; ++j)
                                    object.jobTitleFilters[j] = $root.google.cloud.talent.v4beta1.JobTitleFilter.toObject(message.jobTitleFilters[j], options);
                            }
                            if (message.employerFilters && message.employerFilters.length) {
                                object.employerFilters = [];
                                for (var j = 0; j < message.employerFilters.length; ++j)
                                    object.employerFilters[j] = $root.google.cloud.talent.v4beta1.EmployerFilter.toObject(message.employerFilters[j], options);
                            }
                            if (message.educationFilters && message.educationFilters.length) {
                                object.educationFilters = [];
                                for (var j = 0; j < message.educationFilters.length; ++j)
                                    object.educationFilters[j] = $root.google.cloud.talent.v4beta1.EducationFilter.toObject(message.educationFilters[j], options);
                            }
                            if (message.skillFilters && message.skillFilters.length) {
                                object.skillFilters = [];
                                for (var j = 0; j < message.skillFilters.length; ++j)
                                    object.skillFilters[j] = $root.google.cloud.talent.v4beta1.SkillFilter.toObject(message.skillFilters[j], options);
                            }
                            if (message.workExperienceFilter && message.workExperienceFilter.length) {
                                object.workExperienceFilter = [];
                                for (var j = 0; j < message.workExperienceFilter.length; ++j)
                                    object.workExperienceFilter[j] = $root.google.cloud.talent.v4beta1.WorkExperienceFilter.toObject(message.workExperienceFilter[j], options);
                            }
                            if (message.timeFilters && message.timeFilters.length) {
                                object.timeFilters = [];
                                for (var j = 0; j < message.timeFilters.length; ++j)
                                    object.timeFilters[j] = $root.google.cloud.talent.v4beta1.TimeFilter.toObject(message.timeFilters[j], options);
                            }
                            if (message.hirableFilter != null && message.hasOwnProperty("hirableFilter"))
                                object.hirableFilter = $root.google.protobuf.BoolValue.toObject(message.hirableFilter, options);
                            if (message.applicationDateFilters && message.applicationDateFilters.length) {
                                object.applicationDateFilters = [];
                                for (var j = 0; j < message.applicationDateFilters.length; ++j)
                                    object.applicationDateFilters[j] = $root.google.cloud.talent.v4beta1.ApplicationDateFilter.toObject(message.applicationDateFilters[j], options);
                            }
                            if (message.applicationOutcomeNotesFilters && message.applicationOutcomeNotesFilters.length) {
                                object.applicationOutcomeNotesFilters = [];
                                for (var j = 0; j < message.applicationOutcomeNotesFilters.length; ++j)
                                    object.applicationOutcomeNotesFilters[j] = $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.toObject(message.applicationOutcomeNotesFilters[j], options);
                            }
                            if (message.applicationJobFilters && message.applicationJobFilters.length) {
                                object.applicationJobFilters = [];
                                for (var j = 0; j < message.applicationJobFilters.length; ++j)
                                    object.applicationJobFilters[j] = $root.google.cloud.talent.v4beta1.ApplicationJobFilter.toObject(message.applicationJobFilters[j], options);
                            }
                            if (message.customAttributeFilter != null && message.hasOwnProperty("customAttributeFilter"))
                                object.customAttributeFilter = message.customAttributeFilter;
                            if (message.candidateAvailabilityFilter != null && message.hasOwnProperty("candidateAvailabilityFilter"))
                                object.candidateAvailabilityFilter = $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter.toObject(message.candidateAvailabilityFilter, options);
                            if (message.personNameFilters && message.personNameFilters.length) {
                                object.personNameFilters = [];
                                for (var j = 0; j < message.personNameFilters.length; ++j)
                                    object.personNameFilters[j] = $root.google.cloud.talent.v4beta1.PersonNameFilter.toObject(message.personNameFilters[j], options);
                            }
                            if (message.availabilityFilters && message.availabilityFilters.length) {
                                object.availabilityFilters = [];
                                for (var j = 0; j < message.availabilityFilters.length; ++j)
                                    object.availabilityFilters[j] = $root.google.cloud.talent.v4beta1.AvailabilityFilter.toObject(message.availabilityFilters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ProfileQuery to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ProfileQuery
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProfileQuery.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ProfileQuery;
                    })();
    
                    v4beta1.LocationFilter = (function() {
    
                        /**
                         * Properties of a LocationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ILocationFilter
                         * @property {string|null} [address] LocationFilter address
                         * @property {string|null} [regionCode] LocationFilter regionCode
                         * @property {google.type.ILatLng|null} [latLng] LocationFilter latLng
                         * @property {number|null} [distanceInMiles] LocationFilter distanceInMiles
                         * @property {google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference|null} [telecommutePreference] LocationFilter telecommutePreference
                         * @property {boolean|null} [negated] LocationFilter negated
                         */
    
                        /**
                         * Constructs a new LocationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a LocationFilter.
                         * @implements ILocationFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ILocationFilter=} [properties] Properties to set
                         */
                        function LocationFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationFilter address.
                         * @member {string} address
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.address = "";
    
                        /**
                         * LocationFilter regionCode.
                         * @member {string} regionCode
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.regionCode = "";
    
                        /**
                         * LocationFilter latLng.
                         * @member {google.type.ILatLng|null|undefined} latLng
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.latLng = null;
    
                        /**
                         * LocationFilter distanceInMiles.
                         * @member {number} distanceInMiles
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.distanceInMiles = 0;
    
                        /**
                         * LocationFilter telecommutePreference.
                         * @member {google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference} telecommutePreference
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.telecommutePreference = 0;
    
                        /**
                         * LocationFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         */
                        LocationFilter.prototype.negated = false;
    
                        /**
                         * Creates a new LocationFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocationFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.LocationFilter} LocationFilter instance
                         */
                        LocationFilter.create = function create(properties) {
                            return new LocationFilter(properties);
                        };
    
                        /**
                         * Encodes the specified LocationFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.LocationFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocationFilter} message LocationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.address != null && message.hasOwnProperty("address"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                            if (message.latLng != null && message.hasOwnProperty("latLng"))
                                $root.google.type.LatLng.encode(message.latLng, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.distanceInMiles != null && message.hasOwnProperty("distanceInMiles"))
                                writer.uint32(/* id 4, wireType 1 =*/33).double(message.distanceInMiles);
                            if (message.telecommutePreference != null && message.hasOwnProperty("telecommutePreference"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.telecommutePreference);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.LocationFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ILocationFilter} message LocationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.LocationFilter} LocationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.LocationFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.address = reader.string();
                                    break;
                                case 2:
                                    message.regionCode = reader.string();
                                    break;
                                case 3:
                                    message.latLng = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.distanceInMiles = reader.double();
                                    break;
                                case 5:
                                    message.telecommutePreference = reader.int32();
                                    break;
                                case 6:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.LocationFilter} LocationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.address != null && message.hasOwnProperty("address"))
                                if (!$util.isString(message.address))
                                    return "address: string expected";
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                if (!$util.isString(message.regionCode))
                                    return "regionCode: string expected";
                            if (message.latLng != null && message.hasOwnProperty("latLng")) {
                                var error = $root.google.type.LatLng.verify(message.latLng);
                                if (error)
                                    return "latLng." + error;
                            }
                            if (message.distanceInMiles != null && message.hasOwnProperty("distanceInMiles"))
                                if (typeof message.distanceInMiles !== "number")
                                    return "distanceInMiles: number expected";
                            if (message.telecommutePreference != null && message.hasOwnProperty("telecommutePreference"))
                                switch (message.telecommutePreference) {
                                default:
                                    return "telecommutePreference: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a LocationFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.LocationFilter} LocationFilter
                         */
                        LocationFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.LocationFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.LocationFilter();
                            if (object.address != null)
                                message.address = String(object.address);
                            if (object.regionCode != null)
                                message.regionCode = String(object.regionCode);
                            if (object.latLng != null) {
                                if (typeof object.latLng !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.LocationFilter.latLng: object expected");
                                message.latLng = $root.google.type.LatLng.fromObject(object.latLng);
                            }
                            if (object.distanceInMiles != null)
                                message.distanceInMiles = Number(object.distanceInMiles);
                            switch (object.telecommutePreference) {
                            case "TELECOMMUTE_PREFERENCE_UNSPECIFIED":
                            case 0:
                                message.telecommutePreference = 0;
                                break;
                            case "TELECOMMUTE_EXCLUDED":
                            case 1:
                                message.telecommutePreference = 1;
                                break;
                            case "TELECOMMUTE_ALLOWED":
                            case 2:
                                message.telecommutePreference = 2;
                                break;
                            }
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.LocationFilter} message LocationFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.address = "";
                                object.regionCode = "";
                                object.latLng = null;
                                object.distanceInMiles = 0;
                                object.telecommutePreference = options.enums === String ? "TELECOMMUTE_PREFERENCE_UNSPECIFIED" : 0;
                                object.negated = false;
                            }
                            if (message.address != null && message.hasOwnProperty("address"))
                                object.address = message.address;
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                object.regionCode = message.regionCode;
                            if (message.latLng != null && message.hasOwnProperty("latLng"))
                                object.latLng = $root.google.type.LatLng.toObject(message.latLng, options);
                            if (message.distanceInMiles != null && message.hasOwnProperty("distanceInMiles"))
                                object.distanceInMiles = options.json && !isFinite(message.distanceInMiles) ? String(message.distanceInMiles) : message.distanceInMiles;
                            if (message.telecommutePreference != null && message.hasOwnProperty("telecommutePreference"))
                                object.telecommutePreference = options.enums === String ? $root.google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference[message.telecommutePreference] : message.telecommutePreference;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this LocationFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.LocationFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * TelecommutePreference enum.
                         * @name google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference
                         * @enum {string}
                         * @property {number} TELECOMMUTE_PREFERENCE_UNSPECIFIED=0 TELECOMMUTE_PREFERENCE_UNSPECIFIED value
                         * @property {number} TELECOMMUTE_EXCLUDED=1 TELECOMMUTE_EXCLUDED value
                         * @property {number} TELECOMMUTE_ALLOWED=2 TELECOMMUTE_ALLOWED value
                         */
                        LocationFilter.TelecommutePreference = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TELECOMMUTE_PREFERENCE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TELECOMMUTE_EXCLUDED"] = 1;
                            values[valuesById[2] = "TELECOMMUTE_ALLOWED"] = 2;
                            return values;
                        })();
    
                        return LocationFilter;
                    })();
    
                    v4beta1.CompensationFilter = (function() {
    
                        /**
                         * Properties of a CompensationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICompensationFilter
                         * @property {google.cloud.talent.v4beta1.CompensationFilter.FilterType|null} [type] CompensationFilter type
                         * @property {Array.<google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit>|null} [units] CompensationFilter units
                         * @property {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null} [range] CompensationFilter range
                         * @property {boolean|null} [includeJobsWithUnspecifiedCompensationRange] CompensationFilter includeJobsWithUnspecifiedCompensationRange
                         */
    
                        /**
                         * Constructs a new CompensationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CompensationFilter.
                         * @implements ICompensationFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICompensationFilter=} [properties] Properties to set
                         */
                        function CompensationFilter(properties) {
                            this.units = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompensationFilter type.
                         * @member {google.cloud.talent.v4beta1.CompensationFilter.FilterType} type
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @instance
                         */
                        CompensationFilter.prototype.type = 0;
    
                        /**
                         * CompensationFilter units.
                         * @member {Array.<google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit>} units
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @instance
                         */
                        CompensationFilter.prototype.units = $util.emptyArray;
    
                        /**
                         * CompensationFilter range.
                         * @member {google.cloud.talent.v4beta1.CompensationInfo.ICompensationRange|null|undefined} range
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @instance
                         */
                        CompensationFilter.prototype.range = null;
    
                        /**
                         * CompensationFilter includeJobsWithUnspecifiedCompensationRange.
                         * @member {boolean} includeJobsWithUnspecifiedCompensationRange
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @instance
                         */
                        CompensationFilter.prototype.includeJobsWithUnspecifiedCompensationRange = false;
    
                        /**
                         * Creates a new CompensationFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CompensationFilter} CompensationFilter instance
                         */
                        CompensationFilter.create = function create(properties) {
                            return new CompensationFilter(properties);
                        };
    
                        /**
                         * Encodes the specified CompensationFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationFilter} message CompensationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompensationFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.units != null && message.units.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.units.length; ++i)
                                    writer.int32(message.units[i]);
                                writer.ldelim();
                            }
                            if (message.range != null && message.hasOwnProperty("range"))
                                $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.encode(message.range, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.includeJobsWithUnspecifiedCompensationRange != null && message.hasOwnProperty("includeJobsWithUnspecifiedCompensationRange"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.includeJobsWithUnspecifiedCompensationRange);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompensationFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CompensationFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICompensationFilter} message CompensationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompensationFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompensationFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CompensationFilter} CompensationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompensationFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CompensationFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    if (!(message.units && message.units.length))
                                        message.units = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.units.push(reader.int32());
                                    } else
                                        message.units.push(reader.int32());
                                    break;
                                case 3:
                                    message.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.includeJobsWithUnspecifiedCompensationRange = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompensationFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CompensationFilter} CompensationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompensationFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompensationFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompensationFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.units != null && message.hasOwnProperty("units")) {
                                if (!Array.isArray(message.units))
                                    return "units: array expected";
                                for (var i = 0; i < message.units.length; ++i)
                                    switch (message.units[i]) {
                                    default:
                                        return "units: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                            }
                            if (message.range != null && message.hasOwnProperty("range")) {
                                var error = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.verify(message.range);
                                if (error)
                                    return "range." + error;
                            }
                            if (message.includeJobsWithUnspecifiedCompensationRange != null && message.hasOwnProperty("includeJobsWithUnspecifiedCompensationRange"))
                                if (typeof message.includeJobsWithUnspecifiedCompensationRange !== "boolean")
                                    return "includeJobsWithUnspecifiedCompensationRange: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CompensationFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CompensationFilter} CompensationFilter
                         */
                        CompensationFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CompensationFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CompensationFilter();
                            switch (object.type) {
                            case "FILTER_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "UNIT_ONLY":
                            case 1:
                                message.type = 1;
                                break;
                            case "UNIT_AND_AMOUNT":
                            case 2:
                                message.type = 2;
                                break;
                            case "ANNUALIZED_BASE_AMOUNT":
                            case 3:
                                message.type = 3;
                                break;
                            case "ANNUALIZED_TOTAL_AMOUNT":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.units) {
                                if (!Array.isArray(object.units))
                                    throw TypeError(".google.cloud.talent.v4beta1.CompensationFilter.units: array expected");
                                message.units = [];
                                for (var i = 0; i < object.units.length; ++i)
                                    switch (object.units[i]) {
                                    default:
                                    case "COMPENSATION_UNIT_UNSPECIFIED":
                                    case 0:
                                        message.units[i] = 0;
                                        break;
                                    case "HOURLY":
                                    case 1:
                                        message.units[i] = 1;
                                        break;
                                    case "DAILY":
                                    case 2:
                                        message.units[i] = 2;
                                        break;
                                    case "WEEKLY":
                                    case 3:
                                        message.units[i] = 3;
                                        break;
                                    case "MONTHLY":
                                    case 4:
                                        message.units[i] = 4;
                                        break;
                                    case "YEARLY":
                                    case 5:
                                        message.units[i] = 5;
                                        break;
                                    case "ONE_TIME":
                                    case 6:
                                        message.units[i] = 6;
                                        break;
                                    case "OTHER_COMPENSATION_UNIT":
                                    case 7:
                                        message.units[i] = 7;
                                        break;
                                    }
                            }
                            if (object.range != null) {
                                if (typeof object.range !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CompensationFilter.range: object expected");
                                message.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.fromObject(object.range);
                            }
                            if (object.includeJobsWithUnspecifiedCompensationRange != null)
                                message.includeJobsWithUnspecifiedCompensationRange = Boolean(object.includeJobsWithUnspecifiedCompensationRange);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompensationFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.CompensationFilter} message CompensationFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompensationFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.units = [];
                            if (options.defaults) {
                                object.type = options.enums === String ? "FILTER_TYPE_UNSPECIFIED" : 0;
                                object.range = null;
                                object.includeJobsWithUnspecifiedCompensationRange = false;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.CompensationFilter.FilterType[message.type] : message.type;
                            if (message.units && message.units.length) {
                                object.units = [];
                                for (var j = 0; j < message.units.length; ++j)
                                    object.units[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit[message.units[j]] : message.units[j];
                            }
                            if (message.range != null && message.hasOwnProperty("range"))
                                object.range = $root.google.cloud.talent.v4beta1.CompensationInfo.CompensationRange.toObject(message.range, options);
                            if (message.includeJobsWithUnspecifiedCompensationRange != null && message.hasOwnProperty("includeJobsWithUnspecifiedCompensationRange"))
                                object.includeJobsWithUnspecifiedCompensationRange = message.includeJobsWithUnspecifiedCompensationRange;
                            return object;
                        };
    
                        /**
                         * Converts this CompensationFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CompensationFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompensationFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * FilterType enum.
                         * @name google.cloud.talent.v4beta1.CompensationFilter.FilterType
                         * @enum {string}
                         * @property {number} FILTER_TYPE_UNSPECIFIED=0 FILTER_TYPE_UNSPECIFIED value
                         * @property {number} UNIT_ONLY=1 UNIT_ONLY value
                         * @property {number} UNIT_AND_AMOUNT=2 UNIT_AND_AMOUNT value
                         * @property {number} ANNUALIZED_BASE_AMOUNT=3 ANNUALIZED_BASE_AMOUNT value
                         * @property {number} ANNUALIZED_TOTAL_AMOUNT=4 ANNUALIZED_TOTAL_AMOUNT value
                         */
                        CompensationFilter.FilterType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FILTER_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "UNIT_ONLY"] = 1;
                            values[valuesById[2] = "UNIT_AND_AMOUNT"] = 2;
                            values[valuesById[3] = "ANNUALIZED_BASE_AMOUNT"] = 3;
                            values[valuesById[4] = "ANNUALIZED_TOTAL_AMOUNT"] = 4;
                            return values;
                        })();
    
                        return CompensationFilter;
                    })();
    
                    v4beta1.CommuteFilter = (function() {
    
                        /**
                         * Properties of a CommuteFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICommuteFilter
                         * @property {google.cloud.talent.v4beta1.CommuteMethod|null} [commuteMethod] CommuteFilter commuteMethod
                         * @property {google.type.ILatLng|null} [startCoordinates] CommuteFilter startCoordinates
                         * @property {google.protobuf.IDuration|null} [travelDuration] CommuteFilter travelDuration
                         * @property {boolean|null} [allowImpreciseAddresses] CommuteFilter allowImpreciseAddresses
                         * @property {google.cloud.talent.v4beta1.CommuteFilter.RoadTraffic|null} [roadTraffic] CommuteFilter roadTraffic
                         * @property {google.type.ITimeOfDay|null} [departureTime] CommuteFilter departureTime
                         */
    
                        /**
                         * Constructs a new CommuteFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CommuteFilter.
                         * @implements ICommuteFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICommuteFilter=} [properties] Properties to set
                         */
                        function CommuteFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommuteFilter commuteMethod.
                         * @member {google.cloud.talent.v4beta1.CommuteMethod} commuteMethod
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.commuteMethod = 0;
    
                        /**
                         * CommuteFilter startCoordinates.
                         * @member {google.type.ILatLng|null|undefined} startCoordinates
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.startCoordinates = null;
    
                        /**
                         * CommuteFilter travelDuration.
                         * @member {google.protobuf.IDuration|null|undefined} travelDuration
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.travelDuration = null;
    
                        /**
                         * CommuteFilter allowImpreciseAddresses.
                         * @member {boolean} allowImpreciseAddresses
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.allowImpreciseAddresses = false;
    
                        /**
                         * CommuteFilter roadTraffic.
                         * @member {google.cloud.talent.v4beta1.CommuteFilter.RoadTraffic} roadTraffic
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.roadTraffic = 0;
    
                        /**
                         * CommuteFilter departureTime.
                         * @member {google.type.ITimeOfDay|null|undefined} departureTime
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        CommuteFilter.prototype.departureTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommuteFilter trafficOption.
                         * @member {"roadTraffic"|"departureTime"|undefined} trafficOption
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         */
                        Object.defineProperty(CommuteFilter.prototype, "trafficOption", {
                            get: $util.oneOfGetter($oneOfFields = ["roadTraffic", "departureTime"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommuteFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICommuteFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CommuteFilter} CommuteFilter instance
                         */
                        CommuteFilter.create = function create(properties) {
                            return new CommuteFilter(properties);
                        };
    
                        /**
                         * Encodes the specified CommuteFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.CommuteFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICommuteFilter} message CommuteFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommuteFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commuteMethod != null && message.hasOwnProperty("commuteMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.commuteMethod);
                            if (message.startCoordinates != null && message.hasOwnProperty("startCoordinates"))
                                $root.google.type.LatLng.encode(message.startCoordinates, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.travelDuration != null && message.hasOwnProperty("travelDuration"))
                                $root.google.protobuf.Duration.encode(message.travelDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.allowImpreciseAddresses != null && message.hasOwnProperty("allowImpreciseAddresses"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowImpreciseAddresses);
                            if (message.roadTraffic != null && message.hasOwnProperty("roadTraffic"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.roadTraffic);
                            if (message.departureTime != null && message.hasOwnProperty("departureTime"))
                                $root.google.type.TimeOfDay.encode(message.departureTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommuteFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CommuteFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICommuteFilter} message CommuteFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommuteFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommuteFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CommuteFilter} CommuteFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommuteFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CommuteFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.commuteMethod = reader.int32();
                                    break;
                                case 2:
                                    message.startCoordinates = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.travelDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.allowImpreciseAddresses = reader.bool();
                                    break;
                                case 5:
                                    message.roadTraffic = reader.int32();
                                    break;
                                case 6:
                                    message.departureTime = $root.google.type.TimeOfDay.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommuteFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CommuteFilter} CommuteFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommuteFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommuteFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommuteFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.commuteMethod != null && message.hasOwnProperty("commuteMethod"))
                                switch (message.commuteMethod) {
                                default:
                                    return "commuteMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.startCoordinates != null && message.hasOwnProperty("startCoordinates")) {
                                var error = $root.google.type.LatLng.verify(message.startCoordinates);
                                if (error)
                                    return "startCoordinates." + error;
                            }
                            if (message.travelDuration != null && message.hasOwnProperty("travelDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.travelDuration);
                                if (error)
                                    return "travelDuration." + error;
                            }
                            if (message.allowImpreciseAddresses != null && message.hasOwnProperty("allowImpreciseAddresses"))
                                if (typeof message.allowImpreciseAddresses !== "boolean")
                                    return "allowImpreciseAddresses: boolean expected";
                            if (message.roadTraffic != null && message.hasOwnProperty("roadTraffic")) {
                                properties.trafficOption = 1;
                                switch (message.roadTraffic) {
                                default:
                                    return "roadTraffic: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                if (properties.trafficOption === 1)
                                    return "trafficOption: multiple values";
                                properties.trafficOption = 1;
                                {
                                    var error = $root.google.type.TimeOfDay.verify(message.departureTime);
                                    if (error)
                                        return "departureTime." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommuteFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CommuteFilter} CommuteFilter
                         */
                        CommuteFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CommuteFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CommuteFilter();
                            switch (object.commuteMethod) {
                            case "COMMUTE_METHOD_UNSPECIFIED":
                            case 0:
                                message.commuteMethod = 0;
                                break;
                            case "DRIVING":
                            case 1:
                                message.commuteMethod = 1;
                                break;
                            case "TRANSIT":
                            case 2:
                                message.commuteMethod = 2;
                                break;
                            case "WALKING":
                            case 3:
                                message.commuteMethod = 3;
                                break;
                            case "CYCLING":
                            case 4:
                                message.commuteMethod = 4;
                                break;
                            }
                            if (object.startCoordinates != null) {
                                if (typeof object.startCoordinates !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CommuteFilter.startCoordinates: object expected");
                                message.startCoordinates = $root.google.type.LatLng.fromObject(object.startCoordinates);
                            }
                            if (object.travelDuration != null) {
                                if (typeof object.travelDuration !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CommuteFilter.travelDuration: object expected");
                                message.travelDuration = $root.google.protobuf.Duration.fromObject(object.travelDuration);
                            }
                            if (object.allowImpreciseAddresses != null)
                                message.allowImpreciseAddresses = Boolean(object.allowImpreciseAddresses);
                            switch (object.roadTraffic) {
                            case "ROAD_TRAFFIC_UNSPECIFIED":
                            case 0:
                                message.roadTraffic = 0;
                                break;
                            case "TRAFFIC_FREE":
                            case 1:
                                message.roadTraffic = 1;
                                break;
                            case "BUSY_HOUR":
                            case 2:
                                message.roadTraffic = 2;
                                break;
                            }
                            if (object.departureTime != null) {
                                if (typeof object.departureTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CommuteFilter.departureTime: object expected");
                                message.departureTime = $root.google.type.TimeOfDay.fromObject(object.departureTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommuteFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.CommuteFilter} message CommuteFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommuteFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.commuteMethod = options.enums === String ? "COMMUTE_METHOD_UNSPECIFIED" : 0;
                                object.startCoordinates = null;
                                object.travelDuration = null;
                                object.allowImpreciseAddresses = false;
                            }
                            if (message.commuteMethod != null && message.hasOwnProperty("commuteMethod"))
                                object.commuteMethod = options.enums === String ? $root.google.cloud.talent.v4beta1.CommuteMethod[message.commuteMethod] : message.commuteMethod;
                            if (message.startCoordinates != null && message.hasOwnProperty("startCoordinates"))
                                object.startCoordinates = $root.google.type.LatLng.toObject(message.startCoordinates, options);
                            if (message.travelDuration != null && message.hasOwnProperty("travelDuration"))
                                object.travelDuration = $root.google.protobuf.Duration.toObject(message.travelDuration, options);
                            if (message.allowImpreciseAddresses != null && message.hasOwnProperty("allowImpreciseAddresses"))
                                object.allowImpreciseAddresses = message.allowImpreciseAddresses;
                            if (message.roadTraffic != null && message.hasOwnProperty("roadTraffic")) {
                                object.roadTraffic = options.enums === String ? $root.google.cloud.talent.v4beta1.CommuteFilter.RoadTraffic[message.roadTraffic] : message.roadTraffic;
                                if (options.oneofs)
                                    object.trafficOption = "roadTraffic";
                            }
                            if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                object.departureTime = $root.google.type.TimeOfDay.toObject(message.departureTime, options);
                                if (options.oneofs)
                                    object.trafficOption = "departureTime";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommuteFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CommuteFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommuteFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * RoadTraffic enum.
                         * @name google.cloud.talent.v4beta1.CommuteFilter.RoadTraffic
                         * @enum {string}
                         * @property {number} ROAD_TRAFFIC_UNSPECIFIED=0 ROAD_TRAFFIC_UNSPECIFIED value
                         * @property {number} TRAFFIC_FREE=1 TRAFFIC_FREE value
                         * @property {number} BUSY_HOUR=2 BUSY_HOUR value
                         */
                        CommuteFilter.RoadTraffic = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ROAD_TRAFFIC_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TRAFFIC_FREE"] = 1;
                            values[valuesById[2] = "BUSY_HOUR"] = 2;
                            return values;
                        })();
    
                        return CommuteFilter;
                    })();
    
                    v4beta1.JobTitleFilter = (function() {
    
                        /**
                         * Properties of a JobTitleFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IJobTitleFilter
                         * @property {string|null} [jobTitle] JobTitleFilter jobTitle
                         * @property {boolean|null} [negated] JobTitleFilter negated
                         */
    
                        /**
                         * Constructs a new JobTitleFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a JobTitleFilter.
                         * @implements IJobTitleFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IJobTitleFilter=} [properties] Properties to set
                         */
                        function JobTitleFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobTitleFilter jobTitle.
                         * @member {string} jobTitle
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @instance
                         */
                        JobTitleFilter.prototype.jobTitle = "";
    
                        /**
                         * JobTitleFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @instance
                         */
                        JobTitleFilter.prototype.negated = false;
    
                        /**
                         * Creates a new JobTitleFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobTitleFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.JobTitleFilter} JobTitleFilter instance
                         */
                        JobTitleFilter.create = function create(properties) {
                            return new JobTitleFilter(properties);
                        };
    
                        /**
                         * Encodes the specified JobTitleFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.JobTitleFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobTitleFilter} message JobTitleFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobTitleFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.jobTitle);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobTitleFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.JobTitleFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJobTitleFilter} message JobTitleFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobTitleFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobTitleFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.JobTitleFilter} JobTitleFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobTitleFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.JobTitleFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.jobTitle = reader.string();
                                    break;
                                case 2:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobTitleFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.JobTitleFilter} JobTitleFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobTitleFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobTitleFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobTitleFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                if (!$util.isString(message.jobTitle))
                                    return "jobTitle: string expected";
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a JobTitleFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.JobTitleFilter} JobTitleFilter
                         */
                        JobTitleFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.JobTitleFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.JobTitleFilter();
                            if (object.jobTitle != null)
                                message.jobTitle = String(object.jobTitle);
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobTitleFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.JobTitleFilter} message JobTitleFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobTitleFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.jobTitle = "";
                                object.negated = false;
                            }
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                object.jobTitle = message.jobTitle;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this JobTitleFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.JobTitleFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobTitleFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return JobTitleFilter;
                    })();
    
                    v4beta1.SkillFilter = (function() {
    
                        /**
                         * Properties of a SkillFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISkillFilter
                         * @property {string|null} [skill] SkillFilter skill
                         * @property {boolean|null} [negated] SkillFilter negated
                         */
    
                        /**
                         * Constructs a new SkillFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SkillFilter.
                         * @implements ISkillFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISkillFilter=} [properties] Properties to set
                         */
                        function SkillFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SkillFilter skill.
                         * @member {string} skill
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @instance
                         */
                        SkillFilter.prototype.skill = "";
    
                        /**
                         * SkillFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @instance
                         */
                        SkillFilter.prototype.negated = false;
    
                        /**
                         * Creates a new SkillFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkillFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SkillFilter} SkillFilter instance
                         */
                        SkillFilter.create = function create(properties) {
                            return new SkillFilter(properties);
                        };
    
                        /**
                         * Encodes the specified SkillFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.SkillFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkillFilter} message SkillFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkillFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.skill != null && message.hasOwnProperty("skill"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.skill);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SkillFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SkillFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISkillFilter} message SkillFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkillFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SkillFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SkillFilter} SkillFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkillFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SkillFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.skill = reader.string();
                                    break;
                                case 2:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SkillFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SkillFilter} SkillFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkillFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SkillFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SkillFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.skill != null && message.hasOwnProperty("skill"))
                                if (!$util.isString(message.skill))
                                    return "skill: string expected";
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SkillFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SkillFilter} SkillFilter
                         */
                        SkillFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SkillFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SkillFilter();
                            if (object.skill != null)
                                message.skill = String(object.skill);
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SkillFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.SkillFilter} message SkillFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SkillFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.skill = "";
                                object.negated = false;
                            }
                            if (message.skill != null && message.hasOwnProperty("skill"))
                                object.skill = message.skill;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this SkillFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SkillFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SkillFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SkillFilter;
                    })();
    
                    v4beta1.EmployerFilter = (function() {
    
                        /**
                         * Properties of an EmployerFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IEmployerFilter
                         * @property {string|null} [employer] EmployerFilter employer
                         * @property {google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode|null} [mode] EmployerFilter mode
                         * @property {boolean|null} [negated] EmployerFilter negated
                         */
    
                        /**
                         * Constructs a new EmployerFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an EmployerFilter.
                         * @implements IEmployerFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IEmployerFilter=} [properties] Properties to set
                         */
                        function EmployerFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EmployerFilter employer.
                         * @member {string} employer
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @instance
                         */
                        EmployerFilter.prototype.employer = "";
    
                        /**
                         * EmployerFilter mode.
                         * @member {google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode} mode
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @instance
                         */
                        EmployerFilter.prototype.mode = 0;
    
                        /**
                         * EmployerFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @instance
                         */
                        EmployerFilter.prototype.negated = false;
    
                        /**
                         * Creates a new EmployerFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmployerFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.EmployerFilter} EmployerFilter instance
                         */
                        EmployerFilter.create = function create(properties) {
                            return new EmployerFilter(properties);
                        };
    
                        /**
                         * Encodes the specified EmployerFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.EmployerFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmployerFilter} message EmployerFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmployerFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.employer != null && message.hasOwnProperty("employer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.employer);
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mode);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EmployerFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.EmployerFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmployerFilter} message EmployerFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmployerFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EmployerFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.EmployerFilter} EmployerFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmployerFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.EmployerFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.employer = reader.string();
                                    break;
                                case 2:
                                    message.mode = reader.int32();
                                    break;
                                case 3:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EmployerFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.EmployerFilter} EmployerFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmployerFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EmployerFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EmployerFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.employer != null && message.hasOwnProperty("employer"))
                                if (!$util.isString(message.employer))
                                    return "employer: string expected";
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                switch (message.mode) {
                                default:
                                    return "mode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an EmployerFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.EmployerFilter} EmployerFilter
                         */
                        EmployerFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.EmployerFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.EmployerFilter();
                            if (object.employer != null)
                                message.employer = String(object.employer);
                            switch (object.mode) {
                            case "EMPLOYER_FILTER_MODE_UNSPECIFIED":
                            case 0:
                                message.mode = 0;
                                break;
                            case "ALL_EMPLOYMENT_RECORDS":
                            case 1:
                                message.mode = 1;
                                break;
                            case "CURRENT_EMPLOYMENT_RECORDS_ONLY":
                            case 2:
                                message.mode = 2;
                                break;
                            case "PAST_EMPLOYMENT_RECORDS_ONLY":
                            case 3:
                                message.mode = 3;
                                break;
                            }
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EmployerFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.EmployerFilter} message EmployerFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EmployerFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.employer = "";
                                object.mode = options.enums === String ? "EMPLOYER_FILTER_MODE_UNSPECIFIED" : 0;
                                object.negated = false;
                            }
                            if (message.employer != null && message.hasOwnProperty("employer"))
                                object.employer = message.employer;
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = options.enums === String ? $root.google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode[message.mode] : message.mode;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this EmployerFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.EmployerFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EmployerFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * EmployerFilterMode enum.
                         * @name google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode
                         * @enum {string}
                         * @property {number} EMPLOYER_FILTER_MODE_UNSPECIFIED=0 EMPLOYER_FILTER_MODE_UNSPECIFIED value
                         * @property {number} ALL_EMPLOYMENT_RECORDS=1 ALL_EMPLOYMENT_RECORDS value
                         * @property {number} CURRENT_EMPLOYMENT_RECORDS_ONLY=2 CURRENT_EMPLOYMENT_RECORDS_ONLY value
                         * @property {number} PAST_EMPLOYMENT_RECORDS_ONLY=3 PAST_EMPLOYMENT_RECORDS_ONLY value
                         */
                        EmployerFilter.EmployerFilterMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EMPLOYER_FILTER_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALL_EMPLOYMENT_RECORDS"] = 1;
                            values[valuesById[2] = "CURRENT_EMPLOYMENT_RECORDS_ONLY"] = 2;
                            values[valuesById[3] = "PAST_EMPLOYMENT_RECORDS_ONLY"] = 3;
                            return values;
                        })();
    
                        return EmployerFilter;
                    })();
    
                    v4beta1.EducationFilter = (function() {
    
                        /**
                         * Properties of an EducationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IEducationFilter
                         * @property {string|null} [school] EducationFilter school
                         * @property {string|null} [fieldOfStudy] EducationFilter fieldOfStudy
                         * @property {google.cloud.talent.v4beta1.DegreeType|null} [degreeType] EducationFilter degreeType
                         * @property {boolean|null} [negated] EducationFilter negated
                         */
    
                        /**
                         * Constructs a new EducationFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an EducationFilter.
                         * @implements IEducationFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IEducationFilter=} [properties] Properties to set
                         */
                        function EducationFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EducationFilter school.
                         * @member {string} school
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @instance
                         */
                        EducationFilter.prototype.school = "";
    
                        /**
                         * EducationFilter fieldOfStudy.
                         * @member {string} fieldOfStudy
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @instance
                         */
                        EducationFilter.prototype.fieldOfStudy = "";
    
                        /**
                         * EducationFilter degreeType.
                         * @member {google.cloud.talent.v4beta1.DegreeType} degreeType
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @instance
                         */
                        EducationFilter.prototype.degreeType = 0;
    
                        /**
                         * EducationFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @instance
                         */
                        EducationFilter.prototype.negated = false;
    
                        /**
                         * Creates a new EducationFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.EducationFilter} EducationFilter instance
                         */
                        EducationFilter.create = function create(properties) {
                            return new EducationFilter(properties);
                        };
    
                        /**
                         * Encodes the specified EducationFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.EducationFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationFilter} message EducationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EducationFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.school != null && message.hasOwnProperty("school"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.school);
                            if (message.fieldOfStudy != null && message.hasOwnProperty("fieldOfStudy"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.fieldOfStudy);
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.degreeType);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EducationFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.EducationFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationFilter} message EducationFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EducationFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EducationFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.EducationFilter} EducationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EducationFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.EducationFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.school = reader.string();
                                    break;
                                case 2:
                                    message.fieldOfStudy = reader.string();
                                    break;
                                case 3:
                                    message.degreeType = reader.int32();
                                    break;
                                case 6:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EducationFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.EducationFilter} EducationFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EducationFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EducationFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EducationFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.school != null && message.hasOwnProperty("school"))
                                if (!$util.isString(message.school))
                                    return "school: string expected";
                            if (message.fieldOfStudy != null && message.hasOwnProperty("fieldOfStudy"))
                                if (!$util.isString(message.fieldOfStudy))
                                    return "fieldOfStudy: string expected";
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                switch (message.degreeType) {
                                default:
                                    return "degreeType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an EducationFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.EducationFilter} EducationFilter
                         */
                        EducationFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.EducationFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.EducationFilter();
                            if (object.school != null)
                                message.school = String(object.school);
                            if (object.fieldOfStudy != null)
                                message.fieldOfStudy = String(object.fieldOfStudy);
                            switch (object.degreeType) {
                            case "DEGREE_TYPE_UNSPECIFIED":
                            case 0:
                                message.degreeType = 0;
                                break;
                            case "PRIMARY_EDUCATION":
                            case 1:
                                message.degreeType = 1;
                                break;
                            case "LOWER_SECONDARY_EDUCATION":
                            case 2:
                                message.degreeType = 2;
                                break;
                            case "UPPER_SECONDARY_EDUCATION":
                            case 3:
                                message.degreeType = 3;
                                break;
                            case "ADULT_REMEDIAL_EDUCATION":
                            case 4:
                                message.degreeType = 4;
                                break;
                            case "ASSOCIATES_OR_EQUIVALENT":
                            case 5:
                                message.degreeType = 5;
                                break;
                            case "BACHELORS_OR_EQUIVALENT":
                            case 6:
                                message.degreeType = 6;
                                break;
                            case "MASTERS_OR_EQUIVALENT":
                            case 7:
                                message.degreeType = 7;
                                break;
                            case "DOCTORAL_OR_EQUIVALENT":
                            case 8:
                                message.degreeType = 8;
                                break;
                            }
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EducationFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.EducationFilter} message EducationFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EducationFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.school = "";
                                object.fieldOfStudy = "";
                                object.degreeType = options.enums === String ? "DEGREE_TYPE_UNSPECIFIED" : 0;
                                object.negated = false;
                            }
                            if (message.school != null && message.hasOwnProperty("school"))
                                object.school = message.school;
                            if (message.fieldOfStudy != null && message.hasOwnProperty("fieldOfStudy"))
                                object.fieldOfStudy = message.fieldOfStudy;
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                object.degreeType = options.enums === String ? $root.google.cloud.talent.v4beta1.DegreeType[message.degreeType] : message.degreeType;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this EducationFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.EducationFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EducationFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return EducationFilter;
                    })();
    
                    v4beta1.WorkExperienceFilter = (function() {
    
                        /**
                         * Properties of a WorkExperienceFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IWorkExperienceFilter
                         * @property {google.protobuf.IDuration|null} [minExperience] WorkExperienceFilter minExperience
                         * @property {google.protobuf.IDuration|null} [maxExperience] WorkExperienceFilter maxExperience
                         */
    
                        /**
                         * Constructs a new WorkExperienceFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a WorkExperienceFilter.
                         * @implements IWorkExperienceFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IWorkExperienceFilter=} [properties] Properties to set
                         */
                        function WorkExperienceFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkExperienceFilter minExperience.
                         * @member {google.protobuf.IDuration|null|undefined} minExperience
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @instance
                         */
                        WorkExperienceFilter.prototype.minExperience = null;
    
                        /**
                         * WorkExperienceFilter maxExperience.
                         * @member {google.protobuf.IDuration|null|undefined} maxExperience
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @instance
                         */
                        WorkExperienceFilter.prototype.maxExperience = null;
    
                        /**
                         * Creates a new WorkExperienceFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IWorkExperienceFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.WorkExperienceFilter} WorkExperienceFilter instance
                         */
                        WorkExperienceFilter.create = function create(properties) {
                            return new WorkExperienceFilter(properties);
                        };
    
                        /**
                         * Encodes the specified WorkExperienceFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.WorkExperienceFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IWorkExperienceFilter} message WorkExperienceFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkExperienceFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.minExperience != null && message.hasOwnProperty("minExperience"))
                                $root.google.protobuf.Duration.encode(message.minExperience, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.maxExperience != null && message.hasOwnProperty("maxExperience"))
                                $root.google.protobuf.Duration.encode(message.maxExperience, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkExperienceFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.WorkExperienceFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IWorkExperienceFilter} message WorkExperienceFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkExperienceFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkExperienceFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.WorkExperienceFilter} WorkExperienceFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkExperienceFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.WorkExperienceFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.minExperience = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.maxExperience = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkExperienceFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.WorkExperienceFilter} WorkExperienceFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkExperienceFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkExperienceFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkExperienceFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.minExperience != null && message.hasOwnProperty("minExperience")) {
                                var error = $root.google.protobuf.Duration.verify(message.minExperience);
                                if (error)
                                    return "minExperience." + error;
                            }
                            if (message.maxExperience != null && message.hasOwnProperty("maxExperience")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxExperience);
                                if (error)
                                    return "maxExperience." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WorkExperienceFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.WorkExperienceFilter} WorkExperienceFilter
                         */
                        WorkExperienceFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.WorkExperienceFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.WorkExperienceFilter();
                            if (object.minExperience != null) {
                                if (typeof object.minExperience !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.WorkExperienceFilter.minExperience: object expected");
                                message.minExperience = $root.google.protobuf.Duration.fromObject(object.minExperience);
                            }
                            if (object.maxExperience != null) {
                                if (typeof object.maxExperience !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.WorkExperienceFilter.maxExperience: object expected");
                                message.maxExperience = $root.google.protobuf.Duration.fromObject(object.maxExperience);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkExperienceFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.WorkExperienceFilter} message WorkExperienceFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkExperienceFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.minExperience = null;
                                object.maxExperience = null;
                            }
                            if (message.minExperience != null && message.hasOwnProperty("minExperience"))
                                object.minExperience = $root.google.protobuf.Duration.toObject(message.minExperience, options);
                            if (message.maxExperience != null && message.hasOwnProperty("maxExperience"))
                                object.maxExperience = $root.google.protobuf.Duration.toObject(message.maxExperience, options);
                            return object;
                        };
    
                        /**
                         * Converts this WorkExperienceFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.WorkExperienceFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkExperienceFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return WorkExperienceFilter;
                    })();
    
                    v4beta1.ApplicationDateFilter = (function() {
    
                        /**
                         * Properties of an ApplicationDateFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IApplicationDateFilter
                         * @property {google.type.IDate|null} [startDate] ApplicationDateFilter startDate
                         * @property {google.type.IDate|null} [endDate] ApplicationDateFilter endDate
                         */
    
                        /**
                         * Constructs a new ApplicationDateFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an ApplicationDateFilter.
                         * @implements IApplicationDateFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IApplicationDateFilter=} [properties] Properties to set
                         */
                        function ApplicationDateFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApplicationDateFilter startDate.
                         * @member {google.type.IDate|null|undefined} startDate
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @instance
                         */
                        ApplicationDateFilter.prototype.startDate = null;
    
                        /**
                         * ApplicationDateFilter endDate.
                         * @member {google.type.IDate|null|undefined} endDate
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @instance
                         */
                        ApplicationDateFilter.prototype.endDate = null;
    
                        /**
                         * Creates a new ApplicationDateFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationDateFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ApplicationDateFilter} ApplicationDateFilter instance
                         */
                        ApplicationDateFilter.create = function create(properties) {
                            return new ApplicationDateFilter(properties);
                        };
    
                        /**
                         * Encodes the specified ApplicationDateFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationDateFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationDateFilter} message ApplicationDateFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationDateFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                $root.google.type.Date.encode(message.startDate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                $root.google.type.Date.encode(message.endDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApplicationDateFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationDateFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationDateFilter} message ApplicationDateFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationDateFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApplicationDateFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ApplicationDateFilter} ApplicationDateFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationDateFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ApplicationDateFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApplicationDateFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ApplicationDateFilter} ApplicationDateFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationDateFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApplicationDateFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApplicationDateFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startDate != null && message.hasOwnProperty("startDate")) {
                                var error = $root.google.type.Date.verify(message.startDate);
                                if (error)
                                    return "startDate." + error;
                            }
                            if (message.endDate != null && message.hasOwnProperty("endDate")) {
                                var error = $root.google.type.Date.verify(message.endDate);
                                if (error)
                                    return "endDate." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ApplicationDateFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ApplicationDateFilter} ApplicationDateFilter
                         */
                        ApplicationDateFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ApplicationDateFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ApplicationDateFilter();
                            if (object.startDate != null) {
                                if (typeof object.startDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ApplicationDateFilter.startDate: object expected");
                                message.startDate = $root.google.type.Date.fromObject(object.startDate);
                            }
                            if (object.endDate != null) {
                                if (typeof object.endDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ApplicationDateFilter.endDate: object expected");
                                message.endDate = $root.google.type.Date.fromObject(object.endDate);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApplicationDateFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ApplicationDateFilter} message ApplicationDateFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApplicationDateFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = null;
                                object.endDate = null;
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = $root.google.type.Date.toObject(message.startDate, options);
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = $root.google.type.Date.toObject(message.endDate, options);
                            return object;
                        };
    
                        /**
                         * Converts this ApplicationDateFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ApplicationDateFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApplicationDateFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ApplicationDateFilter;
                    })();
    
                    v4beta1.ApplicationOutcomeNotesFilter = (function() {
    
                        /**
                         * Properties of an ApplicationOutcomeNotesFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IApplicationOutcomeNotesFilter
                         * @property {string|null} [outcomeNotes] ApplicationOutcomeNotesFilter outcomeNotes
                         * @property {boolean|null} [negated] ApplicationOutcomeNotesFilter negated
                         */
    
                        /**
                         * Constructs a new ApplicationOutcomeNotesFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an ApplicationOutcomeNotesFilter.
                         * @implements IApplicationOutcomeNotesFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter=} [properties] Properties to set
                         */
                        function ApplicationOutcomeNotesFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApplicationOutcomeNotesFilter outcomeNotes.
                         * @member {string} outcomeNotes
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @instance
                         */
                        ApplicationOutcomeNotesFilter.prototype.outcomeNotes = "";
    
                        /**
                         * ApplicationOutcomeNotesFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @instance
                         */
                        ApplicationOutcomeNotesFilter.prototype.negated = false;
    
                        /**
                         * Creates a new ApplicationOutcomeNotesFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter} ApplicationOutcomeNotesFilter instance
                         */
                        ApplicationOutcomeNotesFilter.create = function create(properties) {
                            return new ApplicationOutcomeNotesFilter(properties);
                        };
    
                        /**
                         * Encodes the specified ApplicationOutcomeNotesFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter} message ApplicationOutcomeNotesFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationOutcomeNotesFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.outcomeNotes);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApplicationOutcomeNotesFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationOutcomeNotesFilter} message ApplicationOutcomeNotesFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationOutcomeNotesFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApplicationOutcomeNotesFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter} ApplicationOutcomeNotesFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationOutcomeNotesFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.outcomeNotes = reader.string();
                                    break;
                                case 2:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApplicationOutcomeNotesFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter} ApplicationOutcomeNotesFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationOutcomeNotesFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApplicationOutcomeNotesFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApplicationOutcomeNotesFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                if (!$util.isString(message.outcomeNotes))
                                    return "outcomeNotes: string expected";
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApplicationOutcomeNotesFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter} ApplicationOutcomeNotesFilter
                         */
                        ApplicationOutcomeNotesFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter();
                            if (object.outcomeNotes != null)
                                message.outcomeNotes = String(object.outcomeNotes);
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApplicationOutcomeNotesFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter} message ApplicationOutcomeNotesFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApplicationOutcomeNotesFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.outcomeNotes = "";
                                object.negated = false;
                            }
                            if (message.outcomeNotes != null && message.hasOwnProperty("outcomeNotes"))
                                object.outcomeNotes = message.outcomeNotes;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this ApplicationOutcomeNotesFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApplicationOutcomeNotesFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ApplicationOutcomeNotesFilter;
                    })();
    
                    v4beta1.ApplicationJobFilter = (function() {
    
                        /**
                         * Properties of an ApplicationJobFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IApplicationJobFilter
                         * @property {string|null} [jobRequisitionId] ApplicationJobFilter jobRequisitionId
                         * @property {string|null} [jobTitle] ApplicationJobFilter jobTitle
                         * @property {boolean|null} [negated] ApplicationJobFilter negated
                         */
    
                        /**
                         * Constructs a new ApplicationJobFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an ApplicationJobFilter.
                         * @implements IApplicationJobFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IApplicationJobFilter=} [properties] Properties to set
                         */
                        function ApplicationJobFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApplicationJobFilter jobRequisitionId.
                         * @member {string} jobRequisitionId
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @instance
                         */
                        ApplicationJobFilter.prototype.jobRequisitionId = "";
    
                        /**
                         * ApplicationJobFilter jobTitle.
                         * @member {string} jobTitle
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @instance
                         */
                        ApplicationJobFilter.prototype.jobTitle = "";
    
                        /**
                         * ApplicationJobFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @instance
                         */
                        ApplicationJobFilter.prototype.negated = false;
    
                        /**
                         * Creates a new ApplicationJobFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationJobFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ApplicationJobFilter} ApplicationJobFilter instance
                         */
                        ApplicationJobFilter.create = function create(properties) {
                            return new ApplicationJobFilter(properties);
                        };
    
                        /**
                         * Encodes the specified ApplicationJobFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationJobFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationJobFilter} message ApplicationJobFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationJobFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobRequisitionId != null && message.hasOwnProperty("jobRequisitionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobRequisitionId);
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobTitle);
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApplicationJobFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ApplicationJobFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IApplicationJobFilter} message ApplicationJobFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationJobFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApplicationJobFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ApplicationJobFilter} ApplicationJobFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationJobFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ApplicationJobFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2:
                                    message.jobRequisitionId = reader.string();
                                    break;
                                case 3:
                                    message.jobTitle = reader.string();
                                    break;
                                case 4:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApplicationJobFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ApplicationJobFilter} ApplicationJobFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationJobFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApplicationJobFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApplicationJobFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobRequisitionId != null && message.hasOwnProperty("jobRequisitionId"))
                                if (!$util.isString(message.jobRequisitionId))
                                    return "jobRequisitionId: string expected";
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                if (!$util.isString(message.jobTitle))
                                    return "jobTitle: string expected";
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApplicationJobFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ApplicationJobFilter} ApplicationJobFilter
                         */
                        ApplicationJobFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ApplicationJobFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ApplicationJobFilter();
                            if (object.jobRequisitionId != null)
                                message.jobRequisitionId = String(object.jobRequisitionId);
                            if (object.jobTitle != null)
                                message.jobTitle = String(object.jobTitle);
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApplicationJobFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ApplicationJobFilter} message ApplicationJobFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApplicationJobFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.jobRequisitionId = "";
                                object.jobTitle = "";
                                object.negated = false;
                            }
                            if (message.jobRequisitionId != null && message.hasOwnProperty("jobRequisitionId"))
                                object.jobRequisitionId = message.jobRequisitionId;
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                object.jobTitle = message.jobTitle;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this ApplicationJobFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ApplicationJobFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApplicationJobFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ApplicationJobFilter;
                    })();
    
                    v4beta1.TimeFilter = (function() {
    
                        /**
                         * Properties of a TimeFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ITimeFilter
                         * @property {google.protobuf.ITimestamp|null} [startTime] TimeFilter startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] TimeFilter endTime
                         * @property {google.cloud.talent.v4beta1.TimeFilter.TimeField|null} [timeField] TimeFilter timeField
                         */
    
                        /**
                         * Constructs a new TimeFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a TimeFilter.
                         * @implements ITimeFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ITimeFilter=} [properties] Properties to set
                         */
                        function TimeFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimeFilter startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @instance
                         */
                        TimeFilter.prototype.startTime = null;
    
                        /**
                         * TimeFilter endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @instance
                         */
                        TimeFilter.prototype.endTime = null;
    
                        /**
                         * TimeFilter timeField.
                         * @member {google.cloud.talent.v4beta1.TimeFilter.TimeField} timeField
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @instance
                         */
                        TimeFilter.prototype.timeField = 0;
    
                        /**
                         * Creates a new TimeFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimeFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.TimeFilter} TimeFilter instance
                         */
                        TimeFilter.create = function create(properties) {
                            return new TimeFilter(properties);
                        };
    
                        /**
                         * Encodes the specified TimeFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.TimeFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimeFilter} message TimeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.timeField != null && message.hasOwnProperty("timeField"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.timeField);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimeFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.TimeFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITimeFilter} message TimeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimeFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.TimeFilter} TimeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.TimeFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.timeField = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimeFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.TimeFilter} TimeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimeFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimeFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.timeField != null && message.hasOwnProperty("timeField"))
                                switch (message.timeField) {
                                default:
                                    return "timeField: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TimeFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.TimeFilter} TimeFilter
                         */
                        TimeFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.TimeFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.TimeFilter();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.TimeFilter.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.TimeFilter.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.timeField) {
                            case "TIME_FIELD_UNSPECIFIED":
                            case 0:
                                message.timeField = 0;
                                break;
                            case "CREATE_TIME":
                            case 1:
                                message.timeField = 1;
                                break;
                            case "UPDATE_TIME":
                            case 2:
                                message.timeField = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimeFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.TimeFilter} message TimeFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimeFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.timeField = options.enums === String ? "TIME_FIELD_UNSPECIFIED" : 0;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.timeField != null && message.hasOwnProperty("timeField"))
                                object.timeField = options.enums === String ? $root.google.cloud.talent.v4beta1.TimeFilter.TimeField[message.timeField] : message.timeField;
                            return object;
                        };
    
                        /**
                         * Converts this TimeFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.TimeFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimeFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * TimeField enum.
                         * @name google.cloud.talent.v4beta1.TimeFilter.TimeField
                         * @enum {string}
                         * @property {number} TIME_FIELD_UNSPECIFIED=0 TIME_FIELD_UNSPECIFIED value
                         * @property {number} CREATE_TIME=1 CREATE_TIME value
                         * @property {number} UPDATE_TIME=2 UPDATE_TIME value
                         */
                        TimeFilter.TimeField = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIME_FIELD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATE_TIME"] = 1;
                            values[valuesById[2] = "UPDATE_TIME"] = 2;
                            return values;
                        })();
    
                        return TimeFilter;
                    })();
    
                    v4beta1.CandidateAvailabilityFilter = (function() {
    
                        /**
                         * Properties of a CandidateAvailabilityFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICandidateAvailabilityFilter
                         * @property {boolean|null} [negated] CandidateAvailabilityFilter negated
                         */
    
                        /**
                         * Constructs a new CandidateAvailabilityFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CandidateAvailabilityFilter.
                         * @implements ICandidateAvailabilityFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter=} [properties] Properties to set
                         */
                        function CandidateAvailabilityFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CandidateAvailabilityFilter negated.
                         * @member {boolean} negated
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @instance
                         */
                        CandidateAvailabilityFilter.prototype.negated = false;
    
                        /**
                         * Creates a new CandidateAvailabilityFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CandidateAvailabilityFilter} CandidateAvailabilityFilter instance
                         */
                        CandidateAvailabilityFilter.create = function create(properties) {
                            return new CandidateAvailabilityFilter(properties);
                        };
    
                        /**
                         * Encodes the specified CandidateAvailabilityFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.CandidateAvailabilityFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter} message CandidateAvailabilityFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CandidateAvailabilityFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.negated);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CandidateAvailabilityFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CandidateAvailabilityFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICandidateAvailabilityFilter} message CandidateAvailabilityFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CandidateAvailabilityFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CandidateAvailabilityFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CandidateAvailabilityFilter} CandidateAvailabilityFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CandidateAvailabilityFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.negated = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CandidateAvailabilityFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CandidateAvailabilityFilter} CandidateAvailabilityFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CandidateAvailabilityFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CandidateAvailabilityFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CandidateAvailabilityFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                if (typeof message.negated !== "boolean")
                                    return "negated: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CandidateAvailabilityFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CandidateAvailabilityFilter} CandidateAvailabilityFilter
                         */
                        CandidateAvailabilityFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CandidateAvailabilityFilter();
                            if (object.negated != null)
                                message.negated = Boolean(object.negated);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CandidateAvailabilityFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.CandidateAvailabilityFilter} message CandidateAvailabilityFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CandidateAvailabilityFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.negated = false;
                            if (message.negated != null && message.hasOwnProperty("negated"))
                                object.negated = message.negated;
                            return object;
                        };
    
                        /**
                         * Converts this CandidateAvailabilityFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CandidateAvailabilityFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CandidateAvailabilityFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CandidateAvailabilityFilter;
                    })();
    
                    v4beta1.AvailabilityFilter = (function() {
    
                        /**
                         * Properties of an AvailabilityFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IAvailabilityFilter
                         * @property {google.cloud.talent.v4beta1.AvailabilitySignalType|null} [signalType] AvailabilityFilter signalType
                         * @property {google.cloud.talent.v4beta1.ITimestampRange|null} [range] AvailabilityFilter range
                         * @property {boolean|null} [required] AvailabilityFilter required
                         */
    
                        /**
                         * Constructs a new AvailabilityFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an AvailabilityFilter.
                         * @implements IAvailabilityFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IAvailabilityFilter=} [properties] Properties to set
                         */
                        function AvailabilityFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AvailabilityFilter signalType.
                         * @member {google.cloud.talent.v4beta1.AvailabilitySignalType} signalType
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @instance
                         */
                        AvailabilityFilter.prototype.signalType = 0;
    
                        /**
                         * AvailabilityFilter range.
                         * @member {google.cloud.talent.v4beta1.ITimestampRange|null|undefined} range
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @instance
                         */
                        AvailabilityFilter.prototype.range = null;
    
                        /**
                         * AvailabilityFilter required.
                         * @member {boolean} required
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @instance
                         */
                        AvailabilityFilter.prototype.required = false;
    
                        /**
                         * Creates a new AvailabilityFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilityFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.AvailabilityFilter} AvailabilityFilter instance
                         */
                        AvailabilityFilter.create = function create(properties) {
                            return new AvailabilityFilter(properties);
                        };
    
                        /**
                         * Encodes the specified AvailabilityFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.AvailabilityFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilityFilter} message AvailabilityFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilityFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.signalType != null && message.hasOwnProperty("signalType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.signalType);
                            if (message.range != null && message.hasOwnProperty("range"))
                                $root.google.cloud.talent.v4beta1.TimestampRange.encode(message.range, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.required != null && message.hasOwnProperty("required"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.required);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AvailabilityFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.AvailabilityFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilityFilter} message AvailabilityFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilityFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AvailabilityFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.AvailabilityFilter} AvailabilityFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilityFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.AvailabilityFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.signalType = reader.int32();
                                    break;
                                case 2:
                                    message.range = $root.google.cloud.talent.v4beta1.TimestampRange.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.required = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AvailabilityFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.AvailabilityFilter} AvailabilityFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilityFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AvailabilityFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AvailabilityFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.signalType != null && message.hasOwnProperty("signalType"))
                                switch (message.signalType) {
                                default:
                                    return "signalType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.range != null && message.hasOwnProperty("range")) {
                                var error = $root.google.cloud.talent.v4beta1.TimestampRange.verify(message.range);
                                if (error)
                                    return "range." + error;
                            }
                            if (message.required != null && message.hasOwnProperty("required"))
                                if (typeof message.required !== "boolean")
                                    return "required: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an AvailabilityFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.AvailabilityFilter} AvailabilityFilter
                         */
                        AvailabilityFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.AvailabilityFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.AvailabilityFilter();
                            switch (object.signalType) {
                            case "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED":
                            case 0:
                                message.signalType = 0;
                                break;
                            case "JOB_APPLICATION":
                            case 1:
                                message.signalType = 1;
                                break;
                            case "RESUME_UPDATE":
                            case 2:
                                message.signalType = 2;
                                break;
                            case "CANDIDATE_UPDATE":
                            case 3:
                                message.signalType = 3;
                                break;
                            case "CLIENT_SUBMISSION":
                            case 4:
                                message.signalType = 4;
                                break;
                            }
                            if (object.range != null) {
                                if (typeof object.range !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.AvailabilityFilter.range: object expected");
                                message.range = $root.google.cloud.talent.v4beta1.TimestampRange.fromObject(object.range);
                            }
                            if (object.required != null)
                                message.required = Boolean(object.required);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AvailabilityFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.AvailabilityFilter} message AvailabilityFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AvailabilityFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.signalType = options.enums === String ? "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED" : 0;
                                object.range = null;
                                object.required = false;
                            }
                            if (message.signalType != null && message.hasOwnProperty("signalType"))
                                object.signalType = options.enums === String ? $root.google.cloud.talent.v4beta1.AvailabilitySignalType[message.signalType] : message.signalType;
                            if (message.range != null && message.hasOwnProperty("range"))
                                object.range = $root.google.cloud.talent.v4beta1.TimestampRange.toObject(message.range, options);
                            if (message.required != null && message.hasOwnProperty("required"))
                                object.required = message.required;
                            return object;
                        };
    
                        /**
                         * Converts this AvailabilityFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.AvailabilityFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AvailabilityFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return AvailabilityFilter;
                    })();
    
                    v4beta1.PersonNameFilter = (function() {
    
                        /**
                         * Properties of a PersonNameFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPersonNameFilter
                         * @property {string|null} [personName] PersonNameFilter personName
                         */
    
                        /**
                         * Constructs a new PersonNameFilter.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a PersonNameFilter.
                         * @implements IPersonNameFilter
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPersonNameFilter=} [properties] Properties to set
                         */
                        function PersonNameFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PersonNameFilter personName.
                         * @member {string} personName
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @instance
                         */
                        PersonNameFilter.prototype.personName = "";
    
                        /**
                         * Creates a new PersonNameFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonNameFilter=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.PersonNameFilter} PersonNameFilter instance
                         */
                        PersonNameFilter.create = function create(properties) {
                            return new PersonNameFilter(properties);
                        };
    
                        /**
                         * Encodes the specified PersonNameFilter message. Does not implicitly {@link google.cloud.talent.v4beta1.PersonNameFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonNameFilter} message PersonNameFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonNameFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.personName != null && message.hasOwnProperty("personName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.personName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PersonNameFilter message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.PersonNameFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonNameFilter} message PersonNameFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonNameFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PersonNameFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.PersonNameFilter} PersonNameFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonNameFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.PersonNameFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.personName = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PersonNameFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.PersonNameFilter} PersonNameFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonNameFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PersonNameFilter message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PersonNameFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.personName != null && message.hasOwnProperty("personName"))
                                if (!$util.isString(message.personName))
                                    return "personName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PersonNameFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.PersonNameFilter} PersonNameFilter
                         */
                        PersonNameFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.PersonNameFilter)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.PersonNameFilter();
                            if (object.personName != null)
                                message.personName = String(object.personName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PersonNameFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @static
                         * @param {google.cloud.talent.v4beta1.PersonNameFilter} message PersonNameFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PersonNameFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.personName = "";
                            if (message.personName != null && message.hasOwnProperty("personName"))
                                object.personName = message.personName;
                            return object;
                        };
    
                        /**
                         * Converts this PersonNameFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.PersonNameFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PersonNameFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return PersonNameFilter;
                    })();
    
                    v4beta1.HistogramQuery = (function() {
    
                        /**
                         * Properties of a HistogramQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IHistogramQuery
                         * @property {string|null} [histogramQuery] HistogramQuery histogramQuery
                         */
    
                        /**
                         * Constructs a new HistogramQuery.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a HistogramQuery.
                         * @implements IHistogramQuery
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IHistogramQuery=} [properties] Properties to set
                         */
                        function HistogramQuery(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HistogramQuery histogramQuery.
                         * @member {string} histogramQuery
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @instance
                         */
                        HistogramQuery.prototype.histogramQuery = "";
    
                        /**
                         * Creates a new HistogramQuery instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQuery=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.HistogramQuery} HistogramQuery instance
                         */
                        HistogramQuery.create = function create(properties) {
                            return new HistogramQuery(properties);
                        };
    
                        /**
                         * Encodes the specified HistogramQuery message. Does not implicitly {@link google.cloud.talent.v4beta1.HistogramQuery.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQuery} message HistogramQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQuery.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.histogramQuery);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HistogramQuery message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.HistogramQuery.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQuery} message HistogramQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQuery.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HistogramQuery message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.HistogramQuery} HistogramQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQuery.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.HistogramQuery();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.histogramQuery = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HistogramQuery message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.HistogramQuery} HistogramQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQuery.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HistogramQuery message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HistogramQuery.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                if (!$util.isString(message.histogramQuery))
                                    return "histogramQuery: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a HistogramQuery message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.HistogramQuery} HistogramQuery
                         */
                        HistogramQuery.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.HistogramQuery)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.HistogramQuery();
                            if (object.histogramQuery != null)
                                message.histogramQuery = String(object.histogramQuery);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HistogramQuery message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @static
                         * @param {google.cloud.talent.v4beta1.HistogramQuery} message HistogramQuery
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HistogramQuery.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.histogramQuery = "";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                object.histogramQuery = message.histogramQuery;
                            return object;
                        };
    
                        /**
                         * Converts this HistogramQuery to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.HistogramQuery
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HistogramQuery.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return HistogramQuery;
                    })();
    
                    v4beta1.HistogramQueryResult = (function() {
    
                        /**
                         * Properties of a HistogramQueryResult.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IHistogramQueryResult
                         * @property {string|null} [histogramQuery] HistogramQueryResult histogramQuery
                         * @property {Object.<string,number|Long>|null} [histogram] HistogramQueryResult histogram
                         */
    
                        /**
                         * Constructs a new HistogramQueryResult.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a HistogramQueryResult.
                         * @implements IHistogramQueryResult
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IHistogramQueryResult=} [properties] Properties to set
                         */
                        function HistogramQueryResult(properties) {
                            this.histogram = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HistogramQueryResult histogramQuery.
                         * @member {string} histogramQuery
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @instance
                         */
                        HistogramQueryResult.prototype.histogramQuery = "";
    
                        /**
                         * HistogramQueryResult histogram.
                         * @member {Object.<string,number|Long>} histogram
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @instance
                         */
                        HistogramQueryResult.prototype.histogram = $util.emptyObject;
    
                        /**
                         * Creates a new HistogramQueryResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQueryResult=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.HistogramQueryResult} HistogramQueryResult instance
                         */
                        HistogramQueryResult.create = function create(properties) {
                            return new HistogramQueryResult(properties);
                        };
    
                        /**
                         * Encodes the specified HistogramQueryResult message. Does not implicitly {@link google.cloud.talent.v4beta1.HistogramQueryResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQueryResult} message HistogramQueryResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.histogramQuery);
                            if (message.histogram != null && message.hasOwnProperty("histogram"))
                                for (var keys = Object.keys(message.histogram), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int64(message.histogram[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HistogramQueryResult message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.HistogramQueryResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.IHistogramQueryResult} message HistogramQueryResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HistogramQueryResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.HistogramQueryResult} HistogramQueryResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.HistogramQueryResult(), key;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.histogramQuery = reader.string();
                                    break;
                                case 2:
                                    reader.skip().pos++;
                                    if (message.histogram === $util.emptyObject)
                                        message.histogram = {};
                                    key = reader.string();
                                    reader.pos++;
                                    message.histogram[key] = reader.int64();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HistogramQueryResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.HistogramQueryResult} HistogramQueryResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HistogramQueryResult message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HistogramQueryResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                if (!$util.isString(message.histogramQuery))
                                    return "histogramQuery: string expected";
                            if (message.histogram != null && message.hasOwnProperty("histogram")) {
                                if (!$util.isObject(message.histogram))
                                    return "histogram: object expected";
                                var key = Object.keys(message.histogram);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isInteger(message.histogram[key[i]]) && !(message.histogram[key[i]] && $util.isInteger(message.histogram[key[i]].low) && $util.isInteger(message.histogram[key[i]].high)))
                                        return "histogram: integer|Long{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HistogramQueryResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.HistogramQueryResult} HistogramQueryResult
                         */
                        HistogramQueryResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.HistogramQueryResult)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.HistogramQueryResult();
                            if (object.histogramQuery != null)
                                message.histogramQuery = String(object.histogramQuery);
                            if (object.histogram) {
                                if (typeof object.histogram !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.HistogramQueryResult.histogram: object expected");
                                message.histogram = {};
                                for (var keys = Object.keys(object.histogram), i = 0; i < keys.length; ++i)
                                    if ($util.Long)
                                        (message.histogram[keys[i]] = $util.Long.fromValue(object.histogram[keys[i]])).unsigned = false;
                                    else if (typeof object.histogram[keys[i]] === "string")
                                        message.histogram[keys[i]] = parseInt(object.histogram[keys[i]], 10);
                                    else if (typeof object.histogram[keys[i]] === "number")
                                        message.histogram[keys[i]] = object.histogram[keys[i]];
                                    else if (typeof object.histogram[keys[i]] === "object")
                                        message.histogram[keys[i]] = new $util.LongBits(object.histogram[keys[i]].low >>> 0, object.histogram[keys[i]].high >>> 0).toNumber();
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HistogramQueryResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.talent.v4beta1.HistogramQueryResult} message HistogramQueryResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HistogramQueryResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.histogram = {};
                            if (options.defaults)
                                object.histogramQuery = "";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                object.histogramQuery = message.histogramQuery;
                            var keys2;
                            if (message.histogram && (keys2 = Object.keys(message.histogram)).length) {
                                object.histogram = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    if (typeof message.histogram[keys2[j]] === "number")
                                        object.histogram[keys2[j]] = options.longs === String ? String(message.histogram[keys2[j]]) : message.histogram[keys2[j]];
                                    else
                                        object.histogram[keys2[j]] = options.longs === String ? $util.Long.prototype.toString.call(message.histogram[keys2[j]]) : options.longs === Number ? new $util.LongBits(message.histogram[keys2[j]].low >>> 0, message.histogram[keys2[j]].high >>> 0).toNumber() : message.histogram[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HistogramQueryResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.HistogramQueryResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HistogramQueryResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return HistogramQueryResult;
                    })();
    
                    v4beta1.Job = (function() {
    
                        /**
                         * Properties of a Job.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IJob
                         * @property {string|null} [name] Job name
                         * @property {string|null} [company] Job company
                         * @property {string|null} [requisitionId] Job requisitionId
                         * @property {string|null} [title] Job title
                         * @property {string|null} [description] Job description
                         * @property {Array.<string>|null} [addresses] Job addresses
                         * @property {google.cloud.talent.v4beta1.Job.IApplicationInfo|null} [applicationInfo] Job applicationInfo
                         * @property {Array.<google.cloud.talent.v4beta1.JobBenefit>|null} [jobBenefits] Job jobBenefits
                         * @property {google.cloud.talent.v4beta1.ICompensationInfo|null} [compensationInfo] Job compensationInfo
                         * @property {Object.<string,google.cloud.talent.v4beta1.ICustomAttribute>|null} [customAttributes] Job customAttributes
                         * @property {Array.<google.cloud.talent.v4beta1.DegreeType>|null} [degreeTypes] Job degreeTypes
                         * @property {string|null} [department] Job department
                         * @property {Array.<google.cloud.talent.v4beta1.EmploymentType>|null} [employmentTypes] Job employmentTypes
                         * @property {string|null} [incentives] Job incentives
                         * @property {string|null} [languageCode] Job languageCode
                         * @property {google.cloud.talent.v4beta1.JobLevel|null} [jobLevel] Job jobLevel
                         * @property {number|null} [promotionValue] Job promotionValue
                         * @property {string|null} [qualifications] Job qualifications
                         * @property {string|null} [responsibilities] Job responsibilities
                         * @property {google.cloud.talent.v4beta1.PostingRegion|null} [postingRegion] Job postingRegion
                         * @property {google.cloud.talent.v4beta1.Visibility|null} [visibility] Job visibility
                         * @property {google.protobuf.ITimestamp|null} [jobStartTime] Job jobStartTime
                         * @property {google.protobuf.ITimestamp|null} [jobEndTime] Job jobEndTime
                         * @property {google.protobuf.ITimestamp|null} [postingPublishTime] Job postingPublishTime
                         * @property {google.protobuf.ITimestamp|null} [postingExpireTime] Job postingExpireTime
                         * @property {google.protobuf.ITimestamp|null} [postingCreateTime] Job postingCreateTime
                         * @property {google.protobuf.ITimestamp|null} [postingUpdateTime] Job postingUpdateTime
                         * @property {string|null} [companyDisplayName] Job companyDisplayName
                         * @property {google.cloud.talent.v4beta1.Job.IDerivedInfo|null} [derivedInfo] Job derivedInfo
                         * @property {google.cloud.talent.v4beta1.Job.IProcessingOptions|null} [processingOptions] Job processingOptions
                         */
    
                        /**
                         * Constructs a new Job.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Job.
                         * @implements IJob
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IJob=} [properties] Properties to set
                         */
                        function Job(properties) {
                            this.addresses = [];
                            this.jobBenefits = [];
                            this.customAttributes = {};
                            this.degreeTypes = [];
                            this.employmentTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Job name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.name = "";
    
                        /**
                         * Job company.
                         * @member {string} company
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.company = "";
    
                        /**
                         * Job requisitionId.
                         * @member {string} requisitionId
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.requisitionId = "";
    
                        /**
                         * Job title.
                         * @member {string} title
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.title = "";
    
                        /**
                         * Job description.
                         * @member {string} description
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.description = "";
    
                        /**
                         * Job addresses.
                         * @member {Array.<string>} addresses
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.addresses = $util.emptyArray;
    
                        /**
                         * Job applicationInfo.
                         * @member {google.cloud.talent.v4beta1.Job.IApplicationInfo|null|undefined} applicationInfo
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.applicationInfo = null;
    
                        /**
                         * Job jobBenefits.
                         * @member {Array.<google.cloud.talent.v4beta1.JobBenefit>} jobBenefits
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.jobBenefits = $util.emptyArray;
    
                        /**
                         * Job compensationInfo.
                         * @member {google.cloud.talent.v4beta1.ICompensationInfo|null|undefined} compensationInfo
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.compensationInfo = null;
    
                        /**
                         * Job customAttributes.
                         * @member {Object.<string,google.cloud.talent.v4beta1.ICustomAttribute>} customAttributes
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.customAttributes = $util.emptyObject;
    
                        /**
                         * Job degreeTypes.
                         * @member {Array.<google.cloud.talent.v4beta1.DegreeType>} degreeTypes
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.degreeTypes = $util.emptyArray;
    
                        /**
                         * Job department.
                         * @member {string} department
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.department = "";
    
                        /**
                         * Job employmentTypes.
                         * @member {Array.<google.cloud.talent.v4beta1.EmploymentType>} employmentTypes
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.employmentTypes = $util.emptyArray;
    
                        /**
                         * Job incentives.
                         * @member {string} incentives
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.incentives = "";
    
                        /**
                         * Job languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.languageCode = "";
    
                        /**
                         * Job jobLevel.
                         * @member {google.cloud.talent.v4beta1.JobLevel} jobLevel
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.jobLevel = 0;
    
                        /**
                         * Job promotionValue.
                         * @member {number} promotionValue
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.promotionValue = 0;
    
                        /**
                         * Job qualifications.
                         * @member {string} qualifications
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.qualifications = "";
    
                        /**
                         * Job responsibilities.
                         * @member {string} responsibilities
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.responsibilities = "";
    
                        /**
                         * Job postingRegion.
                         * @member {google.cloud.talent.v4beta1.PostingRegion} postingRegion
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.postingRegion = 0;
    
                        /**
                         * Job visibility.
                         * @member {google.cloud.talent.v4beta1.Visibility} visibility
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.visibility = 0;
    
                        /**
                         * Job jobStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} jobStartTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.jobStartTime = null;
    
                        /**
                         * Job jobEndTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} jobEndTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.jobEndTime = null;
    
                        /**
                         * Job postingPublishTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} postingPublishTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.postingPublishTime = null;
    
                        /**
                         * Job postingExpireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} postingExpireTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.postingExpireTime = null;
    
                        /**
                         * Job postingCreateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} postingCreateTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.postingCreateTime = null;
    
                        /**
                         * Job postingUpdateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} postingUpdateTime
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.postingUpdateTime = null;
    
                        /**
                         * Job companyDisplayName.
                         * @member {string} companyDisplayName
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.companyDisplayName = "";
    
                        /**
                         * Job derivedInfo.
                         * @member {google.cloud.talent.v4beta1.Job.IDerivedInfo|null|undefined} derivedInfo
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.derivedInfo = null;
    
                        /**
                         * Job processingOptions.
                         * @member {google.cloud.talent.v4beta1.Job.IProcessingOptions|null|undefined} processingOptions
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         */
                        Job.prototype.processingOptions = null;
    
                        /**
                         * Creates a new Job instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJob=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Job} Job instance
                         */
                        Job.create = function create(properties) {
                            return new Job(properties);
                        };
    
                        /**
                         * Encodes the specified Job message. Does not implicitly {@link google.cloud.talent.v4beta1.Job.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.company != null && message.hasOwnProperty("company"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.company);
                            if (message.requisitionId != null && message.hasOwnProperty("requisitionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requisitionId);
                            if (message.title != null && message.hasOwnProperty("title"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.title);
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                            if (message.addresses != null && message.addresses.length)
                                for (var i = 0; i < message.addresses.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.addresses[i]);
                            if (message.applicationInfo != null && message.hasOwnProperty("applicationInfo"))
                                $root.google.cloud.talent.v4beta1.Job.ApplicationInfo.encode(message.applicationInfo, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.jobBenefits != null && message.jobBenefits.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.jobBenefits.length; ++i)
                                    writer.int32(message.jobBenefits[i]);
                                writer.ldelim();
                            }
                            if (message.compensationInfo != null && message.hasOwnProperty("compensationInfo"))
                                $root.google.cloud.talent.v4beta1.CompensationInfo.encode(message.compensationInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.customAttributes != null && message.hasOwnProperty("customAttributes"))
                                for (var keys = Object.keys(message.customAttributes), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.talent.v4beta1.CustomAttribute.encode(message.customAttributes[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.degreeTypes != null && message.degreeTypes.length) {
                                writer.uint32(/* id 11, wireType 2 =*/90).fork();
                                for (var i = 0; i < message.degreeTypes.length; ++i)
                                    writer.int32(message.degreeTypes[i]);
                                writer.ldelim();
                            }
                            if (message.department != null && message.hasOwnProperty("department"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.department);
                            if (message.employmentTypes != null && message.employmentTypes.length) {
                                writer.uint32(/* id 13, wireType 2 =*/106).fork();
                                for (var i = 0; i < message.employmentTypes.length; ++i)
                                    writer.int32(message.employmentTypes[i]);
                                writer.ldelim();
                            }
                            if (message.incentives != null && message.hasOwnProperty("incentives"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.incentives);
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.languageCode);
                            if (message.jobLevel != null && message.hasOwnProperty("jobLevel"))
                                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.jobLevel);
                            if (message.promotionValue != null && message.hasOwnProperty("promotionValue"))
                                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.promotionValue);
                            if (message.qualifications != null && message.hasOwnProperty("qualifications"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.qualifications);
                            if (message.responsibilities != null && message.hasOwnProperty("responsibilities"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.responsibilities);
                            if (message.postingRegion != null && message.hasOwnProperty("postingRegion"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.postingRegion);
                            if (message.visibility != null && message.hasOwnProperty("visibility"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.visibility);
                            if (message.jobStartTime != null && message.hasOwnProperty("jobStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.jobStartTime, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.jobEndTime != null && message.hasOwnProperty("jobEndTime"))
                                $root.google.protobuf.Timestamp.encode(message.jobEndTime, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.postingPublishTime != null && message.hasOwnProperty("postingPublishTime"))
                                $root.google.protobuf.Timestamp.encode(message.postingPublishTime, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.postingExpireTime != null && message.hasOwnProperty("postingExpireTime"))
                                $root.google.protobuf.Timestamp.encode(message.postingExpireTime, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                            if (message.postingCreateTime != null && message.hasOwnProperty("postingCreateTime"))
                                $root.google.protobuf.Timestamp.encode(message.postingCreateTime, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                            if (message.postingUpdateTime != null && message.hasOwnProperty("postingUpdateTime"))
                                $root.google.protobuf.Timestamp.encode(message.postingUpdateTime, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                            if (message.companyDisplayName != null && message.hasOwnProperty("companyDisplayName"))
                                writer.uint32(/* id 28, wireType 2 =*/226).string(message.companyDisplayName);
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo"))
                                $root.google.cloud.talent.v4beta1.Job.DerivedInfo.encode(message.derivedInfo, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.processingOptions != null && message.hasOwnProperty("processingOptions"))
                                $root.google.cloud.talent.v4beta1.Job.ProcessingOptions.encode(message.processingOptions, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Job message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Job.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {google.cloud.talent.v4beta1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Job(), key;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.company = reader.string();
                                    break;
                                case 3:
                                    message.requisitionId = reader.string();
                                    break;
                                case 4:
                                    message.title = reader.string();
                                    break;
                                case 5:
                                    message.description = reader.string();
                                    break;
                                case 6:
                                    if (!(message.addresses && message.addresses.length))
                                        message.addresses = [];
                                    message.addresses.push(reader.string());
                                    break;
                                case 7:
                                    message.applicationInfo = $root.google.cloud.talent.v4beta1.Job.ApplicationInfo.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    if (!(message.jobBenefits && message.jobBenefits.length))
                                        message.jobBenefits = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.jobBenefits.push(reader.int32());
                                    } else
                                        message.jobBenefits.push(reader.int32());
                                    break;
                                case 9:
                                    message.compensationInfo = $root.google.cloud.talent.v4beta1.CompensationInfo.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    reader.skip().pos++;
                                    if (message.customAttributes === $util.emptyObject)
                                        message.customAttributes = {};
                                    key = reader.string();
                                    reader.pos++;
                                    message.customAttributes[key] = $root.google.cloud.talent.v4beta1.CustomAttribute.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    if (!(message.degreeTypes && message.degreeTypes.length))
                                        message.degreeTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.degreeTypes.push(reader.int32());
                                    } else
                                        message.degreeTypes.push(reader.int32());
                                    break;
                                case 12:
                                    message.department = reader.string();
                                    break;
                                case 13:
                                    if (!(message.employmentTypes && message.employmentTypes.length))
                                        message.employmentTypes = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.employmentTypes.push(reader.int32());
                                    } else
                                        message.employmentTypes.push(reader.int32());
                                    break;
                                case 14:
                                    message.incentives = reader.string();
                                    break;
                                case 15:
                                    message.languageCode = reader.string();
                                    break;
                                case 16:
                                    message.jobLevel = reader.int32();
                                    break;
                                case 17:
                                    message.promotionValue = reader.int32();
                                    break;
                                case 18:
                                    message.qualifications = reader.string();
                                    break;
                                case 19:
                                    message.responsibilities = reader.string();
                                    break;
                                case 20:
                                    message.postingRegion = reader.int32();
                                    break;
                                case 21:
                                    message.visibility = reader.int32();
                                    break;
                                case 22:
                                    message.jobStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 23:
                                    message.jobEndTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 24:
                                    message.postingPublishTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 25:
                                    message.postingExpireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 26:
                                    message.postingCreateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 27:
                                    message.postingUpdateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 28:
                                    message.companyDisplayName = reader.string();
                                    break;
                                case 29:
                                    message.derivedInfo = $root.google.cloud.talent.v4beta1.Job.DerivedInfo.decode(reader, reader.uint32());
                                    break;
                                case 30:
                                    message.processingOptions = $root.google.cloud.talent.v4beta1.Job.ProcessingOptions.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Job message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Job.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.company != null && message.hasOwnProperty("company"))
                                if (!$util.isString(message.company))
                                    return "company: string expected";
                            if (message.requisitionId != null && message.hasOwnProperty("requisitionId"))
                                if (!$util.isString(message.requisitionId))
                                    return "requisitionId: string expected";
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.addresses != null && message.hasOwnProperty("addresses")) {
                                if (!Array.isArray(message.addresses))
                                    return "addresses: array expected";
                                for (var i = 0; i < message.addresses.length; ++i)
                                    if (!$util.isString(message.addresses[i]))
                                        return "addresses: string[] expected";
                            }
                            if (message.applicationInfo != null && message.hasOwnProperty("applicationInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.Job.ApplicationInfo.verify(message.applicationInfo);
                                if (error)
                                    return "applicationInfo." + error;
                            }
                            if (message.jobBenefits != null && message.hasOwnProperty("jobBenefits")) {
                                if (!Array.isArray(message.jobBenefits))
                                    return "jobBenefits: array expected";
                                for (var i = 0; i < message.jobBenefits.length; ++i)
                                    switch (message.jobBenefits[i]) {
                                    default:
                                        return "jobBenefits: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                        break;
                                    }
                            }
                            if (message.compensationInfo != null && message.hasOwnProperty("compensationInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.CompensationInfo.verify(message.compensationInfo);
                                if (error)
                                    return "compensationInfo." + error;
                            }
                            if (message.customAttributes != null && message.hasOwnProperty("customAttributes")) {
                                if (!$util.isObject(message.customAttributes))
                                    return "customAttributes: object expected";
                                var key = Object.keys(message.customAttributes);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.CustomAttribute.verify(message.customAttributes[key[i]]);
                                    if (error)
                                        return "customAttributes." + error;
                                }
                            }
                            if (message.degreeTypes != null && message.hasOwnProperty("degreeTypes")) {
                                if (!Array.isArray(message.degreeTypes))
                                    return "degreeTypes: array expected";
                                for (var i = 0; i < message.degreeTypes.length; ++i)
                                    switch (message.degreeTypes[i]) {
                                    default:
                                        return "degreeTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                        break;
                                    }
                            }
                            if (message.department != null && message.hasOwnProperty("department"))
                                if (!$util.isString(message.department))
                                    return "department: string expected";
                            if (message.employmentTypes != null && message.hasOwnProperty("employmentTypes")) {
                                if (!Array.isArray(message.employmentTypes))
                                    return "employmentTypes: array expected";
                                for (var i = 0; i < message.employmentTypes.length; ++i)
                                    switch (message.employmentTypes[i]) {
                                    default:
                                        return "employmentTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 9:
                                    case 10:
                                        break;
                                    }
                            }
                            if (message.incentives != null && message.hasOwnProperty("incentives"))
                                if (!$util.isString(message.incentives))
                                    return "incentives: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            if (message.jobLevel != null && message.hasOwnProperty("jobLevel"))
                                switch (message.jobLevel) {
                                default:
                                    return "jobLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.promotionValue != null && message.hasOwnProperty("promotionValue"))
                                if (!$util.isInteger(message.promotionValue))
                                    return "promotionValue: integer expected";
                            if (message.qualifications != null && message.hasOwnProperty("qualifications"))
                                if (!$util.isString(message.qualifications))
                                    return "qualifications: string expected";
                            if (message.responsibilities != null && message.hasOwnProperty("responsibilities"))
                                if (!$util.isString(message.responsibilities))
                                    return "responsibilities: string expected";
                            if (message.postingRegion != null && message.hasOwnProperty("postingRegion"))
                                switch (message.postingRegion) {
                                default:
                                    return "postingRegion: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.visibility != null && message.hasOwnProperty("visibility"))
                                switch (message.visibility) {
                                default:
                                    return "visibility: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.jobStartTime != null && message.hasOwnProperty("jobStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.jobStartTime);
                                if (error)
                                    return "jobStartTime." + error;
                            }
                            if (message.jobEndTime != null && message.hasOwnProperty("jobEndTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.jobEndTime);
                                if (error)
                                    return "jobEndTime." + error;
                            }
                            if (message.postingPublishTime != null && message.hasOwnProperty("postingPublishTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.postingPublishTime);
                                if (error)
                                    return "postingPublishTime." + error;
                            }
                            if (message.postingExpireTime != null && message.hasOwnProperty("postingExpireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.postingExpireTime);
                                if (error)
                                    return "postingExpireTime." + error;
                            }
                            if (message.postingCreateTime != null && message.hasOwnProperty("postingCreateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.postingCreateTime);
                                if (error)
                                    return "postingCreateTime." + error;
                            }
                            if (message.postingUpdateTime != null && message.hasOwnProperty("postingUpdateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.postingUpdateTime);
                                if (error)
                                    return "postingUpdateTime." + error;
                            }
                            if (message.companyDisplayName != null && message.hasOwnProperty("companyDisplayName"))
                                if (!$util.isString(message.companyDisplayName))
                                    return "companyDisplayName: string expected";
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo")) {
                                var error = $root.google.cloud.talent.v4beta1.Job.DerivedInfo.verify(message.derivedInfo);
                                if (error)
                                    return "derivedInfo." + error;
                            }
                            if (message.processingOptions != null && message.hasOwnProperty("processingOptions")) {
                                var error = $root.google.cloud.talent.v4beta1.Job.ProcessingOptions.verify(message.processingOptions);
                                if (error)
                                    return "processingOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Job message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Job} Job
                         */
                        Job.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Job)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Job();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.company != null)
                                message.company = String(object.company);
                            if (object.requisitionId != null)
                                message.requisitionId = String(object.requisitionId);
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.addresses) {
                                if (!Array.isArray(object.addresses))
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.addresses: array expected");
                                message.addresses = [];
                                for (var i = 0; i < object.addresses.length; ++i)
                                    message.addresses[i] = String(object.addresses[i]);
                            }
                            if (object.applicationInfo != null) {
                                if (typeof object.applicationInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.applicationInfo: object expected");
                                message.applicationInfo = $root.google.cloud.talent.v4beta1.Job.ApplicationInfo.fromObject(object.applicationInfo);
                            }
                            if (object.jobBenefits) {
                                if (!Array.isArray(object.jobBenefits))
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.jobBenefits: array expected");
                                message.jobBenefits = [];
                                for (var i = 0; i < object.jobBenefits.length; ++i)
                                    switch (object.jobBenefits[i]) {
                                    default:
                                    case "JOB_BENEFIT_UNSPECIFIED":
                                    case 0:
                                        message.jobBenefits[i] = 0;
                                        break;
                                    case "CHILD_CARE":
                                    case 1:
                                        message.jobBenefits[i] = 1;
                                        break;
                                    case "DENTAL":
                                    case 2:
                                        message.jobBenefits[i] = 2;
                                        break;
                                    case "DOMESTIC_PARTNER":
                                    case 3:
                                        message.jobBenefits[i] = 3;
                                        break;
                                    case "FLEXIBLE_HOURS":
                                    case 4:
                                        message.jobBenefits[i] = 4;
                                        break;
                                    case "MEDICAL":
                                    case 5:
                                        message.jobBenefits[i] = 5;
                                        break;
                                    case "LIFE_INSURANCE":
                                    case 6:
                                        message.jobBenefits[i] = 6;
                                        break;
                                    case "PARENTAL_LEAVE":
                                    case 7:
                                        message.jobBenefits[i] = 7;
                                        break;
                                    case "RETIREMENT_PLAN":
                                    case 8:
                                        message.jobBenefits[i] = 8;
                                        break;
                                    case "SICK_DAYS":
                                    case 9:
                                        message.jobBenefits[i] = 9;
                                        break;
                                    case "VACATION":
                                    case 10:
                                        message.jobBenefits[i] = 10;
                                        break;
                                    case "VISION":
                                    case 11:
                                        message.jobBenefits[i] = 11;
                                        break;
                                    }
                            }
                            if (object.compensationInfo != null) {
                                if (typeof object.compensationInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.compensationInfo: object expected");
                                message.compensationInfo = $root.google.cloud.talent.v4beta1.CompensationInfo.fromObject(object.compensationInfo);
                            }
                            if (object.customAttributes) {
                                if (typeof object.customAttributes !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.customAttributes: object expected");
                                message.customAttributes = {};
                                for (var keys = Object.keys(object.customAttributes), i = 0; i < keys.length; ++i) {
                                    if (typeof object.customAttributes[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Job.customAttributes: object expected");
                                    message.customAttributes[keys[i]] = $root.google.cloud.talent.v4beta1.CustomAttribute.fromObject(object.customAttributes[keys[i]]);
                                }
                            }
                            if (object.degreeTypes) {
                                if (!Array.isArray(object.degreeTypes))
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.degreeTypes: array expected");
                                message.degreeTypes = [];
                                for (var i = 0; i < object.degreeTypes.length; ++i)
                                    switch (object.degreeTypes[i]) {
                                    default:
                                    case "DEGREE_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.degreeTypes[i] = 0;
                                        break;
                                    case "PRIMARY_EDUCATION":
                                    case 1:
                                        message.degreeTypes[i] = 1;
                                        break;
                                    case "LOWER_SECONDARY_EDUCATION":
                                    case 2:
                                        message.degreeTypes[i] = 2;
                                        break;
                                    case "UPPER_SECONDARY_EDUCATION":
                                    case 3:
                                        message.degreeTypes[i] = 3;
                                        break;
                                    case "ADULT_REMEDIAL_EDUCATION":
                                    case 4:
                                        message.degreeTypes[i] = 4;
                                        break;
                                    case "ASSOCIATES_OR_EQUIVALENT":
                                    case 5:
                                        message.degreeTypes[i] = 5;
                                        break;
                                    case "BACHELORS_OR_EQUIVALENT":
                                    case 6:
                                        message.degreeTypes[i] = 6;
                                        break;
                                    case "MASTERS_OR_EQUIVALENT":
                                    case 7:
                                        message.degreeTypes[i] = 7;
                                        break;
                                    case "DOCTORAL_OR_EQUIVALENT":
                                    case 8:
                                        message.degreeTypes[i] = 8;
                                        break;
                                    }
                            }
                            if (object.department != null)
                                message.department = String(object.department);
                            if (object.employmentTypes) {
                                if (!Array.isArray(object.employmentTypes))
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.employmentTypes: array expected");
                                message.employmentTypes = [];
                                for (var i = 0; i < object.employmentTypes.length; ++i)
                                    switch (object.employmentTypes[i]) {
                                    default:
                                    case "EMPLOYMENT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.employmentTypes[i] = 0;
                                        break;
                                    case "FULL_TIME":
                                    case 1:
                                        message.employmentTypes[i] = 1;
                                        break;
                                    case "PART_TIME":
                                    case 2:
                                        message.employmentTypes[i] = 2;
                                        break;
                                    case "CONTRACTOR":
                                    case 3:
                                        message.employmentTypes[i] = 3;
                                        break;
                                    case "CONTRACT_TO_HIRE":
                                    case 4:
                                        message.employmentTypes[i] = 4;
                                        break;
                                    case "TEMPORARY":
                                    case 5:
                                        message.employmentTypes[i] = 5;
                                        break;
                                    case "INTERN":
                                    case 6:
                                        message.employmentTypes[i] = 6;
                                        break;
                                    case "VOLUNTEER":
                                    case 7:
                                        message.employmentTypes[i] = 7;
                                        break;
                                    case "PER_DIEM":
                                    case 8:
                                        message.employmentTypes[i] = 8;
                                        break;
                                    case "FLY_IN_FLY_OUT":
                                    case 9:
                                        message.employmentTypes[i] = 9;
                                        break;
                                    case "OTHER_EMPLOYMENT_TYPE":
                                    case 10:
                                        message.employmentTypes[i] = 10;
                                        break;
                                    }
                            }
                            if (object.incentives != null)
                                message.incentives = String(object.incentives);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            switch (object.jobLevel) {
                            case "JOB_LEVEL_UNSPECIFIED":
                            case 0:
                                message.jobLevel = 0;
                                break;
                            case "ENTRY_LEVEL":
                            case 1:
                                message.jobLevel = 1;
                                break;
                            case "EXPERIENCED":
                            case 2:
                                message.jobLevel = 2;
                                break;
                            case "MANAGER":
                            case 3:
                                message.jobLevel = 3;
                                break;
                            case "DIRECTOR":
                            case 4:
                                message.jobLevel = 4;
                                break;
                            case "EXECUTIVE":
                            case 5:
                                message.jobLevel = 5;
                                break;
                            }
                            if (object.promotionValue != null)
                                message.promotionValue = object.promotionValue | 0;
                            if (object.qualifications != null)
                                message.qualifications = String(object.qualifications);
                            if (object.responsibilities != null)
                                message.responsibilities = String(object.responsibilities);
                            switch (object.postingRegion) {
                            case "POSTING_REGION_UNSPECIFIED":
                            case 0:
                                message.postingRegion = 0;
                                break;
                            case "ADMINISTRATIVE_AREA":
                            case 1:
                                message.postingRegion = 1;
                                break;
                            case "NATION":
                            case 2:
                                message.postingRegion = 2;
                                break;
                            case "TELECOMMUTE":
                            case 3:
                                message.postingRegion = 3;
                                break;
                            }
                            switch (object.visibility) {
                            case "VISIBILITY_UNSPECIFIED":
                            case 0:
                                message.visibility = 0;
                                break;
                            case "ACCOUNT_ONLY":
                            case 1:
                                message.visibility = 1;
                                break;
                            case "SHARED_WITH_GOOGLE":
                            case 2:
                                message.visibility = 2;
                                break;
                            case "SHARED_WITH_PUBLIC":
                            case 3:
                                message.visibility = 3;
                                break;
                            }
                            if (object.jobStartTime != null) {
                                if (typeof object.jobStartTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.jobStartTime: object expected");
                                message.jobStartTime = $root.google.protobuf.Timestamp.fromObject(object.jobStartTime);
                            }
                            if (object.jobEndTime != null) {
                                if (typeof object.jobEndTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.jobEndTime: object expected");
                                message.jobEndTime = $root.google.protobuf.Timestamp.fromObject(object.jobEndTime);
                            }
                            if (object.postingPublishTime != null) {
                                if (typeof object.postingPublishTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.postingPublishTime: object expected");
                                message.postingPublishTime = $root.google.protobuf.Timestamp.fromObject(object.postingPublishTime);
                            }
                            if (object.postingExpireTime != null) {
                                if (typeof object.postingExpireTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.postingExpireTime: object expected");
                                message.postingExpireTime = $root.google.protobuf.Timestamp.fromObject(object.postingExpireTime);
                            }
                            if (object.postingCreateTime != null) {
                                if (typeof object.postingCreateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.postingCreateTime: object expected");
                                message.postingCreateTime = $root.google.protobuf.Timestamp.fromObject(object.postingCreateTime);
                            }
                            if (object.postingUpdateTime != null) {
                                if (typeof object.postingUpdateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.postingUpdateTime: object expected");
                                message.postingUpdateTime = $root.google.protobuf.Timestamp.fromObject(object.postingUpdateTime);
                            }
                            if (object.companyDisplayName != null)
                                message.companyDisplayName = String(object.companyDisplayName);
                            if (object.derivedInfo != null) {
                                if (typeof object.derivedInfo !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.derivedInfo: object expected");
                                message.derivedInfo = $root.google.cloud.talent.v4beta1.Job.DerivedInfo.fromObject(object.derivedInfo);
                            }
                            if (object.processingOptions != null) {
                                if (typeof object.processingOptions !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Job.processingOptions: object expected");
                                message.processingOptions = $root.google.cloud.talent.v4beta1.Job.ProcessingOptions.fromObject(object.processingOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Job message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @static
                         * @param {google.cloud.talent.v4beta1.Job} message Job
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Job.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.addresses = [];
                                object.jobBenefits = [];
                                object.degreeTypes = [];
                                object.employmentTypes = [];
                            }
                            if (options.objects || options.defaults)
                                object.customAttributes = {};
                            if (options.defaults) {
                                object.name = "";
                                object.company = "";
                                object.requisitionId = "";
                                object.title = "";
                                object.description = "";
                                object.applicationInfo = null;
                                object.compensationInfo = null;
                                object.department = "";
                                object.incentives = "";
                                object.languageCode = "";
                                object.jobLevel = options.enums === String ? "JOB_LEVEL_UNSPECIFIED" : 0;
                                object.promotionValue = 0;
                                object.qualifications = "";
                                object.responsibilities = "";
                                object.postingRegion = options.enums === String ? "POSTING_REGION_UNSPECIFIED" : 0;
                                object.visibility = options.enums === String ? "VISIBILITY_UNSPECIFIED" : 0;
                                object.jobStartTime = null;
                                object.jobEndTime = null;
                                object.postingPublishTime = null;
                                object.postingExpireTime = null;
                                object.postingCreateTime = null;
                                object.postingUpdateTime = null;
                                object.companyDisplayName = "";
                                object.derivedInfo = null;
                                object.processingOptions = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.company != null && message.hasOwnProperty("company"))
                                object.company = message.company;
                            if (message.requisitionId != null && message.hasOwnProperty("requisitionId"))
                                object.requisitionId = message.requisitionId;
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.addresses && message.addresses.length) {
                                object.addresses = [];
                                for (var j = 0; j < message.addresses.length; ++j)
                                    object.addresses[j] = message.addresses[j];
                            }
                            if (message.applicationInfo != null && message.hasOwnProperty("applicationInfo"))
                                object.applicationInfo = $root.google.cloud.talent.v4beta1.Job.ApplicationInfo.toObject(message.applicationInfo, options);
                            if (message.jobBenefits && message.jobBenefits.length) {
                                object.jobBenefits = [];
                                for (var j = 0; j < message.jobBenefits.length; ++j)
                                    object.jobBenefits[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.JobBenefit[message.jobBenefits[j]] : message.jobBenefits[j];
                            }
                            if (message.compensationInfo != null && message.hasOwnProperty("compensationInfo"))
                                object.compensationInfo = $root.google.cloud.talent.v4beta1.CompensationInfo.toObject(message.compensationInfo, options);
                            var keys2;
                            if (message.customAttributes && (keys2 = Object.keys(message.customAttributes)).length) {
                                object.customAttributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.customAttributes[keys2[j]] = $root.google.cloud.talent.v4beta1.CustomAttribute.toObject(message.customAttributes[keys2[j]], options);
                            }
                            if (message.degreeTypes && message.degreeTypes.length) {
                                object.degreeTypes = [];
                                for (var j = 0; j < message.degreeTypes.length; ++j)
                                    object.degreeTypes[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.DegreeType[message.degreeTypes[j]] : message.degreeTypes[j];
                            }
                            if (message.department != null && message.hasOwnProperty("department"))
                                object.department = message.department;
                            if (message.employmentTypes && message.employmentTypes.length) {
                                object.employmentTypes = [];
                                for (var j = 0; j < message.employmentTypes.length; ++j)
                                    object.employmentTypes[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.EmploymentType[message.employmentTypes[j]] : message.employmentTypes[j];
                            }
                            if (message.incentives != null && message.hasOwnProperty("incentives"))
                                object.incentives = message.incentives;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.jobLevel != null && message.hasOwnProperty("jobLevel"))
                                object.jobLevel = options.enums === String ? $root.google.cloud.talent.v4beta1.JobLevel[message.jobLevel] : message.jobLevel;
                            if (message.promotionValue != null && message.hasOwnProperty("promotionValue"))
                                object.promotionValue = message.promotionValue;
                            if (message.qualifications != null && message.hasOwnProperty("qualifications"))
                                object.qualifications = message.qualifications;
                            if (message.responsibilities != null && message.hasOwnProperty("responsibilities"))
                                object.responsibilities = message.responsibilities;
                            if (message.postingRegion != null && message.hasOwnProperty("postingRegion"))
                                object.postingRegion = options.enums === String ? $root.google.cloud.talent.v4beta1.PostingRegion[message.postingRegion] : message.postingRegion;
                            if (message.visibility != null && message.hasOwnProperty("visibility"))
                                object.visibility = options.enums === String ? $root.google.cloud.talent.v4beta1.Visibility[message.visibility] : message.visibility;
                            if (message.jobStartTime != null && message.hasOwnProperty("jobStartTime"))
                                object.jobStartTime = $root.google.protobuf.Timestamp.toObject(message.jobStartTime, options);
                            if (message.jobEndTime != null && message.hasOwnProperty("jobEndTime"))
                                object.jobEndTime = $root.google.protobuf.Timestamp.toObject(message.jobEndTime, options);
                            if (message.postingPublishTime != null && message.hasOwnProperty("postingPublishTime"))
                                object.postingPublishTime = $root.google.protobuf.Timestamp.toObject(message.postingPublishTime, options);
                            if (message.postingExpireTime != null && message.hasOwnProperty("postingExpireTime"))
                                object.postingExpireTime = $root.google.protobuf.Timestamp.toObject(message.postingExpireTime, options);
                            if (message.postingCreateTime != null && message.hasOwnProperty("postingCreateTime"))
                                object.postingCreateTime = $root.google.protobuf.Timestamp.toObject(message.postingCreateTime, options);
                            if (message.postingUpdateTime != null && message.hasOwnProperty("postingUpdateTime"))
                                object.postingUpdateTime = $root.google.protobuf.Timestamp.toObject(message.postingUpdateTime, options);
                            if (message.companyDisplayName != null && message.hasOwnProperty("companyDisplayName"))
                                object.companyDisplayName = message.companyDisplayName;
                            if (message.derivedInfo != null && message.hasOwnProperty("derivedInfo"))
                                object.derivedInfo = $root.google.cloud.talent.v4beta1.Job.DerivedInfo.toObject(message.derivedInfo, options);
                            if (message.processingOptions != null && message.hasOwnProperty("processingOptions"))
                                object.processingOptions = $root.google.cloud.talent.v4beta1.Job.ProcessingOptions.toObject(message.processingOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this Job to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Job
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Job.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        Job.ApplicationInfo = (function() {
    
                            /**
                             * Properties of an ApplicationInfo.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @interface IApplicationInfo
                             * @property {Array.<string>|null} [emails] ApplicationInfo emails
                             * @property {string|null} [instruction] ApplicationInfo instruction
                             * @property {Array.<string>|null} [uris] ApplicationInfo uris
                             */
    
                            /**
                             * Constructs a new ApplicationInfo.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @classdesc Represents an ApplicationInfo.
                             * @implements IApplicationInfo
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.Job.IApplicationInfo=} [properties] Properties to set
                             */
                            function ApplicationInfo(properties) {
                                this.emails = [];
                                this.uris = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ApplicationInfo emails.
                             * @member {Array.<string>} emails
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @instance
                             */
                            ApplicationInfo.prototype.emails = $util.emptyArray;
    
                            /**
                             * ApplicationInfo instruction.
                             * @member {string} instruction
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @instance
                             */
                            ApplicationInfo.prototype.instruction = "";
    
                            /**
                             * ApplicationInfo uris.
                             * @member {Array.<string>} uris
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @instance
                             */
                            ApplicationInfo.prototype.uris = $util.emptyArray;
    
                            /**
                             * Creates a new ApplicationInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IApplicationInfo=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.Job.ApplicationInfo} ApplicationInfo instance
                             */
                            ApplicationInfo.create = function create(properties) {
                                return new ApplicationInfo(properties);
                            };
    
                            /**
                             * Encodes the specified ApplicationInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.Job.ApplicationInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IApplicationInfo} message ApplicationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ApplicationInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.emails != null && message.emails.length)
                                    for (var i = 0; i < message.emails.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.emails[i]);
                                if (message.instruction != null && message.hasOwnProperty("instruction"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.instruction);
                                if (message.uris != null && message.uris.length)
                                    for (var i = 0; i < message.uris.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.uris[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ApplicationInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Job.ApplicationInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IApplicationInfo} message ApplicationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ApplicationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ApplicationInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.Job.ApplicationInfo} ApplicationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ApplicationInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Job.ApplicationInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.emails && message.emails.length))
                                            message.emails = [];
                                        message.emails.push(reader.string());
                                        break;
                                    case 2:
                                        message.instruction = reader.string();
                                        break;
                                    case 3:
                                        if (!(message.uris && message.uris.length))
                                            message.uris = [];
                                        message.uris.push(reader.string());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ApplicationInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.Job.ApplicationInfo} ApplicationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ApplicationInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ApplicationInfo message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ApplicationInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.emails != null && message.hasOwnProperty("emails")) {
                                    if (!Array.isArray(message.emails))
                                        return "emails: array expected";
                                    for (var i = 0; i < message.emails.length; ++i)
                                        if (!$util.isString(message.emails[i]))
                                            return "emails: string[] expected";
                                }
                                if (message.instruction != null && message.hasOwnProperty("instruction"))
                                    if (!$util.isString(message.instruction))
                                        return "instruction: string expected";
                                if (message.uris != null && message.hasOwnProperty("uris")) {
                                    if (!Array.isArray(message.uris))
                                        return "uris: array expected";
                                    for (var i = 0; i < message.uris.length; ++i)
                                        if (!$util.isString(message.uris[i]))
                                            return "uris: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ApplicationInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.Job.ApplicationInfo} ApplicationInfo
                             */
                            ApplicationInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.Job.ApplicationInfo)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.Job.ApplicationInfo();
                                if (object.emails) {
                                    if (!Array.isArray(object.emails))
                                        throw TypeError(".google.cloud.talent.v4beta1.Job.ApplicationInfo.emails: array expected");
                                    message.emails = [];
                                    for (var i = 0; i < object.emails.length; ++i)
                                        message.emails[i] = String(object.emails[i]);
                                }
                                if (object.instruction != null)
                                    message.instruction = String(object.instruction);
                                if (object.uris) {
                                    if (!Array.isArray(object.uris))
                                        throw TypeError(".google.cloud.talent.v4beta1.Job.ApplicationInfo.uris: array expected");
                                    message.uris = [];
                                    for (var i = 0; i < object.uris.length; ++i)
                                        message.uris[i] = String(object.uris[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ApplicationInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.ApplicationInfo} message ApplicationInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ApplicationInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.emails = [];
                                    object.uris = [];
                                }
                                if (options.defaults)
                                    object.instruction = "";
                                if (message.emails && message.emails.length) {
                                    object.emails = [];
                                    for (var j = 0; j < message.emails.length; ++j)
                                        object.emails[j] = message.emails[j];
                                }
                                if (message.instruction != null && message.hasOwnProperty("instruction"))
                                    object.instruction = message.instruction;
                                if (message.uris && message.uris.length) {
                                    object.uris = [];
                                    for (var j = 0; j < message.uris.length; ++j)
                                        object.uris[j] = message.uris[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ApplicationInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.Job.ApplicationInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ApplicationInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ApplicationInfo;
                        })();
    
                        Job.DerivedInfo = (function() {
    
                            /**
                             * Properties of a DerivedInfo.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @interface IDerivedInfo
                             * @property {Array.<google.cloud.talent.v4beta1.ILocation>|null} [locations] DerivedInfo locations
                             * @property {Array.<google.cloud.talent.v4beta1.JobCategory>|null} [jobCategories] DerivedInfo jobCategories
                             */
    
                            /**
                             * Constructs a new DerivedInfo.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @classdesc Represents a DerivedInfo.
                             * @implements IDerivedInfo
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.Job.IDerivedInfo=} [properties] Properties to set
                             */
                            function DerivedInfo(properties) {
                                this.locations = [];
                                this.jobCategories = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DerivedInfo locations.
                             * @member {Array.<google.cloud.talent.v4beta1.ILocation>} locations
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @instance
                             */
                            DerivedInfo.prototype.locations = $util.emptyArray;
    
                            /**
                             * DerivedInfo jobCategories.
                             * @member {Array.<google.cloud.talent.v4beta1.JobCategory>} jobCategories
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @instance
                             */
                            DerivedInfo.prototype.jobCategories = $util.emptyArray;
    
                            /**
                             * Creates a new DerivedInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IDerivedInfo=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.Job.DerivedInfo} DerivedInfo instance
                             */
                            DerivedInfo.create = function create(properties) {
                                return new DerivedInfo(properties);
                            };
    
                            /**
                             * Encodes the specified DerivedInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.Job.DerivedInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IDerivedInfo} message DerivedInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DerivedInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.locations != null && message.locations.length)
                                    for (var i = 0; i < message.locations.length; ++i)
                                        $root.google.cloud.talent.v4beta1.Location.encode(message.locations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.jobCategories != null && message.jobCategories.length) {
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                    for (var i = 0; i < message.jobCategories.length; ++i)
                                        writer.int32(message.jobCategories[i]);
                                    writer.ldelim();
                                }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DerivedInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Job.DerivedInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IDerivedInfo} message DerivedInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DerivedInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DerivedInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.Job.DerivedInfo} DerivedInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DerivedInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Job.DerivedInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.locations && message.locations.length))
                                            message.locations = [];
                                        message.locations.push($root.google.cloud.talent.v4beta1.Location.decode(reader, reader.uint32()));
                                        break;
                                    case 3:
                                        if (!(message.jobCategories && message.jobCategories.length))
                                            message.jobCategories = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.jobCategories.push(reader.int32());
                                        } else
                                            message.jobCategories.push(reader.int32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DerivedInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.Job.DerivedInfo} DerivedInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DerivedInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DerivedInfo message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DerivedInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.locations != null && message.hasOwnProperty("locations")) {
                                    if (!Array.isArray(message.locations))
                                        return "locations: array expected";
                                    for (var i = 0; i < message.locations.length; ++i) {
                                        var error = $root.google.cloud.talent.v4beta1.Location.verify(message.locations[i]);
                                        if (error)
                                            return "locations." + error;
                                    }
                                }
                                if (message.jobCategories != null && message.hasOwnProperty("jobCategories")) {
                                    if (!Array.isArray(message.jobCategories))
                                        return "jobCategories: array expected";
                                    for (var i = 0; i < message.jobCategories.length; ++i)
                                        switch (message.jobCategories[i]) {
                                        default:
                                            return "jobCategories: enum value[] expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                        case 8:
                                        case 9:
                                        case 10:
                                        case 11:
                                        case 12:
                                        case 13:
                                        case 14:
                                        case 15:
                                        case 16:
                                        case 17:
                                        case 18:
                                        case 19:
                                        case 20:
                                        case 21:
                                        case 22:
                                        case 23:
                                        case 24:
                                        case 25:
                                        case 26:
                                        case 27:
                                        case 28:
                                        case 29:
                                        case 30:
                                            break;
                                        }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a DerivedInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.Job.DerivedInfo} DerivedInfo
                             */
                            DerivedInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.Job.DerivedInfo)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.Job.DerivedInfo();
                                if (object.locations) {
                                    if (!Array.isArray(object.locations))
                                        throw TypeError(".google.cloud.talent.v4beta1.Job.DerivedInfo.locations: array expected");
                                    message.locations = [];
                                    for (var i = 0; i < object.locations.length; ++i) {
                                        if (typeof object.locations[i] !== "object")
                                            throw TypeError(".google.cloud.talent.v4beta1.Job.DerivedInfo.locations: object expected");
                                        message.locations[i] = $root.google.cloud.talent.v4beta1.Location.fromObject(object.locations[i]);
                                    }
                                }
                                if (object.jobCategories) {
                                    if (!Array.isArray(object.jobCategories))
                                        throw TypeError(".google.cloud.talent.v4beta1.Job.DerivedInfo.jobCategories: array expected");
                                    message.jobCategories = [];
                                    for (var i = 0; i < object.jobCategories.length; ++i)
                                        switch (object.jobCategories[i]) {
                                        default:
                                        case "JOB_CATEGORY_UNSPECIFIED":
                                        case 0:
                                            message.jobCategories[i] = 0;
                                            break;
                                        case "ACCOUNTING_AND_FINANCE":
                                        case 1:
                                            message.jobCategories[i] = 1;
                                            break;
                                        case "ADMINISTRATIVE_AND_OFFICE":
                                        case 2:
                                            message.jobCategories[i] = 2;
                                            break;
                                        case "ADVERTISING_AND_MARKETING":
                                        case 3:
                                            message.jobCategories[i] = 3;
                                            break;
                                        case "ANIMAL_CARE":
                                        case 4:
                                            message.jobCategories[i] = 4;
                                            break;
                                        case "ART_FASHION_AND_DESIGN":
                                        case 5:
                                            message.jobCategories[i] = 5;
                                            break;
                                        case "BUSINESS_OPERATIONS":
                                        case 6:
                                            message.jobCategories[i] = 6;
                                            break;
                                        case "CLEANING_AND_FACILITIES":
                                        case 7:
                                            message.jobCategories[i] = 7;
                                            break;
                                        case "COMPUTER_AND_IT":
                                        case 8:
                                            message.jobCategories[i] = 8;
                                            break;
                                        case "CONSTRUCTION":
                                        case 9:
                                            message.jobCategories[i] = 9;
                                            break;
                                        case "CUSTOMER_SERVICE":
                                        case 10:
                                            message.jobCategories[i] = 10;
                                            break;
                                        case "EDUCATION":
                                        case 11:
                                            message.jobCategories[i] = 11;
                                            break;
                                        case "ENTERTAINMENT_AND_TRAVEL":
                                        case 12:
                                            message.jobCategories[i] = 12;
                                            break;
                                        case "FARMING_AND_OUTDOORS":
                                        case 13:
                                            message.jobCategories[i] = 13;
                                            break;
                                        case "HEALTHCARE":
                                        case 14:
                                            message.jobCategories[i] = 14;
                                            break;
                                        case "HUMAN_RESOURCES":
                                        case 15:
                                            message.jobCategories[i] = 15;
                                            break;
                                        case "INSTALLATION_MAINTENANCE_AND_REPAIR":
                                        case 16:
                                            message.jobCategories[i] = 16;
                                            break;
                                        case "LEGAL":
                                        case 17:
                                            message.jobCategories[i] = 17;
                                            break;
                                        case "MANAGEMENT":
                                        case 18:
                                            message.jobCategories[i] = 18;
                                            break;
                                        case "MANUFACTURING_AND_WAREHOUSE":
                                        case 19:
                                            message.jobCategories[i] = 19;
                                            break;
                                        case "MEDIA_COMMUNICATIONS_AND_WRITING":
                                        case 20:
                                            message.jobCategories[i] = 20;
                                            break;
                                        case "OIL_GAS_AND_MINING":
                                        case 21:
                                            message.jobCategories[i] = 21;
                                            break;
                                        case "PERSONAL_CARE_AND_SERVICES":
                                        case 22:
                                            message.jobCategories[i] = 22;
                                            break;
                                        case "PROTECTIVE_SERVICES":
                                        case 23:
                                            message.jobCategories[i] = 23;
                                            break;
                                        case "REAL_ESTATE":
                                        case 24:
                                            message.jobCategories[i] = 24;
                                            break;
                                        case "RESTAURANT_AND_HOSPITALITY":
                                        case 25:
                                            message.jobCategories[i] = 25;
                                            break;
                                        case "SALES_AND_RETAIL":
                                        case 26:
                                            message.jobCategories[i] = 26;
                                            break;
                                        case "SCIENCE_AND_ENGINEERING":
                                        case 27:
                                            message.jobCategories[i] = 27;
                                            break;
                                        case "SOCIAL_SERVICES_AND_NON_PROFIT":
                                        case 28:
                                            message.jobCategories[i] = 28;
                                            break;
                                        case "SPORTS_FITNESS_AND_RECREATION":
                                        case 29:
                                            message.jobCategories[i] = 29;
                                            break;
                                        case "TRANSPORTATION_AND_LOGISTICS":
                                        case 30:
                                            message.jobCategories[i] = 30;
                                            break;
                                        }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DerivedInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.DerivedInfo} message DerivedInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DerivedInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.locations = [];
                                    object.jobCategories = [];
                                }
                                if (message.locations && message.locations.length) {
                                    object.locations = [];
                                    for (var j = 0; j < message.locations.length; ++j)
                                        object.locations[j] = $root.google.cloud.talent.v4beta1.Location.toObject(message.locations[j], options);
                                }
                                if (message.jobCategories && message.jobCategories.length) {
                                    object.jobCategories = [];
                                    for (var j = 0; j < message.jobCategories.length; ++j)
                                        object.jobCategories[j] = options.enums === String ? $root.google.cloud.talent.v4beta1.JobCategory[message.jobCategories[j]] : message.jobCategories[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this DerivedInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.Job.DerivedInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DerivedInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return DerivedInfo;
                        })();
    
                        Job.ProcessingOptions = (function() {
    
                            /**
                             * Properties of a ProcessingOptions.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @interface IProcessingOptions
                             * @property {boolean|null} [disableStreetAddressResolution] ProcessingOptions disableStreetAddressResolution
                             * @property {google.cloud.talent.v4beta1.HtmlSanitization|null} [htmlSanitization] ProcessingOptions htmlSanitization
                             */
    
                            /**
                             * Constructs a new ProcessingOptions.
                             * @memberof google.cloud.talent.v4beta1.Job
                             * @classdesc Represents a ProcessingOptions.
                             * @implements IProcessingOptions
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.Job.IProcessingOptions=} [properties] Properties to set
                             */
                            function ProcessingOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ProcessingOptions disableStreetAddressResolution.
                             * @member {boolean} disableStreetAddressResolution
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @instance
                             */
                            ProcessingOptions.prototype.disableStreetAddressResolution = false;
    
                            /**
                             * ProcessingOptions htmlSanitization.
                             * @member {google.cloud.talent.v4beta1.HtmlSanitization} htmlSanitization
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @instance
                             */
                            ProcessingOptions.prototype.htmlSanitization = 0;
    
                            /**
                             * Creates a new ProcessingOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IProcessingOptions=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.Job.ProcessingOptions} ProcessingOptions instance
                             */
                            ProcessingOptions.create = function create(properties) {
                                return new ProcessingOptions(properties);
                            };
    
                            /**
                             * Encodes the specified ProcessingOptions message. Does not implicitly {@link google.cloud.talent.v4beta1.Job.ProcessingOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IProcessingOptions} message ProcessingOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProcessingOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.disableStreetAddressResolution != null && message.hasOwnProperty("disableStreetAddressResolution"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disableStreetAddressResolution);
                                if (message.htmlSanitization != null && message.hasOwnProperty("htmlSanitization"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.htmlSanitization);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ProcessingOptions message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Job.ProcessingOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.IProcessingOptions} message ProcessingOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ProcessingOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ProcessingOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.Job.ProcessingOptions} ProcessingOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProcessingOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Job.ProcessingOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.disableStreetAddressResolution = reader.bool();
                                        break;
                                    case 2:
                                        message.htmlSanitization = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ProcessingOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.Job.ProcessingOptions} ProcessingOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ProcessingOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ProcessingOptions message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ProcessingOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.disableStreetAddressResolution != null && message.hasOwnProperty("disableStreetAddressResolution"))
                                    if (typeof message.disableStreetAddressResolution !== "boolean")
                                        return "disableStreetAddressResolution: boolean expected";
                                if (message.htmlSanitization != null && message.hasOwnProperty("htmlSanitization"))
                                    switch (message.htmlSanitization) {
                                    default:
                                        return "htmlSanitization: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ProcessingOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.Job.ProcessingOptions} ProcessingOptions
                             */
                            ProcessingOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.Job.ProcessingOptions)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.Job.ProcessingOptions();
                                if (object.disableStreetAddressResolution != null)
                                    message.disableStreetAddressResolution = Boolean(object.disableStreetAddressResolution);
                                switch (object.htmlSanitization) {
                                case "HTML_SANITIZATION_UNSPECIFIED":
                                case 0:
                                    message.htmlSanitization = 0;
                                    break;
                                case "HTML_SANITIZATION_DISABLED":
                                case 1:
                                    message.htmlSanitization = 1;
                                    break;
                                case "SIMPLE_FORMATTING_ONLY":
                                case 2:
                                    message.htmlSanitization = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ProcessingOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @static
                             * @param {google.cloud.talent.v4beta1.Job.ProcessingOptions} message ProcessingOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ProcessingOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.disableStreetAddressResolution = false;
                                    object.htmlSanitization = options.enums === String ? "HTML_SANITIZATION_UNSPECIFIED" : 0;
                                }
                                if (message.disableStreetAddressResolution != null && message.hasOwnProperty("disableStreetAddressResolution"))
                                    object.disableStreetAddressResolution = message.disableStreetAddressResolution;
                                if (message.htmlSanitization != null && message.hasOwnProperty("htmlSanitization"))
                                    object.htmlSanitization = options.enums === String ? $root.google.cloud.talent.v4beta1.HtmlSanitization[message.htmlSanitization] : message.htmlSanitization;
                                return object;
                            };
    
                            /**
                             * Converts this ProcessingOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.Job.ProcessingOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ProcessingOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ProcessingOptions;
                        })();
    
                        return Job;
                    })();
    
                    v4beta1.ProfileService = (function() {
    
                        /**
                         * Constructs a new ProfileService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ProfileService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ProfileService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ProfileService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ProfileService;
    
                        /**
                         * Creates new ProfileService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ProfileService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ProfileService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#listProfiles}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef ListProfilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ListProfilesResponse} [response] ListProfilesResponse
                         */
    
                        /**
                         * Calls ListProfiles.
                         * @function listProfiles
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest} request ListProfilesRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.ListProfilesCallback} callback Node-style callback called with the error, if any, and ListProfilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.listProfiles = function listProfiles(request, callback) {
                            return this.rpcCall(listProfiles, $root.google.cloud.talent.v4beta1.ListProfilesRequest, $root.google.cloud.talent.v4beta1.ListProfilesResponse, request, callback);
                        }, "name", { value: "ListProfiles" });
    
                        /**
                         * Calls ListProfiles.
                         * @function listProfiles
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest} request ListProfilesRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ListProfilesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#createProfile}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef CreateProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Profile} [response] Profile
                         */
    
                        /**
                         * Calls CreateProfile.
                         * @function createProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest} request CreateProfileRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.CreateProfileCallback} callback Node-style callback called with the error, if any, and Profile
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.createProfile = function createProfile(request, callback) {
                            return this.rpcCall(createProfile, $root.google.cloud.talent.v4beta1.CreateProfileRequest, $root.google.cloud.talent.v4beta1.Profile, request, callback);
                        }, "name", { value: "CreateProfile" });
    
                        /**
                         * Calls CreateProfile.
                         * @function createProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest} request CreateProfileRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Profile>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#getProfile}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef GetProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Profile} [response] Profile
                         */
    
                        /**
                         * Calls GetProfile.
                         * @function getProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest} request GetProfileRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.GetProfileCallback} callback Node-style callback called with the error, if any, and Profile
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.getProfile = function getProfile(request, callback) {
                            return this.rpcCall(getProfile, $root.google.cloud.talent.v4beta1.GetProfileRequest, $root.google.cloud.talent.v4beta1.Profile, request, callback);
                        }, "name", { value: "GetProfile" });
    
                        /**
                         * Calls GetProfile.
                         * @function getProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest} request GetProfileRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Profile>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#updateProfile}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef UpdateProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Profile} [response] Profile
                         */
    
                        /**
                         * Calls UpdateProfile.
                         * @function updateProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest} request UpdateProfileRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.UpdateProfileCallback} callback Node-style callback called with the error, if any, and Profile
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.updateProfile = function updateProfile(request, callback) {
                            return this.rpcCall(updateProfile, $root.google.cloud.talent.v4beta1.UpdateProfileRequest, $root.google.cloud.talent.v4beta1.Profile, request, callback);
                        }, "name", { value: "UpdateProfile" });
    
                        /**
                         * Calls UpdateProfile.
                         * @function updateProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest} request UpdateProfileRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Profile>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#deleteProfile}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef DeleteProfileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteProfile.
                         * @function deleteProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest} request DeleteProfileRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.DeleteProfileCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.deleteProfile = function deleteProfile(request, callback) {
                            return this.rpcCall(deleteProfile, $root.google.cloud.talent.v4beta1.DeleteProfileRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteProfile" });
    
                        /**
                         * Calls DeleteProfile.
                         * @function deleteProfile
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest} request DeleteProfileRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.ProfileService#searchProfiles}.
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @typedef SearchProfilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.SearchProfilesResponse} [response] SearchProfilesResponse
                         */
    
                        /**
                         * Calls SearchProfiles.
                         * @function searchProfiles
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest} request SearchProfilesRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.ProfileService.SearchProfilesCallback} callback Node-style callback called with the error, if any, and SearchProfilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ProfileService.prototype.searchProfiles = function searchProfiles(request, callback) {
                            return this.rpcCall(searchProfiles, $root.google.cloud.talent.v4beta1.SearchProfilesRequest, $root.google.cloud.talent.v4beta1.SearchProfilesResponse, request, callback);
                        }, "name", { value: "SearchProfiles" });
    
                        /**
                         * Calls SearchProfiles.
                         * @function searchProfiles
                         * @memberof google.cloud.talent.v4beta1.ProfileService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest} request SearchProfilesRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.SearchProfilesResponse>} Promise
                         * @variation 2
                         */
    
                        return ProfileService;
                    })();
    
                    v4beta1.ListProfilesRequest = (function() {
    
                        /**
                         * Properties of a ListProfilesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListProfilesRequest
                         * @property {string|null} [parent] ListProfilesRequest parent
                         * @property {string|null} [filter] ListProfilesRequest filter
                         * @property {string|null} [pageToken] ListProfilesRequest pageToken
                         * @property {number|null} [pageSize] ListProfilesRequest pageSize
                         * @property {google.protobuf.IFieldMask|null} [readMask] ListProfilesRequest readMask
                         */
    
                        /**
                         * Constructs a new ListProfilesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListProfilesRequest.
                         * @implements IListProfilesRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest=} [properties] Properties to set
                         */
                        function ListProfilesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProfilesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         */
                        ListProfilesRequest.prototype.parent = "";
    
                        /**
                         * ListProfilesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         */
                        ListProfilesRequest.prototype.filter = "";
    
                        /**
                         * ListProfilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         */
                        ListProfilesRequest.prototype.pageToken = "";
    
                        /**
                         * ListProfilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         */
                        ListProfilesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListProfilesRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         */
                        ListProfilesRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new ListProfilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListProfilesRequest} ListProfilesRequest instance
                         */
                        ListProfilesRequest.create = function create(properties) {
                            return new ListProfilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListProfilesRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.ListProfilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest} message ListProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProfilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProfilesRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListProfilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesRequest} message ListProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProfilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProfilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListProfilesRequest} ListProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProfilesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListProfilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 5:
                                    message.filter = reader.string();
                                    break;
                                case 2:
                                    message.pageToken = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                case 4:
                                    message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProfilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListProfilesRequest} ListProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProfilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProfilesRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProfilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListProfilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListProfilesRequest} ListProfilesRequest
                         */
                        ListProfilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListProfilesRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListProfilesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ListProfilesRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProfilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListProfilesRequest} message ListProfilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProfilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageToken = "";
                                object.pageSize = 0;
                                object.readMask = null;
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListProfilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListProfilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProfilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListProfilesRequest;
                    })();
    
                    v4beta1.ListProfilesResponse = (function() {
    
                        /**
                         * Properties of a ListProfilesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListProfilesResponse
                         * @property {Array.<google.cloud.talent.v4beta1.IProfile>|null} [profiles] ListProfilesResponse profiles
                         * @property {string|null} [nextPageToken] ListProfilesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListProfilesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListProfilesResponse.
                         * @implements IListProfilesResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListProfilesResponse=} [properties] Properties to set
                         */
                        function ListProfilesResponse(properties) {
                            this.profiles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProfilesResponse profiles.
                         * @member {Array.<google.cloud.talent.v4beta1.IProfile>} profiles
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @instance
                         */
                        ListProfilesResponse.prototype.profiles = $util.emptyArray;
    
                        /**
                         * ListProfilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @instance
                         */
                        ListProfilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListProfilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListProfilesResponse} ListProfilesResponse instance
                         */
                        ListProfilesResponse.create = function create(properties) {
                            return new ListProfilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListProfilesResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.ListProfilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesResponse} message ListProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProfilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.profiles != null && message.profiles.length)
                                for (var i = 0; i < message.profiles.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Profile.encode(message.profiles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProfilesResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListProfilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListProfilesResponse} message ListProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProfilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProfilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListProfilesResponse} ListProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProfilesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListProfilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.profiles && message.profiles.length))
                                        message.profiles = [];
                                    message.profiles.push($root.google.cloud.talent.v4beta1.Profile.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProfilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListProfilesResponse} ListProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProfilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProfilesResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProfilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.profiles != null && message.hasOwnProperty("profiles")) {
                                if (!Array.isArray(message.profiles))
                                    return "profiles: array expected";
                                for (var i = 0; i < message.profiles.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Profile.verify(message.profiles[i]);
                                    if (error)
                                        return "profiles." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProfilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListProfilesResponse} ListProfilesResponse
                         */
                        ListProfilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListProfilesResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListProfilesResponse();
                            if (object.profiles) {
                                if (!Array.isArray(object.profiles))
                                    throw TypeError(".google.cloud.talent.v4beta1.ListProfilesResponse.profiles: array expected");
                                message.profiles = [];
                                for (var i = 0; i < object.profiles.length; ++i) {
                                    if (typeof object.profiles[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ListProfilesResponse.profiles: object expected");
                                    message.profiles[i] = $root.google.cloud.talent.v4beta1.Profile.fromObject(object.profiles[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProfilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListProfilesResponse} message ListProfilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProfilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.profiles = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.profiles && message.profiles.length) {
                                object.profiles = [];
                                for (var j = 0; j < message.profiles.length; ++j)
                                    object.profiles[j] = $root.google.cloud.talent.v4beta1.Profile.toObject(message.profiles[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProfilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListProfilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProfilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListProfilesResponse;
                    })();
    
                    v4beta1.CreateProfileRequest = (function() {
    
                        /**
                         * Properties of a CreateProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateProfileRequest
                         * @property {string|null} [parent] CreateProfileRequest parent
                         * @property {google.cloud.talent.v4beta1.IProfile|null} [profile] CreateProfileRequest profile
                         */
    
                        /**
                         * Constructs a new CreateProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateProfileRequest.
                         * @implements ICreateProfileRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest=} [properties] Properties to set
                         */
                        function CreateProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateProfileRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @instance
                         */
                        CreateProfileRequest.prototype.parent = "";
    
                        /**
                         * CreateProfileRequest profile.
                         * @member {google.cloud.talent.v4beta1.IProfile|null|undefined} profile
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @instance
                         */
                        CreateProfileRequest.prototype.profile = null;
    
                        /**
                         * Creates a new CreateProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateProfileRequest} CreateProfileRequest instance
                         */
                        CreateProfileRequest.create = function create(properties) {
                            return new CreateProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateProfileRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest} message CreateProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                $root.google.cloud.talent.v4beta1.Profile.encode(message.profile, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateProfileRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateProfileRequest} message CreateProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateProfileRequest} CreateProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.profile = $root.google.cloud.talent.v4beta1.Profile.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateProfileRequest} CreateProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.profile != null && message.hasOwnProperty("profile")) {
                                var error = $root.google.cloud.talent.v4beta1.Profile.verify(message.profile);
                                if (error)
                                    return "profile." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateProfileRequest} CreateProfileRequest
                         */
                        CreateProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateProfileRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateProfileRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.profile != null) {
                                if (typeof object.profile !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateProfileRequest.profile: object expected");
                                message.profile = $root.google.cloud.talent.v4beta1.Profile.fromObject(object.profile);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateProfileRequest} message CreateProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.profile = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                object.profile = $root.google.cloud.talent.v4beta1.Profile.toObject(message.profile, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateProfileRequest;
                    })();
    
                    v4beta1.GetProfileRequest = (function() {
    
                        /**
                         * Properties of a GetProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IGetProfileRequest
                         * @property {string|null} [name] GetProfileRequest name
                         */
    
                        /**
                         * Constructs a new GetProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a GetProfileRequest.
                         * @implements IGetProfileRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest=} [properties] Properties to set
                         */
                        function GetProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @instance
                         */
                        GetProfileRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.GetProfileRequest} GetProfileRequest instance
                         */
                        GetProfileRequest.create = function create(properties) {
                            return new GetProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetProfileRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.GetProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest} message GetProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetProfileRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.GetProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetProfileRequest} message GetProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.GetProfileRequest} GetProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.GetProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.GetProfileRequest} GetProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.GetProfileRequest} GetProfileRequest
                         */
                        GetProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.GetProfileRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.GetProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.GetProfileRequest} message GetProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.GetProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetProfileRequest;
                    })();
    
                    v4beta1.UpdateProfileRequest = (function() {
    
                        /**
                         * Properties of an UpdateProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IUpdateProfileRequest
                         * @property {google.cloud.talent.v4beta1.IProfile|null} [profile] UpdateProfileRequest profile
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateProfileRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an UpdateProfileRequest.
                         * @implements IUpdateProfileRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest=} [properties] Properties to set
                         */
                        function UpdateProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateProfileRequest profile.
                         * @member {google.cloud.talent.v4beta1.IProfile|null|undefined} profile
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @instance
                         */
                        UpdateProfileRequest.prototype.profile = null;
    
                        /**
                         * UpdateProfileRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @instance
                         */
                        UpdateProfileRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.UpdateProfileRequest} UpdateProfileRequest instance
                         */
                        UpdateProfileRequest.create = function create(properties) {
                            return new UpdateProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateProfileRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest} message UpdateProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                $root.google.cloud.talent.v4beta1.Profile.encode(message.profile, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateProfileRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateProfileRequest} message UpdateProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.UpdateProfileRequest} UpdateProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.UpdateProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.profile = $root.google.cloud.talent.v4beta1.Profile.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.UpdateProfileRequest} UpdateProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.profile != null && message.hasOwnProperty("profile")) {
                                var error = $root.google.cloud.talent.v4beta1.Profile.verify(message.profile);
                                if (error)
                                    return "profile." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.UpdateProfileRequest} UpdateProfileRequest
                         */
                        UpdateProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.UpdateProfileRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.UpdateProfileRequest();
                            if (object.profile != null) {
                                if (typeof object.profile !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateProfileRequest.profile: object expected");
                                message.profile = $root.google.cloud.talent.v4beta1.Profile.fromObject(object.profile);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateProfileRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.UpdateProfileRequest} message UpdateProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.profile = null;
                                object.updateMask = null;
                            }
                            if (message.profile != null && message.hasOwnProperty("profile"))
                                object.profile = $root.google.cloud.talent.v4beta1.Profile.toObject(message.profile, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.UpdateProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateProfileRequest;
                    })();
    
                    v4beta1.DeleteProfileRequest = (function() {
    
                        /**
                         * Properties of a DeleteProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeleteProfileRequest
                         * @property {string|null} [name] DeleteProfileRequest name
                         */
    
                        /**
                         * Constructs a new DeleteProfileRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeleteProfileRequest.
                         * @implements IDeleteProfileRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest=} [properties] Properties to set
                         */
                        function DeleteProfileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteProfileRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @instance
                         */
                        DeleteProfileRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteProfileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeleteProfileRequest} DeleteProfileRequest instance
                         */
                        DeleteProfileRequest.create = function create(properties) {
                            return new DeleteProfileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteProfileRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteProfileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest} message DeleteProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProfileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteProfileRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteProfileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteProfileRequest} message DeleteProfileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteProfileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeleteProfileRequest} DeleteProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProfileRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeleteProfileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteProfileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeleteProfileRequest} DeleteProfileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteProfileRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteProfileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteProfileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeleteProfileRequest} DeleteProfileRequest
                         */
                        DeleteProfileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeleteProfileRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeleteProfileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteProfileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeleteProfileRequest} message DeleteProfileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteProfileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteProfileRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeleteProfileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteProfileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteProfileRequest;
                    })();
    
                    v4beta1.SearchProfilesRequest = (function() {
    
                        /**
                         * Properties of a SearchProfilesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISearchProfilesRequest
                         * @property {string|null} [parent] SearchProfilesRequest parent
                         * @property {google.cloud.talent.v4beta1.IRequestMetadata|null} [requestMetadata] SearchProfilesRequest requestMetadata
                         * @property {google.cloud.talent.v4beta1.IProfileQuery|null} [profileQuery] SearchProfilesRequest profileQuery
                         * @property {number|null} [pageSize] SearchProfilesRequest pageSize
                         * @property {string|null} [pageToken] SearchProfilesRequest pageToken
                         * @property {number|null} [offset] SearchProfilesRequest offset
                         * @property {boolean|null} [disableSpellCheck] SearchProfilesRequest disableSpellCheck
                         * @property {string|null} [orderBy] SearchProfilesRequest orderBy
                         * @property {boolean|null} [caseSensitiveSort] SearchProfilesRequest caseSensitiveSort
                         * @property {Array.<google.cloud.talent.v4beta1.IHistogramQuery>|null} [histogramQueries] SearchProfilesRequest histogramQueries
                         * @property {string|null} [resultSetId] SearchProfilesRequest resultSetId
                         * @property {boolean|null} [strictKeywordsSearch] SearchProfilesRequest strictKeywordsSearch
                         */
    
                        /**
                         * Constructs a new SearchProfilesRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SearchProfilesRequest.
                         * @implements ISearchProfilesRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest=} [properties] Properties to set
                         */
                        function SearchProfilesRequest(properties) {
                            this.histogramQueries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchProfilesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.parent = "";
    
                        /**
                         * SearchProfilesRequest requestMetadata.
                         * @member {google.cloud.talent.v4beta1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.requestMetadata = null;
    
                        /**
                         * SearchProfilesRequest profileQuery.
                         * @member {google.cloud.talent.v4beta1.IProfileQuery|null|undefined} profileQuery
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.profileQuery = null;
    
                        /**
                         * SearchProfilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchProfilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.pageToken = "";
    
                        /**
                         * SearchProfilesRequest offset.
                         * @member {number} offset
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.offset = 0;
    
                        /**
                         * SearchProfilesRequest disableSpellCheck.
                         * @member {boolean} disableSpellCheck
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.disableSpellCheck = false;
    
                        /**
                         * SearchProfilesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.orderBy = "";
    
                        /**
                         * SearchProfilesRequest caseSensitiveSort.
                         * @member {boolean} caseSensitiveSort
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.caseSensitiveSort = false;
    
                        /**
                         * SearchProfilesRequest histogramQueries.
                         * @member {Array.<google.cloud.talent.v4beta1.IHistogramQuery>} histogramQueries
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.histogramQueries = $util.emptyArray;
    
                        /**
                         * SearchProfilesRequest resultSetId.
                         * @member {string} resultSetId
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.resultSetId = "";
    
                        /**
                         * SearchProfilesRequest strictKeywordsSearch.
                         * @member {boolean} strictKeywordsSearch
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         */
                        SearchProfilesRequest.prototype.strictKeywordsSearch = false;
    
                        /**
                         * Creates a new SearchProfilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesRequest} SearchProfilesRequest instance
                         */
                        SearchProfilesRequest.create = function create(properties) {
                            return new SearchProfilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchProfilesRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchProfilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest} message SearchProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchProfilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                $root.google.cloud.talent.v4beta1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.profileQuery != null && message.hasOwnProperty("profileQuery"))
                                $root.google.cloud.talent.v4beta1.ProfileQuery.encode(message.profileQuery, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.offset);
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.disableSpellCheck);
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.orderBy);
                            if (message.caseSensitiveSort != null && message.hasOwnProperty("caseSensitiveSort"))
                                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.caseSensitiveSort);
                            if (message.histogramQueries != null && message.histogramQueries.length)
                                for (var i = 0; i < message.histogramQueries.length; ++i)
                                    $root.google.cloud.talent.v4beta1.HistogramQuery.encode(message.histogramQueries[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.resultSetId);
                            if (message.strictKeywordsSearch != null && message.hasOwnProperty("strictKeywordsSearch"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.strictKeywordsSearch);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchProfilesRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchProfilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesRequest} message SearchProfilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchProfilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchProfilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesRequest} SearchProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchProfilesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchProfilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.profileQuery = $root.google.cloud.talent.v4beta1.ProfileQuery.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.pageSize = reader.int32();
                                    break;
                                case 5:
                                    message.pageToken = reader.string();
                                    break;
                                case 6:
                                    message.offset = reader.int32();
                                    break;
                                case 7:
                                    message.disableSpellCheck = reader.bool();
                                    break;
                                case 8:
                                    message.orderBy = reader.string();
                                    break;
                                case 9:
                                    message.caseSensitiveSort = reader.bool();
                                    break;
                                case 10:
                                    if (!(message.histogramQueries && message.histogramQueries.length))
                                        message.histogramQueries = [];
                                    message.histogramQueries.push($root.google.cloud.talent.v4beta1.HistogramQuery.decode(reader, reader.uint32()));
                                    break;
                                case 12:
                                    message.resultSetId = reader.string();
                                    break;
                                case 13:
                                    message.strictKeywordsSearch = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchProfilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesRequest} SearchProfilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchProfilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchProfilesRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchProfilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.talent.v4beta1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.profileQuery != null && message.hasOwnProperty("profileQuery")) {
                                var error = $root.google.cloud.talent.v4beta1.ProfileQuery.verify(message.profileQuery);
                                if (error)
                                    return "profileQuery." + error;
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                if (typeof message.disableSpellCheck !== "boolean")
                                    return "disableSpellCheck: boolean expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.caseSensitiveSort != null && message.hasOwnProperty("caseSensitiveSort"))
                                if (typeof message.caseSensitiveSort !== "boolean")
                                    return "caseSensitiveSort: boolean expected";
                            if (message.histogramQueries != null && message.hasOwnProperty("histogramQueries")) {
                                if (!Array.isArray(message.histogramQueries))
                                    return "histogramQueries: array expected";
                                for (var i = 0; i < message.histogramQueries.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.HistogramQuery.verify(message.histogramQueries[i]);
                                    if (error)
                                        return "histogramQueries." + error;
                                }
                            }
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                if (!$util.isString(message.resultSetId))
                                    return "resultSetId: string expected";
                            if (message.strictKeywordsSearch != null && message.hasOwnProperty("strictKeywordsSearch"))
                                if (typeof message.strictKeywordsSearch !== "boolean")
                                    return "strictKeywordsSearch: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchProfilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesRequest} SearchProfilesRequest
                         */
                        SearchProfilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SearchProfilesRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SearchProfilesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.profileQuery != null) {
                                if (typeof object.profileQuery !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesRequest.profileQuery: object expected");
                                message.profileQuery = $root.google.cloud.talent.v4beta1.ProfileQuery.fromObject(object.profileQuery);
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            if (object.disableSpellCheck != null)
                                message.disableSpellCheck = Boolean(object.disableSpellCheck);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.caseSensitiveSort != null)
                                message.caseSensitiveSort = Boolean(object.caseSensitiveSort);
                            if (object.histogramQueries) {
                                if (!Array.isArray(object.histogramQueries))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesRequest.histogramQueries: array expected");
                                message.histogramQueries = [];
                                for (var i = 0; i < object.histogramQueries.length; ++i) {
                                    if (typeof object.histogramQueries[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesRequest.histogramQueries: object expected");
                                    message.histogramQueries[i] = $root.google.cloud.talent.v4beta1.HistogramQuery.fromObject(object.histogramQueries[i]);
                                }
                            }
                            if (object.resultSetId != null)
                                message.resultSetId = String(object.resultSetId);
                            if (object.strictKeywordsSearch != null)
                                message.strictKeywordsSearch = Boolean(object.strictKeywordsSearch);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchProfilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.SearchProfilesRequest} message SearchProfilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchProfilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.histogramQueries = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.requestMetadata = null;
                                object.profileQuery = null;
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.offset = 0;
                                object.disableSpellCheck = false;
                                object.orderBy = "";
                                object.caseSensitiveSort = false;
                                object.resultSetId = "";
                                object.strictKeywordsSearch = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.talent.v4beta1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.profileQuery != null && message.hasOwnProperty("profileQuery"))
                                object.profileQuery = $root.google.cloud.talent.v4beta1.ProfileQuery.toObject(message.profileQuery, options);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = message.offset;
                            if (message.disableSpellCheck != null && message.hasOwnProperty("disableSpellCheck"))
                                object.disableSpellCheck = message.disableSpellCheck;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.caseSensitiveSort != null && message.hasOwnProperty("caseSensitiveSort"))
                                object.caseSensitiveSort = message.caseSensitiveSort;
                            if (message.histogramQueries && message.histogramQueries.length) {
                                object.histogramQueries = [];
                                for (var j = 0; j < message.histogramQueries.length; ++j)
                                    object.histogramQueries[j] = $root.google.cloud.talent.v4beta1.HistogramQuery.toObject(message.histogramQueries[j], options);
                            }
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                object.resultSetId = message.resultSetId;
                            if (message.strictKeywordsSearch != null && message.hasOwnProperty("strictKeywordsSearch"))
                                object.strictKeywordsSearch = message.strictKeywordsSearch;
                            return object;
                        };
    
                        /**
                         * Converts this SearchProfilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchProfilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchProfilesRequest;
                    })();
    
                    v4beta1.SearchProfilesResponse = (function() {
    
                        /**
                         * Properties of a SearchProfilesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISearchProfilesResponse
                         * @property {number|Long|null} [estimatedTotalSize] SearchProfilesResponse estimatedTotalSize
                         * @property {google.cloud.talent.v4beta1.ISpellingCorrection|null} [spellCorrection] SearchProfilesResponse spellCorrection
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] SearchProfilesResponse metadata
                         * @property {string|null} [nextPageToken] SearchProfilesResponse nextPageToken
                         * @property {Array.<google.cloud.talent.v4beta1.IHistogramQueryResult>|null} [histogramQueryResults] SearchProfilesResponse histogramQueryResults
                         * @property {Array.<google.cloud.talent.v4beta1.ISummarizedProfile>|null} [summarizedProfiles] SearchProfilesResponse summarizedProfiles
                         * @property {string|null} [resultSetId] SearchProfilesResponse resultSetId
                         */
    
                        /**
                         * Constructs a new SearchProfilesResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SearchProfilesResponse.
                         * @implements ISearchProfilesResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesResponse=} [properties] Properties to set
                         */
                        function SearchProfilesResponse(properties) {
                            this.histogramQueryResults = [];
                            this.summarizedProfiles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchProfilesResponse estimatedTotalSize.
                         * @member {number|Long} estimatedTotalSize
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.estimatedTotalSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * SearchProfilesResponse spellCorrection.
                         * @member {google.cloud.talent.v4beta1.ISpellingCorrection|null|undefined} spellCorrection
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.spellCorrection = null;
    
                        /**
                         * SearchProfilesResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.metadata = null;
    
                        /**
                         * SearchProfilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * SearchProfilesResponse histogramQueryResults.
                         * @member {Array.<google.cloud.talent.v4beta1.IHistogramQueryResult>} histogramQueryResults
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.histogramQueryResults = $util.emptyArray;
    
                        /**
                         * SearchProfilesResponse summarizedProfiles.
                         * @member {Array.<google.cloud.talent.v4beta1.ISummarizedProfile>} summarizedProfiles
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.summarizedProfiles = $util.emptyArray;
    
                        /**
                         * SearchProfilesResponse resultSetId.
                         * @member {string} resultSetId
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         */
                        SearchProfilesResponse.prototype.resultSetId = "";
    
                        /**
                         * Creates a new SearchProfilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesResponse} SearchProfilesResponse instance
                         */
                        SearchProfilesResponse.create = function create(properties) {
                            return new SearchProfilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchProfilesResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.SearchProfilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesResponse} message SearchProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchProfilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.estimatedTotalSize);
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection"))
                                $root.google.cloud.talent.v4beta1.SpellingCorrection.encode(message.spellCorrection, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.nextPageToken);
                            if (message.histogramQueryResults != null && message.histogramQueryResults.length)
                                for (var i = 0; i < message.histogramQueryResults.length; ++i)
                                    $root.google.cloud.talent.v4beta1.HistogramQueryResult.encode(message.histogramQueryResults[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.summarizedProfiles != null && message.summarizedProfiles.length)
                                for (var i = 0; i < message.summarizedProfiles.length; ++i)
                                    $root.google.cloud.talent.v4beta1.SummarizedProfile.encode(message.summarizedProfiles[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.resultSetId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchProfilesResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SearchProfilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISearchProfilesResponse} message SearchProfilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchProfilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchProfilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesResponse} SearchProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchProfilesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SearchProfilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.estimatedTotalSize = reader.int64();
                                    break;
                                case 2:
                                    message.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 5:
                                    if (!(message.histogramQueryResults && message.histogramQueryResults.length))
                                        message.histogramQueryResults = [];
                                    message.histogramQueryResults.push($root.google.cloud.talent.v4beta1.HistogramQueryResult.decode(reader, reader.uint32()));
                                    break;
                                case 6:
                                    if (!(message.summarizedProfiles && message.summarizedProfiles.length))
                                        message.summarizedProfiles = [];
                                    message.summarizedProfiles.push($root.google.cloud.talent.v4beta1.SummarizedProfile.decode(reader, reader.uint32()));
                                    break;
                                case 7:
                                    message.resultSetId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchProfilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesResponse} SearchProfilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchProfilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchProfilesResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchProfilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                if (!$util.isInteger(message.estimatedTotalSize) && !(message.estimatedTotalSize && $util.isInteger(message.estimatedTotalSize.low) && $util.isInteger(message.estimatedTotalSize.high)))
                                    return "estimatedTotalSize: integer|Long expected";
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection")) {
                                var error = $root.google.cloud.talent.v4beta1.SpellingCorrection.verify(message.spellCorrection);
                                if (error)
                                    return "spellCorrection." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.histogramQueryResults != null && message.hasOwnProperty("histogramQueryResults")) {
                                if (!Array.isArray(message.histogramQueryResults))
                                    return "histogramQueryResults: array expected";
                                for (var i = 0; i < message.histogramQueryResults.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.HistogramQueryResult.verify(message.histogramQueryResults[i]);
                                    if (error)
                                        return "histogramQueryResults." + error;
                                }
                            }
                            if (message.summarizedProfiles != null && message.hasOwnProperty("summarizedProfiles")) {
                                if (!Array.isArray(message.summarizedProfiles))
                                    return "summarizedProfiles: array expected";
                                for (var i = 0; i < message.summarizedProfiles.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.SummarizedProfile.verify(message.summarizedProfiles[i]);
                                    if (error)
                                        return "summarizedProfiles." + error;
                                }
                            }
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                if (!$util.isString(message.resultSetId))
                                    return "resultSetId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchProfilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SearchProfilesResponse} SearchProfilesResponse
                         */
                        SearchProfilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SearchProfilesResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SearchProfilesResponse();
                            if (object.estimatedTotalSize != null)
                                if ($util.Long)
                                    (message.estimatedTotalSize = $util.Long.fromValue(object.estimatedTotalSize)).unsigned = false;
                                else if (typeof object.estimatedTotalSize === "string")
                                    message.estimatedTotalSize = parseInt(object.estimatedTotalSize, 10);
                                else if (typeof object.estimatedTotalSize === "number")
                                    message.estimatedTotalSize = object.estimatedTotalSize;
                                else if (typeof object.estimatedTotalSize === "object")
                                    message.estimatedTotalSize = new $util.LongBits(object.estimatedTotalSize.low >>> 0, object.estimatedTotalSize.high >>> 0).toNumber();
                            if (object.spellCorrection != null) {
                                if (typeof object.spellCorrection !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.spellCorrection: object expected");
                                message.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.fromObject(object.spellCorrection);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.histogramQueryResults) {
                                if (!Array.isArray(object.histogramQueryResults))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.histogramQueryResults: array expected");
                                message.histogramQueryResults = [];
                                for (var i = 0; i < object.histogramQueryResults.length; ++i) {
                                    if (typeof object.histogramQueryResults[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.histogramQueryResults: object expected");
                                    message.histogramQueryResults[i] = $root.google.cloud.talent.v4beta1.HistogramQueryResult.fromObject(object.histogramQueryResults[i]);
                                }
                            }
                            if (object.summarizedProfiles) {
                                if (!Array.isArray(object.summarizedProfiles))
                                    throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.summarizedProfiles: array expected");
                                message.summarizedProfiles = [];
                                for (var i = 0; i < object.summarizedProfiles.length; ++i) {
                                    if (typeof object.summarizedProfiles[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SearchProfilesResponse.summarizedProfiles: object expected");
                                    message.summarizedProfiles[i] = $root.google.cloud.talent.v4beta1.SummarizedProfile.fromObject(object.summarizedProfiles[i]);
                                }
                            }
                            if (object.resultSetId != null)
                                message.resultSetId = String(object.resultSetId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchProfilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.SearchProfilesResponse} message SearchProfilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchProfilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.histogramQueryResults = [];
                                object.summarizedProfiles = [];
                            }
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.estimatedTotalSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.estimatedTotalSize = options.longs === String ? "0" : 0;
                                object.spellCorrection = null;
                                object.metadata = null;
                                object.nextPageToken = "";
                                object.resultSetId = "";
                            }
                            if (message.estimatedTotalSize != null && message.hasOwnProperty("estimatedTotalSize"))
                                if (typeof message.estimatedTotalSize === "number")
                                    object.estimatedTotalSize = options.longs === String ? String(message.estimatedTotalSize) : message.estimatedTotalSize;
                                else
                                    object.estimatedTotalSize = options.longs === String ? $util.Long.prototype.toString.call(message.estimatedTotalSize) : options.longs === Number ? new $util.LongBits(message.estimatedTotalSize.low >>> 0, message.estimatedTotalSize.high >>> 0).toNumber() : message.estimatedTotalSize;
                            if (message.spellCorrection != null && message.hasOwnProperty("spellCorrection"))
                                object.spellCorrection = $root.google.cloud.talent.v4beta1.SpellingCorrection.toObject(message.spellCorrection, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.histogramQueryResults && message.histogramQueryResults.length) {
                                object.histogramQueryResults = [];
                                for (var j = 0; j < message.histogramQueryResults.length; ++j)
                                    object.histogramQueryResults[j] = $root.google.cloud.talent.v4beta1.HistogramQueryResult.toObject(message.histogramQueryResults[j], options);
                            }
                            if (message.summarizedProfiles && message.summarizedProfiles.length) {
                                object.summarizedProfiles = [];
                                for (var j = 0; j < message.summarizedProfiles.length; ++j)
                                    object.summarizedProfiles[j] = $root.google.cloud.talent.v4beta1.SummarizedProfile.toObject(message.summarizedProfiles[j], options);
                            }
                            if (message.resultSetId != null && message.hasOwnProperty("resultSetId"))
                                object.resultSetId = message.resultSetId;
                            return object;
                        };
    
                        /**
                         * Converts this SearchProfilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SearchProfilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchProfilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SearchProfilesResponse;
                    })();
    
                    v4beta1.SummarizedProfile = (function() {
    
                        /**
                         * Properties of a SummarizedProfile.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ISummarizedProfile
                         * @property {Array.<google.cloud.talent.v4beta1.IProfile>|null} [profiles] SummarizedProfile profiles
                         * @property {google.cloud.talent.v4beta1.IProfile|null} [summary] SummarizedProfile summary
                         */
    
                        /**
                         * Constructs a new SummarizedProfile.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a SummarizedProfile.
                         * @implements ISummarizedProfile
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ISummarizedProfile=} [properties] Properties to set
                         */
                        function SummarizedProfile(properties) {
                            this.profiles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SummarizedProfile profiles.
                         * @member {Array.<google.cloud.talent.v4beta1.IProfile>} profiles
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @instance
                         */
                        SummarizedProfile.prototype.profiles = $util.emptyArray;
    
                        /**
                         * SummarizedProfile summary.
                         * @member {google.cloud.talent.v4beta1.IProfile|null|undefined} summary
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @instance
                         */
                        SummarizedProfile.prototype.summary = null;
    
                        /**
                         * Creates a new SummarizedProfile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISummarizedProfile=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.SummarizedProfile} SummarizedProfile instance
                         */
                        SummarizedProfile.create = function create(properties) {
                            return new SummarizedProfile(properties);
                        };
    
                        /**
                         * Encodes the specified SummarizedProfile message. Does not implicitly {@link google.cloud.talent.v4beta1.SummarizedProfile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISummarizedProfile} message SummarizedProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SummarizedProfile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.profiles != null && message.profiles.length)
                                for (var i = 0; i < message.profiles.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Profile.encode(message.profiles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.summary != null && message.hasOwnProperty("summary"))
                                $root.google.cloud.talent.v4beta1.Profile.encode(message.summary, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SummarizedProfile message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.SummarizedProfile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {google.cloud.talent.v4beta1.ISummarizedProfile} message SummarizedProfile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SummarizedProfile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SummarizedProfile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.SummarizedProfile} SummarizedProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SummarizedProfile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.SummarizedProfile();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.profiles && message.profiles.length))
                                        message.profiles = [];
                                    message.profiles.push($root.google.cloud.talent.v4beta1.Profile.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.summary = $root.google.cloud.talent.v4beta1.Profile.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SummarizedProfile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.SummarizedProfile} SummarizedProfile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SummarizedProfile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SummarizedProfile message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SummarizedProfile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.profiles != null && message.hasOwnProperty("profiles")) {
                                if (!Array.isArray(message.profiles))
                                    return "profiles: array expected";
                                for (var i = 0; i < message.profiles.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Profile.verify(message.profiles[i]);
                                    if (error)
                                        return "profiles." + error;
                                }
                            }
                            if (message.summary != null && message.hasOwnProperty("summary")) {
                                var error = $root.google.cloud.talent.v4beta1.Profile.verify(message.summary);
                                if (error)
                                    return "summary." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SummarizedProfile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.SummarizedProfile} SummarizedProfile
                         */
                        SummarizedProfile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.SummarizedProfile)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.SummarizedProfile();
                            if (object.profiles) {
                                if (!Array.isArray(object.profiles))
                                    throw TypeError(".google.cloud.talent.v4beta1.SummarizedProfile.profiles: array expected");
                                message.profiles = [];
                                for (var i = 0; i < object.profiles.length; ++i) {
                                    if (typeof object.profiles[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.SummarizedProfile.profiles: object expected");
                                    message.profiles[i] = $root.google.cloud.talent.v4beta1.Profile.fromObject(object.profiles[i]);
                                }
                            }
                            if (object.summary != null) {
                                if (typeof object.summary !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.SummarizedProfile.summary: object expected");
                                message.summary = $root.google.cloud.talent.v4beta1.Profile.fromObject(object.summary);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SummarizedProfile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @static
                         * @param {google.cloud.talent.v4beta1.SummarizedProfile} message SummarizedProfile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SummarizedProfile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.profiles = [];
                            if (options.defaults)
                                object.summary = null;
                            if (message.profiles && message.profiles.length) {
                                object.profiles = [];
                                for (var j = 0; j < message.profiles.length; ++j)
                                    object.profiles[j] = $root.google.cloud.talent.v4beta1.Profile.toObject(message.profiles[j], options);
                            }
                            if (message.summary != null && message.hasOwnProperty("summary"))
                                object.summary = $root.google.cloud.talent.v4beta1.Profile.toObject(message.summary, options);
                            return object;
                        };
    
                        /**
                         * Converts this SummarizedProfile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.SummarizedProfile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SummarizedProfile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SummarizedProfile;
                    })();
    
                    v4beta1.Profile = (function() {
    
                        /**
                         * Properties of a Profile.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IProfile
                         * @property {string|null} [name] Profile name
                         * @property {string|null} [externalId] Profile externalId
                         * @property {string|null} [source] Profile source
                         * @property {string|null} [uri] Profile uri
                         * @property {string|null} [groupId] Profile groupId
                         * @property {google.protobuf.IBoolValue|null} [isHirable] Profile isHirable
                         * @property {google.protobuf.ITimestamp|null} [createTime] Profile createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Profile updateTime
                         * @property {google.protobuf.ITimestamp|null} [candidateUpdateTime] Profile candidateUpdateTime
                         * @property {google.protobuf.ITimestamp|null} [resumeUpdateTime] Profile resumeUpdateTime
                         * @property {google.cloud.talent.v4beta1.IResume|null} [resume] Profile resume
                         * @property {Array.<google.cloud.talent.v4beta1.IPersonName>|null} [personNames] Profile personNames
                         * @property {Array.<google.cloud.talent.v4beta1.IAddress>|null} [addresses] Profile addresses
                         * @property {Array.<google.cloud.talent.v4beta1.IEmail>|null} [emailAddresses] Profile emailAddresses
                         * @property {Array.<google.cloud.talent.v4beta1.IPhone>|null} [phoneNumbers] Profile phoneNumbers
                         * @property {Array.<google.cloud.talent.v4beta1.IPersonalUri>|null} [personalUris] Profile personalUris
                         * @property {Array.<google.cloud.talent.v4beta1.IAdditionalContactInfo>|null} [additionalContactInfo] Profile additionalContactInfo
                         * @property {Array.<google.cloud.talent.v4beta1.IEmploymentRecord>|null} [employmentRecords] Profile employmentRecords
                         * @property {Array.<google.cloud.talent.v4beta1.IEducationRecord>|null} [educationRecords] Profile educationRecords
                         * @property {Array.<google.cloud.talent.v4beta1.ISkill>|null} [skills] Profile skills
                         * @property {Array.<google.cloud.talent.v4beta1.IActivity>|null} [activities] Profile activities
                         * @property {Array.<google.cloud.talent.v4beta1.IPublication>|null} [publications] Profile publications
                         * @property {Array.<google.cloud.talent.v4beta1.IPatent>|null} [patents] Profile patents
                         * @property {Array.<google.cloud.talent.v4beta1.ICertification>|null} [certifications] Profile certifications
                         * @property {Array.<string>|null} [applications] Profile applications
                         * @property {Array.<string>|null} [assignments] Profile assignments
                         * @property {Object.<string,google.cloud.talent.v4beta1.ICustomAttribute>|null} [customAttributes] Profile customAttributes
                         * @property {boolean|null} [processed] Profile processed
                         * @property {string|null} [keywordSnippet] Profile keywordSnippet
                         * @property {Array.<google.cloud.talent.v4beta1.IAvailabilitySignal>|null} [availabilitySignals] Profile availabilitySignals
                         * @property {Array.<google.cloud.talent.v4beta1.ILocation>|null} [derivedAddresses] Profile derivedAddresses
                         */
    
                        /**
                         * Constructs a new Profile.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Profile.
                         * @implements IProfile
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IProfile=} [properties] Properties to set
                         */
                        function Profile(properties) {
                            this.personNames = [];
                            this.addresses = [];
                            this.emailAddresses = [];
                            this.phoneNumbers = [];
                            this.personalUris = [];
                            this.additionalContactInfo = [];
                            this.employmentRecords = [];
                            this.educationRecords = [];
                            this.skills = [];
                            this.activities = [];
                            this.publications = [];
                            this.patents = [];
                            this.certifications = [];
                            this.applications = [];
                            this.assignments = [];
                            this.customAttributes = {};
                            this.availabilitySignals = [];
                            this.derivedAddresses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Profile name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.name = "";
    
                        /**
                         * Profile externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.externalId = "";
    
                        /**
                         * Profile source.
                         * @member {string} source
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.source = "";
    
                        /**
                         * Profile uri.
                         * @member {string} uri
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.uri = "";
    
                        /**
                         * Profile groupId.
                         * @member {string} groupId
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.groupId = "";
    
                        /**
                         * Profile isHirable.
                         * @member {google.protobuf.IBoolValue|null|undefined} isHirable
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.isHirable = null;
    
                        /**
                         * Profile createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.createTime = null;
    
                        /**
                         * Profile updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.updateTime = null;
    
                        /**
                         * Profile candidateUpdateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} candidateUpdateTime
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.candidateUpdateTime = null;
    
                        /**
                         * Profile resumeUpdateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} resumeUpdateTime
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.resumeUpdateTime = null;
    
                        /**
                         * Profile resume.
                         * @member {google.cloud.talent.v4beta1.IResume|null|undefined} resume
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.resume = null;
    
                        /**
                         * Profile personNames.
                         * @member {Array.<google.cloud.talent.v4beta1.IPersonName>} personNames
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.personNames = $util.emptyArray;
    
                        /**
                         * Profile addresses.
                         * @member {Array.<google.cloud.talent.v4beta1.IAddress>} addresses
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.addresses = $util.emptyArray;
    
                        /**
                         * Profile emailAddresses.
                         * @member {Array.<google.cloud.talent.v4beta1.IEmail>} emailAddresses
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.emailAddresses = $util.emptyArray;
    
                        /**
                         * Profile phoneNumbers.
                         * @member {Array.<google.cloud.talent.v4beta1.IPhone>} phoneNumbers
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.phoneNumbers = $util.emptyArray;
    
                        /**
                         * Profile personalUris.
                         * @member {Array.<google.cloud.talent.v4beta1.IPersonalUri>} personalUris
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.personalUris = $util.emptyArray;
    
                        /**
                         * Profile additionalContactInfo.
                         * @member {Array.<google.cloud.talent.v4beta1.IAdditionalContactInfo>} additionalContactInfo
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.additionalContactInfo = $util.emptyArray;
    
                        /**
                         * Profile employmentRecords.
                         * @member {Array.<google.cloud.talent.v4beta1.IEmploymentRecord>} employmentRecords
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.employmentRecords = $util.emptyArray;
    
                        /**
                         * Profile educationRecords.
                         * @member {Array.<google.cloud.talent.v4beta1.IEducationRecord>} educationRecords
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.educationRecords = $util.emptyArray;
    
                        /**
                         * Profile skills.
                         * @member {Array.<google.cloud.talent.v4beta1.ISkill>} skills
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.skills = $util.emptyArray;
    
                        /**
                         * Profile activities.
                         * @member {Array.<google.cloud.talent.v4beta1.IActivity>} activities
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.activities = $util.emptyArray;
    
                        /**
                         * Profile publications.
                         * @member {Array.<google.cloud.talent.v4beta1.IPublication>} publications
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.publications = $util.emptyArray;
    
                        /**
                         * Profile patents.
                         * @member {Array.<google.cloud.talent.v4beta1.IPatent>} patents
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.patents = $util.emptyArray;
    
                        /**
                         * Profile certifications.
                         * @member {Array.<google.cloud.talent.v4beta1.ICertification>} certifications
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.certifications = $util.emptyArray;
    
                        /**
                         * Profile applications.
                         * @member {Array.<string>} applications
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.applications = $util.emptyArray;
    
                        /**
                         * Profile assignments.
                         * @member {Array.<string>} assignments
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.assignments = $util.emptyArray;
    
                        /**
                         * Profile customAttributes.
                         * @member {Object.<string,google.cloud.talent.v4beta1.ICustomAttribute>} customAttributes
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.customAttributes = $util.emptyObject;
    
                        /**
                         * Profile processed.
                         * @member {boolean} processed
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.processed = false;
    
                        /**
                         * Profile keywordSnippet.
                         * @member {string} keywordSnippet
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.keywordSnippet = "";
    
                        /**
                         * Profile availabilitySignals.
                         * @member {Array.<google.cloud.talent.v4beta1.IAvailabilitySignal>} availabilitySignals
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.availabilitySignals = $util.emptyArray;
    
                        /**
                         * Profile derivedAddresses.
                         * @member {Array.<google.cloud.talent.v4beta1.ILocation>} derivedAddresses
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         */
                        Profile.prototype.derivedAddresses = $util.emptyArray;
    
                        /**
                         * Creates a new Profile instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfile=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Profile} Profile instance
                         */
                        Profile.create = function create(properties) {
                            return new Profile(properties);
                        };
    
                        /**
                         * Encodes the specified Profile message. Does not implicitly {@link google.cloud.talent.v4beta1.Profile.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfile} message Profile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Profile.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.externalId);
                            if (message.source != null && message.hasOwnProperty("source"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.source);
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.uri);
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.groupId);
                            if (message.isHirable != null && message.hasOwnProperty("isHirable"))
                                $root.google.protobuf.BoolValue.encode(message.isHirable, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.personNames != null && message.personNames.length)
                                for (var i = 0; i < message.personNames.length; ++i)
                                    $root.google.cloud.talent.v4beta1.PersonName.encode(message.personNames[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.addresses != null && message.addresses.length)
                                for (var i = 0; i < message.addresses.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Address.encode(message.addresses[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.emailAddresses != null && message.emailAddresses.length)
                                for (var i = 0; i < message.emailAddresses.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Email.encode(message.emailAddresses[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.phoneNumbers != null && message.phoneNumbers.length)
                                for (var i = 0; i < message.phoneNumbers.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Phone.encode(message.phoneNumbers[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.personalUris != null && message.personalUris.length)
                                for (var i = 0; i < message.personalUris.length; ++i)
                                    $root.google.cloud.talent.v4beta1.PersonalUri.encode(message.personalUris[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.additionalContactInfo != null && message.additionalContactInfo.length)
                                for (var i = 0; i < message.additionalContactInfo.length; ++i)
                                    $root.google.cloud.talent.v4beta1.AdditionalContactInfo.encode(message.additionalContactInfo[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.employmentRecords != null && message.employmentRecords.length)
                                for (var i = 0; i < message.employmentRecords.length; ++i)
                                    $root.google.cloud.talent.v4beta1.EmploymentRecord.encode(message.employmentRecords[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.educationRecords != null && message.educationRecords.length)
                                for (var i = 0; i < message.educationRecords.length; ++i)
                                    $root.google.cloud.talent.v4beta1.EducationRecord.encode(message.educationRecords[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.skills != null && message.skills.length)
                                for (var i = 0; i < message.skills.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Skill.encode(message.skills[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.activities != null && message.activities.length)
                                for (var i = 0; i < message.activities.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Activity.encode(message.activities[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.publications != null && message.publications.length)
                                for (var i = 0; i < message.publications.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Publication.encode(message.publications[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.patents != null && message.patents.length)
                                for (var i = 0; i < message.patents.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Patent.encode(message.patents[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.certifications != null && message.certifications.length)
                                for (var i = 0; i < message.certifications.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Certification.encode(message.certifications[i], writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.customAttributes != null && message.hasOwnProperty("customAttributes"))
                                for (var keys = Object.keys(message.customAttributes), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 26, wireType 2 =*/210).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.talent.v4beta1.CustomAttribute.encode(message.customAttributes[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.processed != null && message.hasOwnProperty("processed"))
                                writer.uint32(/* id 27, wireType 0 =*/216).bool(message.processed);
                            if (message.keywordSnippet != null && message.hasOwnProperty("keywordSnippet"))
                                writer.uint32(/* id 28, wireType 2 =*/226).string(message.keywordSnippet);
                            if (message.applications != null && message.applications.length)
                                for (var i = 0; i < message.applications.length; ++i)
                                    writer.uint32(/* id 47, wireType 2 =*/378).string(message.applications[i]);
                            if (message.assignments != null && message.assignments.length)
                                for (var i = 0; i < message.assignments.length; ++i)
                                    writer.uint32(/* id 48, wireType 2 =*/386).string(message.assignments[i]);
                            if (message.resume != null && message.hasOwnProperty("resume"))
                                $root.google.cloud.talent.v4beta1.Resume.encode(message.resume, writer.uint32(/* id 53, wireType 2 =*/426).fork()).ldelim();
                            if (message.derivedAddresses != null && message.derivedAddresses.length)
                                for (var i = 0; i < message.derivedAddresses.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Location.encode(message.derivedAddresses[i], writer.uint32(/* id 64, wireType 2 =*/514).fork()).ldelim();
                            if (message.candidateUpdateTime != null && message.hasOwnProperty("candidateUpdateTime"))
                                $root.google.protobuf.Timestamp.encode(message.candidateUpdateTime, writer.uint32(/* id 67, wireType 2 =*/538).fork()).ldelim();
                            if (message.resumeUpdateTime != null && message.hasOwnProperty("resumeUpdateTime"))
                                $root.google.protobuf.Timestamp.encode(message.resumeUpdateTime, writer.uint32(/* id 68, wireType 2 =*/546).fork()).ldelim();
                            if (message.availabilitySignals != null && message.availabilitySignals.length)
                                for (var i = 0; i < message.availabilitySignals.length; ++i)
                                    $root.google.cloud.talent.v4beta1.AvailabilitySignal.encode(message.availabilitySignals[i], writer.uint32(/* id 70, wireType 2 =*/562).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Profile message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Profile.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {google.cloud.talent.v4beta1.IProfile} message Profile message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Profile.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Profile message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Profile} Profile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Profile.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Profile(), key;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.externalId = reader.string();
                                    break;
                                case 3:
                                    message.source = reader.string();
                                    break;
                                case 4:
                                    message.uri = reader.string();
                                    break;
                                case 5:
                                    message.groupId = reader.string();
                                    break;
                                case 6:
                                    message.isHirable = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 67:
                                    message.candidateUpdateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 68:
                                    message.resumeUpdateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 53:
                                    message.resume = $root.google.cloud.talent.v4beta1.Resume.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    if (!(message.personNames && message.personNames.length))
                                        message.personNames = [];
                                    message.personNames.push($root.google.cloud.talent.v4beta1.PersonName.decode(reader, reader.uint32()));
                                    break;
                                case 12:
                                    if (!(message.addresses && message.addresses.length))
                                        message.addresses = [];
                                    message.addresses.push($root.google.cloud.talent.v4beta1.Address.decode(reader, reader.uint32()));
                                    break;
                                case 13:
                                    if (!(message.emailAddresses && message.emailAddresses.length))
                                        message.emailAddresses = [];
                                    message.emailAddresses.push($root.google.cloud.talent.v4beta1.Email.decode(reader, reader.uint32()));
                                    break;
                                case 14:
                                    if (!(message.phoneNumbers && message.phoneNumbers.length))
                                        message.phoneNumbers = [];
                                    message.phoneNumbers.push($root.google.cloud.talent.v4beta1.Phone.decode(reader, reader.uint32()));
                                    break;
                                case 15:
                                    if (!(message.personalUris && message.personalUris.length))
                                        message.personalUris = [];
                                    message.personalUris.push($root.google.cloud.talent.v4beta1.PersonalUri.decode(reader, reader.uint32()));
                                    break;
                                case 16:
                                    if (!(message.additionalContactInfo && message.additionalContactInfo.length))
                                        message.additionalContactInfo = [];
                                    message.additionalContactInfo.push($root.google.cloud.talent.v4beta1.AdditionalContactInfo.decode(reader, reader.uint32()));
                                    break;
                                case 17:
                                    if (!(message.employmentRecords && message.employmentRecords.length))
                                        message.employmentRecords = [];
                                    message.employmentRecords.push($root.google.cloud.talent.v4beta1.EmploymentRecord.decode(reader, reader.uint32()));
                                    break;
                                case 18:
                                    if (!(message.educationRecords && message.educationRecords.length))
                                        message.educationRecords = [];
                                    message.educationRecords.push($root.google.cloud.talent.v4beta1.EducationRecord.decode(reader, reader.uint32()));
                                    break;
                                case 19:
                                    if (!(message.skills && message.skills.length))
                                        message.skills = [];
                                    message.skills.push($root.google.cloud.talent.v4beta1.Skill.decode(reader, reader.uint32()));
                                    break;
                                case 20:
                                    if (!(message.activities && message.activities.length))
                                        message.activities = [];
                                    message.activities.push($root.google.cloud.talent.v4beta1.Activity.decode(reader, reader.uint32()));
                                    break;
                                case 21:
                                    if (!(message.publications && message.publications.length))
                                        message.publications = [];
                                    message.publications.push($root.google.cloud.talent.v4beta1.Publication.decode(reader, reader.uint32()));
                                    break;
                                case 22:
                                    if (!(message.patents && message.patents.length))
                                        message.patents = [];
                                    message.patents.push($root.google.cloud.talent.v4beta1.Patent.decode(reader, reader.uint32()));
                                    break;
                                case 23:
                                    if (!(message.certifications && message.certifications.length))
                                        message.certifications = [];
                                    message.certifications.push($root.google.cloud.talent.v4beta1.Certification.decode(reader, reader.uint32()));
                                    break;
                                case 47:
                                    if (!(message.applications && message.applications.length))
                                        message.applications = [];
                                    message.applications.push(reader.string());
                                    break;
                                case 48:
                                    if (!(message.assignments && message.assignments.length))
                                        message.assignments = [];
                                    message.assignments.push(reader.string());
                                    break;
                                case 26:
                                    reader.skip().pos++;
                                    if (message.customAttributes === $util.emptyObject)
                                        message.customAttributes = {};
                                    key = reader.string();
                                    reader.pos++;
                                    message.customAttributes[key] = $root.google.cloud.talent.v4beta1.CustomAttribute.decode(reader, reader.uint32());
                                    break;
                                case 27:
                                    message.processed = reader.bool();
                                    break;
                                case 28:
                                    message.keywordSnippet = reader.string();
                                    break;
                                case 70:
                                    if (!(message.availabilitySignals && message.availabilitySignals.length))
                                        message.availabilitySignals = [];
                                    message.availabilitySignals.push($root.google.cloud.talent.v4beta1.AvailabilitySignal.decode(reader, reader.uint32()));
                                    break;
                                case 64:
                                    if (!(message.derivedAddresses && message.derivedAddresses.length))
                                        message.derivedAddresses = [];
                                    message.derivedAddresses.push($root.google.cloud.talent.v4beta1.Location.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Profile message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Profile} Profile
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Profile.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Profile message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Profile.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.source != null && message.hasOwnProperty("source"))
                                if (!$util.isString(message.source))
                                    return "source: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                if (!$util.isString(message.groupId))
                                    return "groupId: string expected";
                            if (message.isHirable != null && message.hasOwnProperty("isHirable")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isHirable);
                                if (error)
                                    return "isHirable." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.candidateUpdateTime != null && message.hasOwnProperty("candidateUpdateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.candidateUpdateTime);
                                if (error)
                                    return "candidateUpdateTime." + error;
                            }
                            if (message.resumeUpdateTime != null && message.hasOwnProperty("resumeUpdateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.resumeUpdateTime);
                                if (error)
                                    return "resumeUpdateTime." + error;
                            }
                            if (message.resume != null && message.hasOwnProperty("resume")) {
                                var error = $root.google.cloud.talent.v4beta1.Resume.verify(message.resume);
                                if (error)
                                    return "resume." + error;
                            }
                            if (message.personNames != null && message.hasOwnProperty("personNames")) {
                                if (!Array.isArray(message.personNames))
                                    return "personNames: array expected";
                                for (var i = 0; i < message.personNames.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.PersonName.verify(message.personNames[i]);
                                    if (error)
                                        return "personNames." + error;
                                }
                            }
                            if (message.addresses != null && message.hasOwnProperty("addresses")) {
                                if (!Array.isArray(message.addresses))
                                    return "addresses: array expected";
                                for (var i = 0; i < message.addresses.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Address.verify(message.addresses[i]);
                                    if (error)
                                        return "addresses." + error;
                                }
                            }
                            if (message.emailAddresses != null && message.hasOwnProperty("emailAddresses")) {
                                if (!Array.isArray(message.emailAddresses))
                                    return "emailAddresses: array expected";
                                for (var i = 0; i < message.emailAddresses.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Email.verify(message.emailAddresses[i]);
                                    if (error)
                                        return "emailAddresses." + error;
                                }
                            }
                            if (message.phoneNumbers != null && message.hasOwnProperty("phoneNumbers")) {
                                if (!Array.isArray(message.phoneNumbers))
                                    return "phoneNumbers: array expected";
                                for (var i = 0; i < message.phoneNumbers.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Phone.verify(message.phoneNumbers[i]);
                                    if (error)
                                        return "phoneNumbers." + error;
                                }
                            }
                            if (message.personalUris != null && message.hasOwnProperty("personalUris")) {
                                if (!Array.isArray(message.personalUris))
                                    return "personalUris: array expected";
                                for (var i = 0; i < message.personalUris.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.PersonalUri.verify(message.personalUris[i]);
                                    if (error)
                                        return "personalUris." + error;
                                }
                            }
                            if (message.additionalContactInfo != null && message.hasOwnProperty("additionalContactInfo")) {
                                if (!Array.isArray(message.additionalContactInfo))
                                    return "additionalContactInfo: array expected";
                                for (var i = 0; i < message.additionalContactInfo.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.AdditionalContactInfo.verify(message.additionalContactInfo[i]);
                                    if (error)
                                        return "additionalContactInfo." + error;
                                }
                            }
                            if (message.employmentRecords != null && message.hasOwnProperty("employmentRecords")) {
                                if (!Array.isArray(message.employmentRecords))
                                    return "employmentRecords: array expected";
                                for (var i = 0; i < message.employmentRecords.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.EmploymentRecord.verify(message.employmentRecords[i]);
                                    if (error)
                                        return "employmentRecords." + error;
                                }
                            }
                            if (message.educationRecords != null && message.hasOwnProperty("educationRecords")) {
                                if (!Array.isArray(message.educationRecords))
                                    return "educationRecords: array expected";
                                for (var i = 0; i < message.educationRecords.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.EducationRecord.verify(message.educationRecords[i]);
                                    if (error)
                                        return "educationRecords." + error;
                                }
                            }
                            if (message.skills != null && message.hasOwnProperty("skills")) {
                                if (!Array.isArray(message.skills))
                                    return "skills: array expected";
                                for (var i = 0; i < message.skills.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Skill.verify(message.skills[i]);
                                    if (error)
                                        return "skills." + error;
                                }
                            }
                            if (message.activities != null && message.hasOwnProperty("activities")) {
                                if (!Array.isArray(message.activities))
                                    return "activities: array expected";
                                for (var i = 0; i < message.activities.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Activity.verify(message.activities[i]);
                                    if (error)
                                        return "activities." + error;
                                }
                            }
                            if (message.publications != null && message.hasOwnProperty("publications")) {
                                if (!Array.isArray(message.publications))
                                    return "publications: array expected";
                                for (var i = 0; i < message.publications.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Publication.verify(message.publications[i]);
                                    if (error)
                                        return "publications." + error;
                                }
                            }
                            if (message.patents != null && message.hasOwnProperty("patents")) {
                                if (!Array.isArray(message.patents))
                                    return "patents: array expected";
                                for (var i = 0; i < message.patents.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Patent.verify(message.patents[i]);
                                    if (error)
                                        return "patents." + error;
                                }
                            }
                            if (message.certifications != null && message.hasOwnProperty("certifications")) {
                                if (!Array.isArray(message.certifications))
                                    return "certifications: array expected";
                                for (var i = 0; i < message.certifications.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Certification.verify(message.certifications[i]);
                                    if (error)
                                        return "certifications." + error;
                                }
                            }
                            if (message.applications != null && message.hasOwnProperty("applications")) {
                                if (!Array.isArray(message.applications))
                                    return "applications: array expected";
                                for (var i = 0; i < message.applications.length; ++i)
                                    if (!$util.isString(message.applications[i]))
                                        return "applications: string[] expected";
                            }
                            if (message.assignments != null && message.hasOwnProperty("assignments")) {
                                if (!Array.isArray(message.assignments))
                                    return "assignments: array expected";
                                for (var i = 0; i < message.assignments.length; ++i)
                                    if (!$util.isString(message.assignments[i]))
                                        return "assignments: string[] expected";
                            }
                            if (message.customAttributes != null && message.hasOwnProperty("customAttributes")) {
                                if (!$util.isObject(message.customAttributes))
                                    return "customAttributes: object expected";
                                var key = Object.keys(message.customAttributes);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.CustomAttribute.verify(message.customAttributes[key[i]]);
                                    if (error)
                                        return "customAttributes." + error;
                                }
                            }
                            if (message.processed != null && message.hasOwnProperty("processed"))
                                if (typeof message.processed !== "boolean")
                                    return "processed: boolean expected";
                            if (message.keywordSnippet != null && message.hasOwnProperty("keywordSnippet"))
                                if (!$util.isString(message.keywordSnippet))
                                    return "keywordSnippet: string expected";
                            if (message.availabilitySignals != null && message.hasOwnProperty("availabilitySignals")) {
                                if (!Array.isArray(message.availabilitySignals))
                                    return "availabilitySignals: array expected";
                                for (var i = 0; i < message.availabilitySignals.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.AvailabilitySignal.verify(message.availabilitySignals[i]);
                                    if (error)
                                        return "availabilitySignals." + error;
                                }
                            }
                            if (message.derivedAddresses != null && message.hasOwnProperty("derivedAddresses")) {
                                if (!Array.isArray(message.derivedAddresses))
                                    return "derivedAddresses: array expected";
                                for (var i = 0; i < message.derivedAddresses.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Location.verify(message.derivedAddresses[i]);
                                    if (error)
                                        return "derivedAddresses." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Profile message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Profile} Profile
                         */
                        Profile.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Profile)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Profile();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            if (object.source != null)
                                message.source = String(object.source);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.groupId != null)
                                message.groupId = String(object.groupId);
                            if (object.isHirable != null) {
                                if (typeof object.isHirable !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.isHirable: object expected");
                                message.isHirable = $root.google.protobuf.BoolValue.fromObject(object.isHirable);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.candidateUpdateTime != null) {
                                if (typeof object.candidateUpdateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.candidateUpdateTime: object expected");
                                message.candidateUpdateTime = $root.google.protobuf.Timestamp.fromObject(object.candidateUpdateTime);
                            }
                            if (object.resumeUpdateTime != null) {
                                if (typeof object.resumeUpdateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.resumeUpdateTime: object expected");
                                message.resumeUpdateTime = $root.google.protobuf.Timestamp.fromObject(object.resumeUpdateTime);
                            }
                            if (object.resume != null) {
                                if (typeof object.resume !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.resume: object expected");
                                message.resume = $root.google.cloud.talent.v4beta1.Resume.fromObject(object.resume);
                            }
                            if (object.personNames) {
                                if (!Array.isArray(object.personNames))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.personNames: array expected");
                                message.personNames = [];
                                for (var i = 0; i < object.personNames.length; ++i) {
                                    if (typeof object.personNames[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.personNames: object expected");
                                    message.personNames[i] = $root.google.cloud.talent.v4beta1.PersonName.fromObject(object.personNames[i]);
                                }
                            }
                            if (object.addresses) {
                                if (!Array.isArray(object.addresses))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.addresses: array expected");
                                message.addresses = [];
                                for (var i = 0; i < object.addresses.length; ++i) {
                                    if (typeof object.addresses[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.addresses: object expected");
                                    message.addresses[i] = $root.google.cloud.talent.v4beta1.Address.fromObject(object.addresses[i]);
                                }
                            }
                            if (object.emailAddresses) {
                                if (!Array.isArray(object.emailAddresses))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.emailAddresses: array expected");
                                message.emailAddresses = [];
                                for (var i = 0; i < object.emailAddresses.length; ++i) {
                                    if (typeof object.emailAddresses[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.emailAddresses: object expected");
                                    message.emailAddresses[i] = $root.google.cloud.talent.v4beta1.Email.fromObject(object.emailAddresses[i]);
                                }
                            }
                            if (object.phoneNumbers) {
                                if (!Array.isArray(object.phoneNumbers))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.phoneNumbers: array expected");
                                message.phoneNumbers = [];
                                for (var i = 0; i < object.phoneNumbers.length; ++i) {
                                    if (typeof object.phoneNumbers[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.phoneNumbers: object expected");
                                    message.phoneNumbers[i] = $root.google.cloud.talent.v4beta1.Phone.fromObject(object.phoneNumbers[i]);
                                }
                            }
                            if (object.personalUris) {
                                if (!Array.isArray(object.personalUris))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.personalUris: array expected");
                                message.personalUris = [];
                                for (var i = 0; i < object.personalUris.length; ++i) {
                                    if (typeof object.personalUris[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.personalUris: object expected");
                                    message.personalUris[i] = $root.google.cloud.talent.v4beta1.PersonalUri.fromObject(object.personalUris[i]);
                                }
                            }
                            if (object.additionalContactInfo) {
                                if (!Array.isArray(object.additionalContactInfo))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.additionalContactInfo: array expected");
                                message.additionalContactInfo = [];
                                for (var i = 0; i < object.additionalContactInfo.length; ++i) {
                                    if (typeof object.additionalContactInfo[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.additionalContactInfo: object expected");
                                    message.additionalContactInfo[i] = $root.google.cloud.talent.v4beta1.AdditionalContactInfo.fromObject(object.additionalContactInfo[i]);
                                }
                            }
                            if (object.employmentRecords) {
                                if (!Array.isArray(object.employmentRecords))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.employmentRecords: array expected");
                                message.employmentRecords = [];
                                for (var i = 0; i < object.employmentRecords.length; ++i) {
                                    if (typeof object.employmentRecords[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.employmentRecords: object expected");
                                    message.employmentRecords[i] = $root.google.cloud.talent.v4beta1.EmploymentRecord.fromObject(object.employmentRecords[i]);
                                }
                            }
                            if (object.educationRecords) {
                                if (!Array.isArray(object.educationRecords))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.educationRecords: array expected");
                                message.educationRecords = [];
                                for (var i = 0; i < object.educationRecords.length; ++i) {
                                    if (typeof object.educationRecords[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.educationRecords: object expected");
                                    message.educationRecords[i] = $root.google.cloud.talent.v4beta1.EducationRecord.fromObject(object.educationRecords[i]);
                                }
                            }
                            if (object.skills) {
                                if (!Array.isArray(object.skills))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.skills: array expected");
                                message.skills = [];
                                for (var i = 0; i < object.skills.length; ++i) {
                                    if (typeof object.skills[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.skills: object expected");
                                    message.skills[i] = $root.google.cloud.talent.v4beta1.Skill.fromObject(object.skills[i]);
                                }
                            }
                            if (object.activities) {
                                if (!Array.isArray(object.activities))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.activities: array expected");
                                message.activities = [];
                                for (var i = 0; i < object.activities.length; ++i) {
                                    if (typeof object.activities[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.activities: object expected");
                                    message.activities[i] = $root.google.cloud.talent.v4beta1.Activity.fromObject(object.activities[i]);
                                }
                            }
                            if (object.publications) {
                                if (!Array.isArray(object.publications))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.publications: array expected");
                                message.publications = [];
                                for (var i = 0; i < object.publications.length; ++i) {
                                    if (typeof object.publications[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.publications: object expected");
                                    message.publications[i] = $root.google.cloud.talent.v4beta1.Publication.fromObject(object.publications[i]);
                                }
                            }
                            if (object.patents) {
                                if (!Array.isArray(object.patents))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.patents: array expected");
                                message.patents = [];
                                for (var i = 0; i < object.patents.length; ++i) {
                                    if (typeof object.patents[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.patents: object expected");
                                    message.patents[i] = $root.google.cloud.talent.v4beta1.Patent.fromObject(object.patents[i]);
                                }
                            }
                            if (object.certifications) {
                                if (!Array.isArray(object.certifications))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.certifications: array expected");
                                message.certifications = [];
                                for (var i = 0; i < object.certifications.length; ++i) {
                                    if (typeof object.certifications[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.certifications: object expected");
                                    message.certifications[i] = $root.google.cloud.talent.v4beta1.Certification.fromObject(object.certifications[i]);
                                }
                            }
                            if (object.applications) {
                                if (!Array.isArray(object.applications))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.applications: array expected");
                                message.applications = [];
                                for (var i = 0; i < object.applications.length; ++i)
                                    message.applications[i] = String(object.applications[i]);
                            }
                            if (object.assignments) {
                                if (!Array.isArray(object.assignments))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.assignments: array expected");
                                message.assignments = [];
                                for (var i = 0; i < object.assignments.length; ++i)
                                    message.assignments[i] = String(object.assignments[i]);
                            }
                            if (object.customAttributes) {
                                if (typeof object.customAttributes !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.customAttributes: object expected");
                                message.customAttributes = {};
                                for (var keys = Object.keys(object.customAttributes), i = 0; i < keys.length; ++i) {
                                    if (typeof object.customAttributes[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.customAttributes: object expected");
                                    message.customAttributes[keys[i]] = $root.google.cloud.talent.v4beta1.CustomAttribute.fromObject(object.customAttributes[keys[i]]);
                                }
                            }
                            if (object.processed != null)
                                message.processed = Boolean(object.processed);
                            if (object.keywordSnippet != null)
                                message.keywordSnippet = String(object.keywordSnippet);
                            if (object.availabilitySignals) {
                                if (!Array.isArray(object.availabilitySignals))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.availabilitySignals: array expected");
                                message.availabilitySignals = [];
                                for (var i = 0; i < object.availabilitySignals.length; ++i) {
                                    if (typeof object.availabilitySignals[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.availabilitySignals: object expected");
                                    message.availabilitySignals[i] = $root.google.cloud.talent.v4beta1.AvailabilitySignal.fromObject(object.availabilitySignals[i]);
                                }
                            }
                            if (object.derivedAddresses) {
                                if (!Array.isArray(object.derivedAddresses))
                                    throw TypeError(".google.cloud.talent.v4beta1.Profile.derivedAddresses: array expected");
                                message.derivedAddresses = [];
                                for (var i = 0; i < object.derivedAddresses.length; ++i) {
                                    if (typeof object.derivedAddresses[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Profile.derivedAddresses: object expected");
                                    message.derivedAddresses[i] = $root.google.cloud.talent.v4beta1.Location.fromObject(object.derivedAddresses[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Profile message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @static
                         * @param {google.cloud.talent.v4beta1.Profile} message Profile
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Profile.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.personNames = [];
                                object.addresses = [];
                                object.emailAddresses = [];
                                object.phoneNumbers = [];
                                object.personalUris = [];
                                object.additionalContactInfo = [];
                                object.employmentRecords = [];
                                object.educationRecords = [];
                                object.skills = [];
                                object.activities = [];
                                object.publications = [];
                                object.patents = [];
                                object.certifications = [];
                                object.applications = [];
                                object.assignments = [];
                                object.derivedAddresses = [];
                                object.availabilitySignals = [];
                            }
                            if (options.objects || options.defaults)
                                object.customAttributes = {};
                            if (options.defaults) {
                                object.name = "";
                                object.externalId = "";
                                object.source = "";
                                object.uri = "";
                                object.groupId = "";
                                object.isHirable = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.processed = false;
                                object.keywordSnippet = "";
                                object.resume = null;
                                object.candidateUpdateTime = null;
                                object.resumeUpdateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = message.source;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                object.groupId = message.groupId;
                            if (message.isHirable != null && message.hasOwnProperty("isHirable"))
                                object.isHirable = $root.google.protobuf.BoolValue.toObject(message.isHirable, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.personNames && message.personNames.length) {
                                object.personNames = [];
                                for (var j = 0; j < message.personNames.length; ++j)
                                    object.personNames[j] = $root.google.cloud.talent.v4beta1.PersonName.toObject(message.personNames[j], options);
                            }
                            if (message.addresses && message.addresses.length) {
                                object.addresses = [];
                                for (var j = 0; j < message.addresses.length; ++j)
                                    object.addresses[j] = $root.google.cloud.talent.v4beta1.Address.toObject(message.addresses[j], options);
                            }
                            if (message.emailAddresses && message.emailAddresses.length) {
                                object.emailAddresses = [];
                                for (var j = 0; j < message.emailAddresses.length; ++j)
                                    object.emailAddresses[j] = $root.google.cloud.talent.v4beta1.Email.toObject(message.emailAddresses[j], options);
                            }
                            if (message.phoneNumbers && message.phoneNumbers.length) {
                                object.phoneNumbers = [];
                                for (var j = 0; j < message.phoneNumbers.length; ++j)
                                    object.phoneNumbers[j] = $root.google.cloud.talent.v4beta1.Phone.toObject(message.phoneNumbers[j], options);
                            }
                            if (message.personalUris && message.personalUris.length) {
                                object.personalUris = [];
                                for (var j = 0; j < message.personalUris.length; ++j)
                                    object.personalUris[j] = $root.google.cloud.talent.v4beta1.PersonalUri.toObject(message.personalUris[j], options);
                            }
                            if (message.additionalContactInfo && message.additionalContactInfo.length) {
                                object.additionalContactInfo = [];
                                for (var j = 0; j < message.additionalContactInfo.length; ++j)
                                    object.additionalContactInfo[j] = $root.google.cloud.talent.v4beta1.AdditionalContactInfo.toObject(message.additionalContactInfo[j], options);
                            }
                            if (message.employmentRecords && message.employmentRecords.length) {
                                object.employmentRecords = [];
                                for (var j = 0; j < message.employmentRecords.length; ++j)
                                    object.employmentRecords[j] = $root.google.cloud.talent.v4beta1.EmploymentRecord.toObject(message.employmentRecords[j], options);
                            }
                            if (message.educationRecords && message.educationRecords.length) {
                                object.educationRecords = [];
                                for (var j = 0; j < message.educationRecords.length; ++j)
                                    object.educationRecords[j] = $root.google.cloud.talent.v4beta1.EducationRecord.toObject(message.educationRecords[j], options);
                            }
                            if (message.skills && message.skills.length) {
                                object.skills = [];
                                for (var j = 0; j < message.skills.length; ++j)
                                    object.skills[j] = $root.google.cloud.talent.v4beta1.Skill.toObject(message.skills[j], options);
                            }
                            if (message.activities && message.activities.length) {
                                object.activities = [];
                                for (var j = 0; j < message.activities.length; ++j)
                                    object.activities[j] = $root.google.cloud.talent.v4beta1.Activity.toObject(message.activities[j], options);
                            }
                            if (message.publications && message.publications.length) {
                                object.publications = [];
                                for (var j = 0; j < message.publications.length; ++j)
                                    object.publications[j] = $root.google.cloud.talent.v4beta1.Publication.toObject(message.publications[j], options);
                            }
                            if (message.patents && message.patents.length) {
                                object.patents = [];
                                for (var j = 0; j < message.patents.length; ++j)
                                    object.patents[j] = $root.google.cloud.talent.v4beta1.Patent.toObject(message.patents[j], options);
                            }
                            if (message.certifications && message.certifications.length) {
                                object.certifications = [];
                                for (var j = 0; j < message.certifications.length; ++j)
                                    object.certifications[j] = $root.google.cloud.talent.v4beta1.Certification.toObject(message.certifications[j], options);
                            }
                            var keys2;
                            if (message.customAttributes && (keys2 = Object.keys(message.customAttributes)).length) {
                                object.customAttributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.customAttributes[keys2[j]] = $root.google.cloud.talent.v4beta1.CustomAttribute.toObject(message.customAttributes[keys2[j]], options);
                            }
                            if (message.processed != null && message.hasOwnProperty("processed"))
                                object.processed = message.processed;
                            if (message.keywordSnippet != null && message.hasOwnProperty("keywordSnippet"))
                                object.keywordSnippet = message.keywordSnippet;
                            if (message.applications && message.applications.length) {
                                object.applications = [];
                                for (var j = 0; j < message.applications.length; ++j)
                                    object.applications[j] = message.applications[j];
                            }
                            if (message.assignments && message.assignments.length) {
                                object.assignments = [];
                                for (var j = 0; j < message.assignments.length; ++j)
                                    object.assignments[j] = message.assignments[j];
                            }
                            if (message.resume != null && message.hasOwnProperty("resume"))
                                object.resume = $root.google.cloud.talent.v4beta1.Resume.toObject(message.resume, options);
                            if (message.derivedAddresses && message.derivedAddresses.length) {
                                object.derivedAddresses = [];
                                for (var j = 0; j < message.derivedAddresses.length; ++j)
                                    object.derivedAddresses[j] = $root.google.cloud.talent.v4beta1.Location.toObject(message.derivedAddresses[j], options);
                            }
                            if (message.candidateUpdateTime != null && message.hasOwnProperty("candidateUpdateTime"))
                                object.candidateUpdateTime = $root.google.protobuf.Timestamp.toObject(message.candidateUpdateTime, options);
                            if (message.resumeUpdateTime != null && message.hasOwnProperty("resumeUpdateTime"))
                                object.resumeUpdateTime = $root.google.protobuf.Timestamp.toObject(message.resumeUpdateTime, options);
                            if (message.availabilitySignals && message.availabilitySignals.length) {
                                object.availabilitySignals = [];
                                for (var j = 0; j < message.availabilitySignals.length; ++j)
                                    object.availabilitySignals[j] = $root.google.cloud.talent.v4beta1.AvailabilitySignal.toObject(message.availabilitySignals[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Profile to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Profile
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Profile.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Profile;
                    })();
    
                    v4beta1.AvailabilitySignal = (function() {
    
                        /**
                         * Properties of an AvailabilitySignal.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IAvailabilitySignal
                         * @property {google.cloud.talent.v4beta1.AvailabilitySignalType|null} [type] AvailabilitySignal type
                         * @property {google.protobuf.ITimestamp|null} [lastUpdateTime] AvailabilitySignal lastUpdateTime
                         * @property {google.protobuf.IBoolValue|null} [filterSatisfied] AvailabilitySignal filterSatisfied
                         */
    
                        /**
                         * Constructs a new AvailabilitySignal.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an AvailabilitySignal.
                         * @implements IAvailabilitySignal
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IAvailabilitySignal=} [properties] Properties to set
                         */
                        function AvailabilitySignal(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AvailabilitySignal type.
                         * @member {google.cloud.talent.v4beta1.AvailabilitySignalType} type
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @instance
                         */
                        AvailabilitySignal.prototype.type = 0;
    
                        /**
                         * AvailabilitySignal lastUpdateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastUpdateTime
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @instance
                         */
                        AvailabilitySignal.prototype.lastUpdateTime = null;
    
                        /**
                         * AvailabilitySignal filterSatisfied.
                         * @member {google.protobuf.IBoolValue|null|undefined} filterSatisfied
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @instance
                         */
                        AvailabilitySignal.prototype.filterSatisfied = null;
    
                        /**
                         * Creates a new AvailabilitySignal instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilitySignal=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.AvailabilitySignal} AvailabilitySignal instance
                         */
                        AvailabilitySignal.create = function create(properties) {
                            return new AvailabilitySignal(properties);
                        };
    
                        /**
                         * Encodes the specified AvailabilitySignal message. Does not implicitly {@link google.cloud.talent.v4beta1.AvailabilitySignal.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilitySignal} message AvailabilitySignal message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilitySignal.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastUpdateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.filterSatisfied != null && message.hasOwnProperty("filterSatisfied"))
                                $root.google.protobuf.BoolValue.encode(message.filterSatisfied, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AvailabilitySignal message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.AvailabilitySignal.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAvailabilitySignal} message AvailabilitySignal message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AvailabilitySignal.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AvailabilitySignal message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.AvailabilitySignal} AvailabilitySignal
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilitySignal.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.AvailabilitySignal();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    message.lastUpdateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.filterSatisfied = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AvailabilitySignal message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.AvailabilitySignal} AvailabilitySignal
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AvailabilitySignal.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AvailabilitySignal message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AvailabilitySignal.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastUpdateTime);
                                if (error)
                                    return "lastUpdateTime." + error;
                            }
                            if (message.filterSatisfied != null && message.hasOwnProperty("filterSatisfied")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.filterSatisfied);
                                if (error)
                                    return "filterSatisfied." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AvailabilitySignal message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.AvailabilitySignal} AvailabilitySignal
                         */
                        AvailabilitySignal.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.AvailabilitySignal)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.AvailabilitySignal();
                            switch (object.type) {
                            case "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "JOB_APPLICATION":
                            case 1:
                                message.type = 1;
                                break;
                            case "RESUME_UPDATE":
                            case 2:
                                message.type = 2;
                                break;
                            case "CANDIDATE_UPDATE":
                            case 3:
                                message.type = 3;
                                break;
                            case "CLIENT_SUBMISSION":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.lastUpdateTime != null) {
                                if (typeof object.lastUpdateTime !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.AvailabilitySignal.lastUpdateTime: object expected");
                                message.lastUpdateTime = $root.google.protobuf.Timestamp.fromObject(object.lastUpdateTime);
                            }
                            if (object.filterSatisfied != null) {
                                if (typeof object.filterSatisfied !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.AvailabilitySignal.filterSatisfied: object expected");
                                message.filterSatisfied = $root.google.protobuf.BoolValue.fromObject(object.filterSatisfied);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AvailabilitySignal message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @static
                         * @param {google.cloud.talent.v4beta1.AvailabilitySignal} message AvailabilitySignal
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AvailabilitySignal.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED" : 0;
                                object.lastUpdateTime = null;
                                object.filterSatisfied = null;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.AvailabilitySignalType[message.type] : message.type;
                            if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                                object.lastUpdateTime = $root.google.protobuf.Timestamp.toObject(message.lastUpdateTime, options);
                            if (message.filterSatisfied != null && message.hasOwnProperty("filterSatisfied"))
                                object.filterSatisfied = $root.google.protobuf.BoolValue.toObject(message.filterSatisfied, options);
                            return object;
                        };
    
                        /**
                         * Converts this AvailabilitySignal to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.AvailabilitySignal
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AvailabilitySignal.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return AvailabilitySignal;
                    })();
    
                    v4beta1.Resume = (function() {
    
                        /**
                         * Properties of a Resume.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IResume
                         * @property {string|null} [structuredResume] Resume structuredResume
                         * @property {google.cloud.talent.v4beta1.Resume.ResumeType|null} [resumeType] Resume resumeType
                         */
    
                        /**
                         * Constructs a new Resume.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Resume.
                         * @implements IResume
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IResume=} [properties] Properties to set
                         */
                        function Resume(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Resume structuredResume.
                         * @member {string} structuredResume
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @instance
                         */
                        Resume.prototype.structuredResume = "";
    
                        /**
                         * Resume resumeType.
                         * @member {google.cloud.talent.v4beta1.Resume.ResumeType} resumeType
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @instance
                         */
                        Resume.prototype.resumeType = 0;
    
                        /**
                         * Creates a new Resume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResume=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Resume} Resume instance
                         */
                        Resume.create = function create(properties) {
                            return new Resume(properties);
                        };
    
                        /**
                         * Encodes the specified Resume message. Does not implicitly {@link google.cloud.talent.v4beta1.Resume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResume} message Resume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Resume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.structuredResume != null && message.hasOwnProperty("structuredResume"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.structuredResume);
                            if (message.resumeType != null && message.hasOwnProperty("resumeType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.resumeType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Resume message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Resume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {google.cloud.talent.v4beta1.IResume} message Resume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Resume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Resume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Resume} Resume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Resume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Resume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.structuredResume = reader.string();
                                    break;
                                case 2:
                                    message.resumeType = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Resume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Resume} Resume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Resume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Resume message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Resume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.structuredResume != null && message.hasOwnProperty("structuredResume"))
                                if (!$util.isString(message.structuredResume))
                                    return "structuredResume: string expected";
                            if (message.resumeType != null && message.hasOwnProperty("resumeType"))
                                switch (message.resumeType) {
                                default:
                                    return "resumeType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Resume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Resume} Resume
                         */
                        Resume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Resume)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Resume();
                            if (object.structuredResume != null)
                                message.structuredResume = String(object.structuredResume);
                            switch (object.resumeType) {
                            case "RESUME_TYPE_UNSPECIFIED":
                            case 0:
                                message.resumeType = 0;
                                break;
                            case "HRXML":
                            case 1:
                                message.resumeType = 1;
                                break;
                            case "OTHER_RESUME_TYPE":
                            case 2:
                                message.resumeType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Resume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @static
                         * @param {google.cloud.talent.v4beta1.Resume} message Resume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Resume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.structuredResume = "";
                                object.resumeType = options.enums === String ? "RESUME_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.structuredResume != null && message.hasOwnProperty("structuredResume"))
                                object.structuredResume = message.structuredResume;
                            if (message.resumeType != null && message.hasOwnProperty("resumeType"))
                                object.resumeType = options.enums === String ? $root.google.cloud.talent.v4beta1.Resume.ResumeType[message.resumeType] : message.resumeType;
                            return object;
                        };
    
                        /**
                         * Converts this Resume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Resume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Resume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * ResumeType enum.
                         * @name google.cloud.talent.v4beta1.Resume.ResumeType
                         * @enum {string}
                         * @property {number} RESUME_TYPE_UNSPECIFIED=0 RESUME_TYPE_UNSPECIFIED value
                         * @property {number} HRXML=1 HRXML value
                         * @property {number} OTHER_RESUME_TYPE=2 OTHER_RESUME_TYPE value
                         */
                        Resume.ResumeType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESUME_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HRXML"] = 1;
                            values[valuesById[2] = "OTHER_RESUME_TYPE"] = 2;
                            return values;
                        })();
    
                        return Resume;
                    })();
    
                    v4beta1.PersonName = (function() {
    
                        /**
                         * Properties of a PersonName.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPersonName
                         * @property {string|null} [formattedName] PersonName formattedName
                         * @property {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName|null} [structuredName] PersonName structuredName
                         * @property {string|null} [preferredName] PersonName preferredName
                         */
    
                        /**
                         * Constructs a new PersonName.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a PersonName.
                         * @implements IPersonName
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPersonName=} [properties] Properties to set
                         */
                        function PersonName(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PersonName formattedName.
                         * @member {string} formattedName
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @instance
                         */
                        PersonName.prototype.formattedName = "";
    
                        /**
                         * PersonName structuredName.
                         * @member {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName|null|undefined} structuredName
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @instance
                         */
                        PersonName.prototype.structuredName = null;
    
                        /**
                         * PersonName preferredName.
                         * @member {string} preferredName
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @instance
                         */
                        PersonName.prototype.preferredName = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PersonName personName.
                         * @member {"formattedName"|"structuredName"|undefined} personName
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @instance
                         */
                        Object.defineProperty(PersonName.prototype, "personName", {
                            get: $util.oneOfGetter($oneOfFields = ["formattedName", "structuredName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PersonName instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonName=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.PersonName} PersonName instance
                         */
                        PersonName.create = function create(properties) {
                            return new PersonName(properties);
                        };
    
                        /**
                         * Encodes the specified PersonName message. Does not implicitly {@link google.cloud.talent.v4beta1.PersonName.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonName} message PersonName message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonName.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.formattedName != null && message.hasOwnProperty("formattedName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.formattedName);
                            if (message.structuredName != null && message.hasOwnProperty("structuredName"))
                                $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName.encode(message.structuredName, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.preferredName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PersonName message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.PersonName.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonName} message PersonName message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonName.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PersonName message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.PersonName} PersonName
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonName.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.PersonName();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.formattedName = reader.string();
                                    break;
                                case 2:
                                    message.structuredName = $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.preferredName = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PersonName message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.PersonName} PersonName
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonName.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PersonName message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PersonName.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.formattedName != null && message.hasOwnProperty("formattedName")) {
                                properties.personName = 1;
                                if (!$util.isString(message.formattedName))
                                    return "formattedName: string expected";
                            }
                            if (message.structuredName != null && message.hasOwnProperty("structuredName")) {
                                if (properties.personName === 1)
                                    return "personName: multiple values";
                                properties.personName = 1;
                                {
                                    var error = $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName.verify(message.structuredName);
                                    if (error)
                                        return "structuredName." + error;
                                }
                            }
                            if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                if (!$util.isString(message.preferredName))
                                    return "preferredName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PersonName message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.PersonName} PersonName
                         */
                        PersonName.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.PersonName)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.PersonName();
                            if (object.formattedName != null)
                                message.formattedName = String(object.formattedName);
                            if (object.structuredName != null) {
                                if (typeof object.structuredName !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.PersonName.structuredName: object expected");
                                message.structuredName = $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName.fromObject(object.structuredName);
                            }
                            if (object.preferredName != null)
                                message.preferredName = String(object.preferredName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PersonName message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @static
                         * @param {google.cloud.talent.v4beta1.PersonName} message PersonName
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PersonName.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.preferredName = "";
                            if (message.formattedName != null && message.hasOwnProperty("formattedName")) {
                                object.formattedName = message.formattedName;
                                if (options.oneofs)
                                    object.personName = "formattedName";
                            }
                            if (message.structuredName != null && message.hasOwnProperty("structuredName")) {
                                object.structuredName = $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName.toObject(message.structuredName, options);
                                if (options.oneofs)
                                    object.personName = "structuredName";
                            }
                            if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                object.preferredName = message.preferredName;
                            return object;
                        };
    
                        /**
                         * Converts this PersonName to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.PersonName
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PersonName.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        PersonName.PersonStructuredName = (function() {
    
                            /**
                             * Properties of a PersonStructuredName.
                             * @memberof google.cloud.talent.v4beta1.PersonName
                             * @interface IPersonStructuredName
                             * @property {string|null} [givenName] PersonStructuredName givenName
                             * @property {string|null} [preferredName] PersonStructuredName preferredName
                             * @property {string|null} [middleInitial] PersonStructuredName middleInitial
                             * @property {string|null} [familyName] PersonStructuredName familyName
                             * @property {Array.<string>|null} [suffixes] PersonStructuredName suffixes
                             * @property {Array.<string>|null} [prefixes] PersonStructuredName prefixes
                             */
    
                            /**
                             * Constructs a new PersonStructuredName.
                             * @memberof google.cloud.talent.v4beta1.PersonName
                             * @classdesc Represents a PersonStructuredName.
                             * @implements IPersonStructuredName
                             * @constructor
                             * @param {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName=} [properties] Properties to set
                             */
                            function PersonStructuredName(properties) {
                                this.suffixes = [];
                                this.prefixes = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PersonStructuredName givenName.
                             * @member {string} givenName
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.givenName = "";
    
                            /**
                             * PersonStructuredName preferredName.
                             * @member {string} preferredName
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.preferredName = "";
    
                            /**
                             * PersonStructuredName middleInitial.
                             * @member {string} middleInitial
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.middleInitial = "";
    
                            /**
                             * PersonStructuredName familyName.
                             * @member {string} familyName
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.familyName = "";
    
                            /**
                             * PersonStructuredName suffixes.
                             * @member {Array.<string>} suffixes
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.suffixes = $util.emptyArray;
    
                            /**
                             * PersonStructuredName prefixes.
                             * @member {Array.<string>} prefixes
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             */
                            PersonStructuredName.prototype.prefixes = $util.emptyArray;
    
                            /**
                             * Creates a new PersonStructuredName instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName=} [properties] Properties to set
                             * @returns {google.cloud.talent.v4beta1.PersonName.PersonStructuredName} PersonStructuredName instance
                             */
                            PersonStructuredName.create = function create(properties) {
                                return new PersonStructuredName(properties);
                            };
    
                            /**
                             * Encodes the specified PersonStructuredName message. Does not implicitly {@link google.cloud.talent.v4beta1.PersonName.PersonStructuredName.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName} message PersonStructuredName message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PersonStructuredName.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.givenName != null && message.hasOwnProperty("givenName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.givenName);
                                if (message.middleInitial != null && message.hasOwnProperty("middleInitial"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.middleInitial);
                                if (message.familyName != null && message.hasOwnProperty("familyName"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.familyName);
                                if (message.suffixes != null && message.suffixes.length)
                                    for (var i = 0; i < message.suffixes.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.suffixes[i]);
                                if (message.prefixes != null && message.prefixes.length)
                                    for (var i = 0; i < message.prefixes.length; ++i)
                                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.prefixes[i]);
                                if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.preferredName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PersonStructuredName message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.PersonName.PersonStructuredName.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {google.cloud.talent.v4beta1.PersonName.IPersonStructuredName} message PersonStructuredName message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PersonStructuredName.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PersonStructuredName message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.talent.v4beta1.PersonName.PersonStructuredName} PersonStructuredName
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PersonStructuredName.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.givenName = reader.string();
                                        break;
                                    case 6:
                                        message.preferredName = reader.string();
                                        break;
                                    case 2:
                                        message.middleInitial = reader.string();
                                        break;
                                    case 3:
                                        message.familyName = reader.string();
                                        break;
                                    case 4:
                                        if (!(message.suffixes && message.suffixes.length))
                                            message.suffixes = [];
                                        message.suffixes.push(reader.string());
                                        break;
                                    case 5:
                                        if (!(message.prefixes && message.prefixes.length))
                                            message.prefixes = [];
                                        message.prefixes.push(reader.string());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PersonStructuredName message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.talent.v4beta1.PersonName.PersonStructuredName} PersonStructuredName
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PersonStructuredName.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PersonStructuredName message.
                             * @function verify
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PersonStructuredName.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.givenName != null && message.hasOwnProperty("givenName"))
                                    if (!$util.isString(message.givenName))
                                        return "givenName: string expected";
                                if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                    if (!$util.isString(message.preferredName))
                                        return "preferredName: string expected";
                                if (message.middleInitial != null && message.hasOwnProperty("middleInitial"))
                                    if (!$util.isString(message.middleInitial))
                                        return "middleInitial: string expected";
                                if (message.familyName != null && message.hasOwnProperty("familyName"))
                                    if (!$util.isString(message.familyName))
                                        return "familyName: string expected";
                                if (message.suffixes != null && message.hasOwnProperty("suffixes")) {
                                    if (!Array.isArray(message.suffixes))
                                        return "suffixes: array expected";
                                    for (var i = 0; i < message.suffixes.length; ++i)
                                        if (!$util.isString(message.suffixes[i]))
                                            return "suffixes: string[] expected";
                                }
                                if (message.prefixes != null && message.hasOwnProperty("prefixes")) {
                                    if (!Array.isArray(message.prefixes))
                                        return "prefixes: array expected";
                                    for (var i = 0; i < message.prefixes.length; ++i)
                                        if (!$util.isString(message.prefixes[i]))
                                            return "prefixes: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PersonStructuredName message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.talent.v4beta1.PersonName.PersonStructuredName} PersonStructuredName
                             */
                            PersonStructuredName.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName)
                                    return object;
                                var message = new $root.google.cloud.talent.v4beta1.PersonName.PersonStructuredName();
                                if (object.givenName != null)
                                    message.givenName = String(object.givenName);
                                if (object.preferredName != null)
                                    message.preferredName = String(object.preferredName);
                                if (object.middleInitial != null)
                                    message.middleInitial = String(object.middleInitial);
                                if (object.familyName != null)
                                    message.familyName = String(object.familyName);
                                if (object.suffixes) {
                                    if (!Array.isArray(object.suffixes))
                                        throw TypeError(".google.cloud.talent.v4beta1.PersonName.PersonStructuredName.suffixes: array expected");
                                    message.suffixes = [];
                                    for (var i = 0; i < object.suffixes.length; ++i)
                                        message.suffixes[i] = String(object.suffixes[i]);
                                }
                                if (object.prefixes) {
                                    if (!Array.isArray(object.prefixes))
                                        throw TypeError(".google.cloud.talent.v4beta1.PersonName.PersonStructuredName.prefixes: array expected");
                                    message.prefixes = [];
                                    for (var i = 0; i < object.prefixes.length; ++i)
                                        message.prefixes[i] = String(object.prefixes[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PersonStructuredName message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @static
                             * @param {google.cloud.talent.v4beta1.PersonName.PersonStructuredName} message PersonStructuredName
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PersonStructuredName.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.suffixes = [];
                                    object.prefixes = [];
                                }
                                if (options.defaults) {
                                    object.givenName = "";
                                    object.middleInitial = "";
                                    object.familyName = "";
                                    object.preferredName = "";
                                }
                                if (message.givenName != null && message.hasOwnProperty("givenName"))
                                    object.givenName = message.givenName;
                                if (message.middleInitial != null && message.hasOwnProperty("middleInitial"))
                                    object.middleInitial = message.middleInitial;
                                if (message.familyName != null && message.hasOwnProperty("familyName"))
                                    object.familyName = message.familyName;
                                if (message.suffixes && message.suffixes.length) {
                                    object.suffixes = [];
                                    for (var j = 0; j < message.suffixes.length; ++j)
                                        object.suffixes[j] = message.suffixes[j];
                                }
                                if (message.prefixes && message.prefixes.length) {
                                    object.prefixes = [];
                                    for (var j = 0; j < message.prefixes.length; ++j)
                                        object.prefixes[j] = message.prefixes[j];
                                }
                                if (message.preferredName != null && message.hasOwnProperty("preferredName"))
                                    object.preferredName = message.preferredName;
                                return object;
                            };
    
                            /**
                             * Converts this PersonStructuredName to JSON.
                             * @function toJSON
                             * @memberof google.cloud.talent.v4beta1.PersonName.PersonStructuredName
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PersonStructuredName.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PersonStructuredName;
                        })();
    
                        return PersonName;
                    })();
    
                    v4beta1.Address = (function() {
    
                        /**
                         * Properties of an Address.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IAddress
                         * @property {google.cloud.talent.v4beta1.ContactInfoUsage|null} [usage] Address usage
                         * @property {string|null} [unstructuredAddress] Address unstructuredAddress
                         * @property {google.type.IPostalAddress|null} [structuredAddress] Address structuredAddress
                         * @property {google.protobuf.IBoolValue|null} [current] Address current
                         */
    
                        /**
                         * Constructs a new Address.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an Address.
                         * @implements IAddress
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IAddress=} [properties] Properties to set
                         */
                        function Address(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Address usage.
                         * @member {google.cloud.talent.v4beta1.ContactInfoUsage} usage
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         */
                        Address.prototype.usage = 0;
    
                        /**
                         * Address unstructuredAddress.
                         * @member {string} unstructuredAddress
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         */
                        Address.prototype.unstructuredAddress = "";
    
                        /**
                         * Address structuredAddress.
                         * @member {google.type.IPostalAddress|null|undefined} structuredAddress
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         */
                        Address.prototype.structuredAddress = null;
    
                        /**
                         * Address current.
                         * @member {google.protobuf.IBoolValue|null|undefined} current
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         */
                        Address.prototype.current = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Address address.
                         * @member {"unstructuredAddress"|"structuredAddress"|undefined} address
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         */
                        Object.defineProperty(Address.prototype, "address", {
                            get: $util.oneOfGetter($oneOfFields = ["unstructuredAddress", "structuredAddress"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Address instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAddress=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Address} Address instance
                         */
                        Address.create = function create(properties) {
                            return new Address(properties);
                        };
    
                        /**
                         * Encodes the specified Address message. Does not implicitly {@link google.cloud.talent.v4beta1.Address.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAddress} message Address message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Address.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.usage);
                            if (message.unstructuredAddress != null && message.hasOwnProperty("unstructuredAddress"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.unstructuredAddress);
                            if (message.structuredAddress != null && message.hasOwnProperty("structuredAddress"))
                                $root.google.type.PostalAddress.encode(message.structuredAddress, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.current != null && message.hasOwnProperty("current"))
                                $root.google.protobuf.BoolValue.encode(message.current, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Address message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Address.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAddress} message Address message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Address.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Address message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Address} Address
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Address.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Address();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.usage = reader.int32();
                                    break;
                                case 2:
                                    message.unstructuredAddress = reader.string();
                                    break;
                                case 3:
                                    message.structuredAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.current = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Address message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Address} Address
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Address.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Address message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Address.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                switch (message.usage) {
                                default:
                                    return "usage: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.unstructuredAddress != null && message.hasOwnProperty("unstructuredAddress")) {
                                properties.address = 1;
                                if (!$util.isString(message.unstructuredAddress))
                                    return "unstructuredAddress: string expected";
                            }
                            if (message.structuredAddress != null && message.hasOwnProperty("structuredAddress")) {
                                if (properties.address === 1)
                                    return "address: multiple values";
                                properties.address = 1;
                                {
                                    var error = $root.google.type.PostalAddress.verify(message.structuredAddress);
                                    if (error)
                                        return "structuredAddress." + error;
                                }
                            }
                            if (message.current != null && message.hasOwnProperty("current")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.current);
                                if (error)
                                    return "current." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Address message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Address} Address
                         */
                        Address.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Address)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Address();
                            switch (object.usage) {
                            case "CONTACT_INFO_USAGE_UNSPECIFIED":
                            case 0:
                                message.usage = 0;
                                break;
                            case "PERSONAL":
                            case 1:
                                message.usage = 1;
                                break;
                            case "WORK":
                            case 2:
                                message.usage = 2;
                                break;
                            case "SCHOOL":
                            case 3:
                                message.usage = 3;
                                break;
                            }
                            if (object.unstructuredAddress != null)
                                message.unstructuredAddress = String(object.unstructuredAddress);
                            if (object.structuredAddress != null) {
                                if (typeof object.structuredAddress !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Address.structuredAddress: object expected");
                                message.structuredAddress = $root.google.type.PostalAddress.fromObject(object.structuredAddress);
                            }
                            if (object.current != null) {
                                if (typeof object.current !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Address.current: object expected");
                                message.current = $root.google.protobuf.BoolValue.fromObject(object.current);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Address message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @static
                         * @param {google.cloud.talent.v4beta1.Address} message Address
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Address.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.usage = options.enums === String ? "CONTACT_INFO_USAGE_UNSPECIFIED" : 0;
                                object.current = null;
                            }
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                object.usage = options.enums === String ? $root.google.cloud.talent.v4beta1.ContactInfoUsage[message.usage] : message.usage;
                            if (message.unstructuredAddress != null && message.hasOwnProperty("unstructuredAddress")) {
                                object.unstructuredAddress = message.unstructuredAddress;
                                if (options.oneofs)
                                    object.address = "unstructuredAddress";
                            }
                            if (message.structuredAddress != null && message.hasOwnProperty("structuredAddress")) {
                                object.structuredAddress = $root.google.type.PostalAddress.toObject(message.structuredAddress, options);
                                if (options.oneofs)
                                    object.address = "structuredAddress";
                            }
                            if (message.current != null && message.hasOwnProperty("current"))
                                object.current = $root.google.protobuf.BoolValue.toObject(message.current, options);
                            return object;
                        };
    
                        /**
                         * Converts this Address to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Address
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Address.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Address;
                    })();
    
                    v4beta1.Email = (function() {
    
                        /**
                         * Properties of an Email.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IEmail
                         * @property {google.cloud.talent.v4beta1.ContactInfoUsage|null} [usage] Email usage
                         * @property {string|null} [emailAddress] Email emailAddress
                         */
    
                        /**
                         * Constructs a new Email.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an Email.
                         * @implements IEmail
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IEmail=} [properties] Properties to set
                         */
                        function Email(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Email usage.
                         * @member {google.cloud.talent.v4beta1.ContactInfoUsage} usage
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @instance
                         */
                        Email.prototype.usage = 0;
    
                        /**
                         * Email emailAddress.
                         * @member {string} emailAddress
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @instance
                         */
                        Email.prototype.emailAddress = "";
    
                        /**
                         * Creates a new Email instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmail=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Email} Email instance
                         */
                        Email.create = function create(properties) {
                            return new Email(properties);
                        };
    
                        /**
                         * Encodes the specified Email message. Does not implicitly {@link google.cloud.talent.v4beta1.Email.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmail} message Email message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Email.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.usage);
                            if (message.emailAddress != null && message.hasOwnProperty("emailAddress"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.emailAddress);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Email message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Email.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmail} message Email message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Email.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Email message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Email} Email
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Email.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Email();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.usage = reader.int32();
                                    break;
                                case 2:
                                    message.emailAddress = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Email message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Email} Email
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Email.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Email message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Email.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                switch (message.usage) {
                                default:
                                    return "usage: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.emailAddress != null && message.hasOwnProperty("emailAddress"))
                                if (!$util.isString(message.emailAddress))
                                    return "emailAddress: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Email message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Email} Email
                         */
                        Email.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Email)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Email();
                            switch (object.usage) {
                            case "CONTACT_INFO_USAGE_UNSPECIFIED":
                            case 0:
                                message.usage = 0;
                                break;
                            case "PERSONAL":
                            case 1:
                                message.usage = 1;
                                break;
                            case "WORK":
                            case 2:
                                message.usage = 2;
                                break;
                            case "SCHOOL":
                            case 3:
                                message.usage = 3;
                                break;
                            }
                            if (object.emailAddress != null)
                                message.emailAddress = String(object.emailAddress);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Email message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @static
                         * @param {google.cloud.talent.v4beta1.Email} message Email
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Email.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.usage = options.enums === String ? "CONTACT_INFO_USAGE_UNSPECIFIED" : 0;
                                object.emailAddress = "";
                            }
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                object.usage = options.enums === String ? $root.google.cloud.talent.v4beta1.ContactInfoUsage[message.usage] : message.usage;
                            if (message.emailAddress != null && message.hasOwnProperty("emailAddress"))
                                object.emailAddress = message.emailAddress;
                            return object;
                        };
    
                        /**
                         * Converts this Email to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Email
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Email.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Email;
                    })();
    
                    v4beta1.Phone = (function() {
    
                        /**
                         * Properties of a Phone.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPhone
                         * @property {google.cloud.talent.v4beta1.ContactInfoUsage|null} [usage] Phone usage
                         * @property {google.cloud.talent.v4beta1.Phone.PhoneType|null} [type] Phone type
                         * @property {string|null} [number] Phone number
                         * @property {string|null} [whenAvailable] Phone whenAvailable
                         */
    
                        /**
                         * Constructs a new Phone.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Phone.
                         * @implements IPhone
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPhone=} [properties] Properties to set
                         */
                        function Phone(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Phone usage.
                         * @member {google.cloud.talent.v4beta1.ContactInfoUsage} usage
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @instance
                         */
                        Phone.prototype.usage = 0;
    
                        /**
                         * Phone type.
                         * @member {google.cloud.talent.v4beta1.Phone.PhoneType} type
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @instance
                         */
                        Phone.prototype.type = 0;
    
                        /**
                         * Phone number.
                         * @member {string} number
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @instance
                         */
                        Phone.prototype.number = "";
    
                        /**
                         * Phone whenAvailable.
                         * @member {string} whenAvailable
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @instance
                         */
                        Phone.prototype.whenAvailable = "";
    
                        /**
                         * Creates a new Phone instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPhone=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Phone} Phone instance
                         */
                        Phone.create = function create(properties) {
                            return new Phone(properties);
                        };
    
                        /**
                         * Encodes the specified Phone message. Does not implicitly {@link google.cloud.talent.v4beta1.Phone.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPhone} message Phone message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Phone.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.usage);
                            if (message.type != null && message.hasOwnProperty("type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.number != null && message.hasOwnProperty("number"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.number);
                            if (message.whenAvailable != null && message.hasOwnProperty("whenAvailable"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.whenAvailable);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Phone message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Phone.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPhone} message Phone message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Phone.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Phone message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Phone} Phone
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Phone.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Phone();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.usage = reader.int32();
                                    break;
                                case 2:
                                    message.type = reader.int32();
                                    break;
                                case 3:
                                    message.number = reader.string();
                                    break;
                                case 4:
                                    message.whenAvailable = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Phone message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Phone} Phone
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Phone.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Phone message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Phone.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                switch (message.usage) {
                                default:
                                    return "usage: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                    break;
                                }
                            if (message.number != null && message.hasOwnProperty("number"))
                                if (!$util.isString(message.number))
                                    return "number: string expected";
                            if (message.whenAvailable != null && message.hasOwnProperty("whenAvailable"))
                                if (!$util.isString(message.whenAvailable))
                                    return "whenAvailable: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Phone message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Phone} Phone
                         */
                        Phone.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Phone)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Phone();
                            switch (object.usage) {
                            case "CONTACT_INFO_USAGE_UNSPECIFIED":
                            case 0:
                                message.usage = 0;
                                break;
                            case "PERSONAL":
                            case 1:
                                message.usage = 1;
                                break;
                            case "WORK":
                            case 2:
                                message.usage = 2;
                                break;
                            case "SCHOOL":
                            case 3:
                                message.usage = 3;
                                break;
                            }
                            switch (object.type) {
                            case "PHONE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "LANDLINE":
                            case 1:
                                message.type = 1;
                                break;
                            case "MOBILE":
                            case 2:
                                message.type = 2;
                                break;
                            case "FAX":
                            case 3:
                                message.type = 3;
                                break;
                            case "PAGER":
                            case 4:
                                message.type = 4;
                                break;
                            case "TTY_OR_TDD":
                            case 5:
                                message.type = 5;
                                break;
                            case "VOICEMAIL":
                            case 6:
                                message.type = 6;
                                break;
                            case "VIRTUAL":
                            case 7:
                                message.type = 7;
                                break;
                            case "VOIP":
                            case 8:
                                message.type = 8;
                                break;
                            case "MOBILE_OR_LANDLINE":
                            case 9:
                                message.type = 9;
                                break;
                            }
                            if (object.number != null)
                                message.number = String(object.number);
                            if (object.whenAvailable != null)
                                message.whenAvailable = String(object.whenAvailable);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Phone message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @static
                         * @param {google.cloud.talent.v4beta1.Phone} message Phone
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Phone.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.usage = options.enums === String ? "CONTACT_INFO_USAGE_UNSPECIFIED" : 0;
                                object.type = options.enums === String ? "PHONE_TYPE_UNSPECIFIED" : 0;
                                object.number = "";
                                object.whenAvailable = "";
                            }
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                object.usage = options.enums === String ? $root.google.cloud.talent.v4beta1.ContactInfoUsage[message.usage] : message.usage;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.talent.v4beta1.Phone.PhoneType[message.type] : message.type;
                            if (message.number != null && message.hasOwnProperty("number"))
                                object.number = message.number;
                            if (message.whenAvailable != null && message.hasOwnProperty("whenAvailable"))
                                object.whenAvailable = message.whenAvailable;
                            return object;
                        };
    
                        /**
                         * Converts this Phone to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Phone
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Phone.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * PhoneType enum.
                         * @name google.cloud.talent.v4beta1.Phone.PhoneType
                         * @enum {string}
                         * @property {number} PHONE_TYPE_UNSPECIFIED=0 PHONE_TYPE_UNSPECIFIED value
                         * @property {number} LANDLINE=1 LANDLINE value
                         * @property {number} MOBILE=2 MOBILE value
                         * @property {number} FAX=3 FAX value
                         * @property {number} PAGER=4 PAGER value
                         * @property {number} TTY_OR_TDD=5 TTY_OR_TDD value
                         * @property {number} VOICEMAIL=6 VOICEMAIL value
                         * @property {number} VIRTUAL=7 VIRTUAL value
                         * @property {number} VOIP=8 VOIP value
                         * @property {number} MOBILE_OR_LANDLINE=9 MOBILE_OR_LANDLINE value
                         */
                        Phone.PhoneType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PHONE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LANDLINE"] = 1;
                            values[valuesById[2] = "MOBILE"] = 2;
                            values[valuesById[3] = "FAX"] = 3;
                            values[valuesById[4] = "PAGER"] = 4;
                            values[valuesById[5] = "TTY_OR_TDD"] = 5;
                            values[valuesById[6] = "VOICEMAIL"] = 6;
                            values[valuesById[7] = "VIRTUAL"] = 7;
                            values[valuesById[8] = "VOIP"] = 8;
                            values[valuesById[9] = "MOBILE_OR_LANDLINE"] = 9;
                            return values;
                        })();
    
                        return Phone;
                    })();
    
                    v4beta1.PersonalUri = (function() {
    
                        /**
                         * Properties of a PersonalUri.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPersonalUri
                         * @property {string|null} [uri] PersonalUri uri
                         */
    
                        /**
                         * Constructs a new PersonalUri.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a PersonalUri.
                         * @implements IPersonalUri
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPersonalUri=} [properties] Properties to set
                         */
                        function PersonalUri(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PersonalUri uri.
                         * @member {string} uri
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @instance
                         */
                        PersonalUri.prototype.uri = "";
    
                        /**
                         * Creates a new PersonalUri instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonalUri=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.PersonalUri} PersonalUri instance
                         */
                        PersonalUri.create = function create(properties) {
                            return new PersonalUri(properties);
                        };
    
                        /**
                         * Encodes the specified PersonalUri message. Does not implicitly {@link google.cloud.talent.v4beta1.PersonalUri.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonalUri} message PersonalUri message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonalUri.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PersonalUri message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.PersonalUri.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPersonalUri} message PersonalUri message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PersonalUri.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PersonalUri message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.PersonalUri} PersonalUri
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonalUri.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.PersonalUri();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.uri = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PersonalUri message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.PersonalUri} PersonalUri
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PersonalUri.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PersonalUri message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PersonalUri.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PersonalUri message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.PersonalUri} PersonalUri
                         */
                        PersonalUri.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.PersonalUri)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.PersonalUri();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PersonalUri message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @static
                         * @param {google.cloud.talent.v4beta1.PersonalUri} message PersonalUri
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PersonalUri.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.uri = "";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            return object;
                        };
    
                        /**
                         * Converts this PersonalUri to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.PersonalUri
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PersonalUri.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return PersonalUri;
                    })();
    
                    v4beta1.AdditionalContactInfo = (function() {
    
                        /**
                         * Properties of an AdditionalContactInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IAdditionalContactInfo
                         * @property {google.cloud.talent.v4beta1.ContactInfoUsage|null} [usage] AdditionalContactInfo usage
                         * @property {string|null} [name] AdditionalContactInfo name
                         * @property {string|null} [contactId] AdditionalContactInfo contactId
                         */
    
                        /**
                         * Constructs a new AdditionalContactInfo.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an AdditionalContactInfo.
                         * @implements IAdditionalContactInfo
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IAdditionalContactInfo=} [properties] Properties to set
                         */
                        function AdditionalContactInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdditionalContactInfo usage.
                         * @member {google.cloud.talent.v4beta1.ContactInfoUsage} usage
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @instance
                         */
                        AdditionalContactInfo.prototype.usage = 0;
    
                        /**
                         * AdditionalContactInfo name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @instance
                         */
                        AdditionalContactInfo.prototype.name = "";
    
                        /**
                         * AdditionalContactInfo contactId.
                         * @member {string} contactId
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @instance
                         */
                        AdditionalContactInfo.prototype.contactId = "";
    
                        /**
                         * Creates a new AdditionalContactInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAdditionalContactInfo=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.AdditionalContactInfo} AdditionalContactInfo instance
                         */
                        AdditionalContactInfo.create = function create(properties) {
                            return new AdditionalContactInfo(properties);
                        };
    
                        /**
                         * Encodes the specified AdditionalContactInfo message. Does not implicitly {@link google.cloud.talent.v4beta1.AdditionalContactInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAdditionalContactInfo} message AdditionalContactInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdditionalContactInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.usage);
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.contactId != null && message.hasOwnProperty("contactId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.contactId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdditionalContactInfo message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.AdditionalContactInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.IAdditionalContactInfo} message AdditionalContactInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdditionalContactInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdditionalContactInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.AdditionalContactInfo} AdditionalContactInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdditionalContactInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.AdditionalContactInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.usage = reader.int32();
                                    break;
                                case 2:
                                    message.name = reader.string();
                                    break;
                                case 3:
                                    message.contactId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdditionalContactInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.AdditionalContactInfo} AdditionalContactInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdditionalContactInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdditionalContactInfo message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdditionalContactInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                switch (message.usage) {
                                default:
                                    return "usage: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.contactId != null && message.hasOwnProperty("contactId"))
                                if (!$util.isString(message.contactId))
                                    return "contactId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdditionalContactInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.AdditionalContactInfo} AdditionalContactInfo
                         */
                        AdditionalContactInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.AdditionalContactInfo)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.AdditionalContactInfo();
                            switch (object.usage) {
                            case "CONTACT_INFO_USAGE_UNSPECIFIED":
                            case 0:
                                message.usage = 0;
                                break;
                            case "PERSONAL":
                            case 1:
                                message.usage = 1;
                                break;
                            case "WORK":
                            case 2:
                                message.usage = 2;
                                break;
                            case "SCHOOL":
                            case 3:
                                message.usage = 3;
                                break;
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.contactId != null)
                                message.contactId = String(object.contactId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdditionalContactInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @static
                         * @param {google.cloud.talent.v4beta1.AdditionalContactInfo} message AdditionalContactInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdditionalContactInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.usage = options.enums === String ? "CONTACT_INFO_USAGE_UNSPECIFIED" : 0;
                                object.name = "";
                                object.contactId = "";
                            }
                            if (message.usage != null && message.hasOwnProperty("usage"))
                                object.usage = options.enums === String ? $root.google.cloud.talent.v4beta1.ContactInfoUsage[message.usage] : message.usage;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.contactId != null && message.hasOwnProperty("contactId"))
                                object.contactId = message.contactId;
                            return object;
                        };
    
                        /**
                         * Converts this AdditionalContactInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.AdditionalContactInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdditionalContactInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return AdditionalContactInfo;
                    })();
    
                    v4beta1.EmploymentRecord = (function() {
    
                        /**
                         * Properties of an EmploymentRecord.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IEmploymentRecord
                         * @property {google.type.IDate|null} [startDate] EmploymentRecord startDate
                         * @property {google.type.IDate|null} [endDate] EmploymentRecord endDate
                         * @property {string|null} [employerName] EmploymentRecord employerName
                         * @property {string|null} [divisionName] EmploymentRecord divisionName
                         * @property {google.cloud.talent.v4beta1.IAddress|null} [address] EmploymentRecord address
                         * @property {string|null} [jobTitle] EmploymentRecord jobTitle
                         * @property {string|null} [jobDescription] EmploymentRecord jobDescription
                         * @property {google.protobuf.IBoolValue|null} [isSupervisor] EmploymentRecord isSupervisor
                         * @property {google.protobuf.IBoolValue|null} [isSelfEmployed] EmploymentRecord isSelfEmployed
                         * @property {google.protobuf.IBoolValue|null} [isCurrent] EmploymentRecord isCurrent
                         * @property {string|null} [jobTitleSnippet] EmploymentRecord jobTitleSnippet
                         * @property {string|null} [jobDescriptionSnippet] EmploymentRecord jobDescriptionSnippet
                         * @property {string|null} [employerNameSnippet] EmploymentRecord employerNameSnippet
                         */
    
                        /**
                         * Constructs a new EmploymentRecord.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an EmploymentRecord.
                         * @implements IEmploymentRecord
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IEmploymentRecord=} [properties] Properties to set
                         */
                        function EmploymentRecord(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EmploymentRecord startDate.
                         * @member {google.type.IDate|null|undefined} startDate
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.startDate = null;
    
                        /**
                         * EmploymentRecord endDate.
                         * @member {google.type.IDate|null|undefined} endDate
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.endDate = null;
    
                        /**
                         * EmploymentRecord employerName.
                         * @member {string} employerName
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.employerName = "";
    
                        /**
                         * EmploymentRecord divisionName.
                         * @member {string} divisionName
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.divisionName = "";
    
                        /**
                         * EmploymentRecord address.
                         * @member {google.cloud.talent.v4beta1.IAddress|null|undefined} address
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.address = null;
    
                        /**
                         * EmploymentRecord jobTitle.
                         * @member {string} jobTitle
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.jobTitle = "";
    
                        /**
                         * EmploymentRecord jobDescription.
                         * @member {string} jobDescription
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.jobDescription = "";
    
                        /**
                         * EmploymentRecord isSupervisor.
                         * @member {google.protobuf.IBoolValue|null|undefined} isSupervisor
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.isSupervisor = null;
    
                        /**
                         * EmploymentRecord isSelfEmployed.
                         * @member {google.protobuf.IBoolValue|null|undefined} isSelfEmployed
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.isSelfEmployed = null;
    
                        /**
                         * EmploymentRecord isCurrent.
                         * @member {google.protobuf.IBoolValue|null|undefined} isCurrent
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.isCurrent = null;
    
                        /**
                         * EmploymentRecord jobTitleSnippet.
                         * @member {string} jobTitleSnippet
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.jobTitleSnippet = "";
    
                        /**
                         * EmploymentRecord jobDescriptionSnippet.
                         * @member {string} jobDescriptionSnippet
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.jobDescriptionSnippet = "";
    
                        /**
                         * EmploymentRecord employerNameSnippet.
                         * @member {string} employerNameSnippet
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         */
                        EmploymentRecord.prototype.employerNameSnippet = "";
    
                        /**
                         * Creates a new EmploymentRecord instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmploymentRecord=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.EmploymentRecord} EmploymentRecord instance
                         */
                        EmploymentRecord.create = function create(properties) {
                            return new EmploymentRecord(properties);
                        };
    
                        /**
                         * Encodes the specified EmploymentRecord message. Does not implicitly {@link google.cloud.talent.v4beta1.EmploymentRecord.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmploymentRecord} message EmploymentRecord message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmploymentRecord.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                $root.google.type.Date.encode(message.startDate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                $root.google.type.Date.encode(message.endDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.employerName != null && message.hasOwnProperty("employerName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.employerName);
                            if (message.divisionName != null && message.hasOwnProperty("divisionName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.divisionName);
                            if (message.address != null && message.hasOwnProperty("address"))
                                $root.google.cloud.talent.v4beta1.Address.encode(message.address, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.jobTitle);
                            if (message.jobDescription != null && message.hasOwnProperty("jobDescription"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.jobDescription);
                            if (message.isSupervisor != null && message.hasOwnProperty("isSupervisor"))
                                $root.google.protobuf.BoolValue.encode(message.isSupervisor, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.isSelfEmployed != null && message.hasOwnProperty("isSelfEmployed"))
                                $root.google.protobuf.BoolValue.encode(message.isSelfEmployed, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent"))
                                $root.google.protobuf.BoolValue.encode(message.isCurrent, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.jobTitleSnippet);
                            if (message.jobDescriptionSnippet != null && message.hasOwnProperty("jobDescriptionSnippet"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.jobDescriptionSnippet);
                            if (message.employerNameSnippet != null && message.hasOwnProperty("employerNameSnippet"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.employerNameSnippet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EmploymentRecord message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.EmploymentRecord.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEmploymentRecord} message EmploymentRecord message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmploymentRecord.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EmploymentRecord message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.EmploymentRecord} EmploymentRecord
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmploymentRecord.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.EmploymentRecord();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.employerName = reader.string();
                                    break;
                                case 4:
                                    message.divisionName = reader.string();
                                    break;
                                case 5:
                                    message.address = $root.google.cloud.talent.v4beta1.Address.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.jobTitle = reader.string();
                                    break;
                                case 7:
                                    message.jobDescription = reader.string();
                                    break;
                                case 8:
                                    message.isSupervisor = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.isSelfEmployed = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.isCurrent = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.jobTitleSnippet = reader.string();
                                    break;
                                case 12:
                                    message.jobDescriptionSnippet = reader.string();
                                    break;
                                case 13:
                                    message.employerNameSnippet = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EmploymentRecord message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.EmploymentRecord} EmploymentRecord
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmploymentRecord.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EmploymentRecord message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EmploymentRecord.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startDate != null && message.hasOwnProperty("startDate")) {
                                var error = $root.google.type.Date.verify(message.startDate);
                                if (error)
                                    return "startDate." + error;
                            }
                            if (message.endDate != null && message.hasOwnProperty("endDate")) {
                                var error = $root.google.type.Date.verify(message.endDate);
                                if (error)
                                    return "endDate." + error;
                            }
                            if (message.employerName != null && message.hasOwnProperty("employerName"))
                                if (!$util.isString(message.employerName))
                                    return "employerName: string expected";
                            if (message.divisionName != null && message.hasOwnProperty("divisionName"))
                                if (!$util.isString(message.divisionName))
                                    return "divisionName: string expected";
                            if (message.address != null && message.hasOwnProperty("address")) {
                                var error = $root.google.cloud.talent.v4beta1.Address.verify(message.address);
                                if (error)
                                    return "address." + error;
                            }
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                if (!$util.isString(message.jobTitle))
                                    return "jobTitle: string expected";
                            if (message.jobDescription != null && message.hasOwnProperty("jobDescription"))
                                if (!$util.isString(message.jobDescription))
                                    return "jobDescription: string expected";
                            if (message.isSupervisor != null && message.hasOwnProperty("isSupervisor")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isSupervisor);
                                if (error)
                                    return "isSupervisor." + error;
                            }
                            if (message.isSelfEmployed != null && message.hasOwnProperty("isSelfEmployed")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isSelfEmployed);
                                if (error)
                                    return "isSelfEmployed." + error;
                            }
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isCurrent);
                                if (error)
                                    return "isCurrent." + error;
                            }
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                if (!$util.isString(message.jobTitleSnippet))
                                    return "jobTitleSnippet: string expected";
                            if (message.jobDescriptionSnippet != null && message.hasOwnProperty("jobDescriptionSnippet"))
                                if (!$util.isString(message.jobDescriptionSnippet))
                                    return "jobDescriptionSnippet: string expected";
                            if (message.employerNameSnippet != null && message.hasOwnProperty("employerNameSnippet"))
                                if (!$util.isString(message.employerNameSnippet))
                                    return "employerNameSnippet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EmploymentRecord message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.EmploymentRecord} EmploymentRecord
                         */
                        EmploymentRecord.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.EmploymentRecord)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.EmploymentRecord();
                            if (object.startDate != null) {
                                if (typeof object.startDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.startDate: object expected");
                                message.startDate = $root.google.type.Date.fromObject(object.startDate);
                            }
                            if (object.endDate != null) {
                                if (typeof object.endDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.endDate: object expected");
                                message.endDate = $root.google.type.Date.fromObject(object.endDate);
                            }
                            if (object.employerName != null)
                                message.employerName = String(object.employerName);
                            if (object.divisionName != null)
                                message.divisionName = String(object.divisionName);
                            if (object.address != null) {
                                if (typeof object.address !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.address: object expected");
                                message.address = $root.google.cloud.talent.v4beta1.Address.fromObject(object.address);
                            }
                            if (object.jobTitle != null)
                                message.jobTitle = String(object.jobTitle);
                            if (object.jobDescription != null)
                                message.jobDescription = String(object.jobDescription);
                            if (object.isSupervisor != null) {
                                if (typeof object.isSupervisor !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.isSupervisor: object expected");
                                message.isSupervisor = $root.google.protobuf.BoolValue.fromObject(object.isSupervisor);
                            }
                            if (object.isSelfEmployed != null) {
                                if (typeof object.isSelfEmployed !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.isSelfEmployed: object expected");
                                message.isSelfEmployed = $root.google.protobuf.BoolValue.fromObject(object.isSelfEmployed);
                            }
                            if (object.isCurrent != null) {
                                if (typeof object.isCurrent !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EmploymentRecord.isCurrent: object expected");
                                message.isCurrent = $root.google.protobuf.BoolValue.fromObject(object.isCurrent);
                            }
                            if (object.jobTitleSnippet != null)
                                message.jobTitleSnippet = String(object.jobTitleSnippet);
                            if (object.jobDescriptionSnippet != null)
                                message.jobDescriptionSnippet = String(object.jobDescriptionSnippet);
                            if (object.employerNameSnippet != null)
                                message.employerNameSnippet = String(object.employerNameSnippet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EmploymentRecord message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.EmploymentRecord} message EmploymentRecord
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EmploymentRecord.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = null;
                                object.endDate = null;
                                object.employerName = "";
                                object.divisionName = "";
                                object.address = null;
                                object.jobTitle = "";
                                object.jobDescription = "";
                                object.isSupervisor = null;
                                object.isSelfEmployed = null;
                                object.isCurrent = null;
                                object.jobTitleSnippet = "";
                                object.jobDescriptionSnippet = "";
                                object.employerNameSnippet = "";
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = $root.google.type.Date.toObject(message.startDate, options);
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = $root.google.type.Date.toObject(message.endDate, options);
                            if (message.employerName != null && message.hasOwnProperty("employerName"))
                                object.employerName = message.employerName;
                            if (message.divisionName != null && message.hasOwnProperty("divisionName"))
                                object.divisionName = message.divisionName;
                            if (message.address != null && message.hasOwnProperty("address"))
                                object.address = $root.google.cloud.talent.v4beta1.Address.toObject(message.address, options);
                            if (message.jobTitle != null && message.hasOwnProperty("jobTitle"))
                                object.jobTitle = message.jobTitle;
                            if (message.jobDescription != null && message.hasOwnProperty("jobDescription"))
                                object.jobDescription = message.jobDescription;
                            if (message.isSupervisor != null && message.hasOwnProperty("isSupervisor"))
                                object.isSupervisor = $root.google.protobuf.BoolValue.toObject(message.isSupervisor, options);
                            if (message.isSelfEmployed != null && message.hasOwnProperty("isSelfEmployed"))
                                object.isSelfEmployed = $root.google.protobuf.BoolValue.toObject(message.isSelfEmployed, options);
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent"))
                                object.isCurrent = $root.google.protobuf.BoolValue.toObject(message.isCurrent, options);
                            if (message.jobTitleSnippet != null && message.hasOwnProperty("jobTitleSnippet"))
                                object.jobTitleSnippet = message.jobTitleSnippet;
                            if (message.jobDescriptionSnippet != null && message.hasOwnProperty("jobDescriptionSnippet"))
                                object.jobDescriptionSnippet = message.jobDescriptionSnippet;
                            if (message.employerNameSnippet != null && message.hasOwnProperty("employerNameSnippet"))
                                object.employerNameSnippet = message.employerNameSnippet;
                            return object;
                        };
    
                        /**
                         * Converts this EmploymentRecord to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.EmploymentRecord
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EmploymentRecord.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return EmploymentRecord;
                    })();
    
                    v4beta1.EducationRecord = (function() {
    
                        /**
                         * Properties of an EducationRecord.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IEducationRecord
                         * @property {google.type.IDate|null} [startDate] EducationRecord startDate
                         * @property {google.type.IDate|null} [endDate] EducationRecord endDate
                         * @property {google.type.IDate|null} [expectedGraduationDate] EducationRecord expectedGraduationDate
                         * @property {string|null} [schoolName] EducationRecord schoolName
                         * @property {google.cloud.talent.v4beta1.IAddress|null} [address] EducationRecord address
                         * @property {string|null} [degreeDescription] EducationRecord degreeDescription
                         * @property {google.cloud.talent.v4beta1.IDegree|null} [structuredDegree] EducationRecord structuredDegree
                         * @property {string|null} [description] EducationRecord description
                         * @property {google.protobuf.IBoolValue|null} [isCurrent] EducationRecord isCurrent
                         * @property {string|null} [schoolNameSnippet] EducationRecord schoolNameSnippet
                         * @property {string|null} [degreeSnippet] EducationRecord degreeSnippet
                         */
    
                        /**
                         * Constructs a new EducationRecord.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an EducationRecord.
                         * @implements IEducationRecord
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IEducationRecord=} [properties] Properties to set
                         */
                        function EducationRecord(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EducationRecord startDate.
                         * @member {google.type.IDate|null|undefined} startDate
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.startDate = null;
    
                        /**
                         * EducationRecord endDate.
                         * @member {google.type.IDate|null|undefined} endDate
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.endDate = null;
    
                        /**
                         * EducationRecord expectedGraduationDate.
                         * @member {google.type.IDate|null|undefined} expectedGraduationDate
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.expectedGraduationDate = null;
    
                        /**
                         * EducationRecord schoolName.
                         * @member {string} schoolName
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.schoolName = "";
    
                        /**
                         * EducationRecord address.
                         * @member {google.cloud.talent.v4beta1.IAddress|null|undefined} address
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.address = null;
    
                        /**
                         * EducationRecord degreeDescription.
                         * @member {string} degreeDescription
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.degreeDescription = "";
    
                        /**
                         * EducationRecord structuredDegree.
                         * @member {google.cloud.talent.v4beta1.IDegree|null|undefined} structuredDegree
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.structuredDegree = null;
    
                        /**
                         * EducationRecord description.
                         * @member {string} description
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.description = "";
    
                        /**
                         * EducationRecord isCurrent.
                         * @member {google.protobuf.IBoolValue|null|undefined} isCurrent
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.isCurrent = null;
    
                        /**
                         * EducationRecord schoolNameSnippet.
                         * @member {string} schoolNameSnippet
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.schoolNameSnippet = "";
    
                        /**
                         * EducationRecord degreeSnippet.
                         * @member {string} degreeSnippet
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        EducationRecord.prototype.degreeSnippet = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * EducationRecord degree.
                         * @member {"degreeDescription"|"structuredDegree"|undefined} degree
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         */
                        Object.defineProperty(EducationRecord.prototype, "degree", {
                            get: $util.oneOfGetter($oneOfFields = ["degreeDescription", "structuredDegree"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new EducationRecord instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationRecord=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.EducationRecord} EducationRecord instance
                         */
                        EducationRecord.create = function create(properties) {
                            return new EducationRecord(properties);
                        };
    
                        /**
                         * Encodes the specified EducationRecord message. Does not implicitly {@link google.cloud.talent.v4beta1.EducationRecord.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationRecord} message EducationRecord message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EducationRecord.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                $root.google.type.Date.encode(message.startDate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                $root.google.type.Date.encode(message.endDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.expectedGraduationDate != null && message.hasOwnProperty("expectedGraduationDate"))
                                $root.google.type.Date.encode(message.expectedGraduationDate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.schoolName != null && message.hasOwnProperty("schoolName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.schoolName);
                            if (message.address != null && message.hasOwnProperty("address"))
                                $root.google.cloud.talent.v4beta1.Address.encode(message.address, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.degreeDescription != null && message.hasOwnProperty("degreeDescription"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.degreeDescription);
                            if (message.structuredDegree != null && message.hasOwnProperty("structuredDegree"))
                                $root.google.cloud.talent.v4beta1.Degree.encode(message.structuredDegree, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.description);
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent"))
                                $root.google.protobuf.BoolValue.encode(message.isCurrent, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.schoolNameSnippet != null && message.hasOwnProperty("schoolNameSnippet"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.schoolNameSnippet);
                            if (message.degreeSnippet != null && message.hasOwnProperty("degreeSnippet"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.degreeSnippet);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EducationRecord message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.EducationRecord.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.IEducationRecord} message EducationRecord message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EducationRecord.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EducationRecord message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.EducationRecord} EducationRecord
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EducationRecord.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.EducationRecord();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.expectedGraduationDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.schoolName = reader.string();
                                    break;
                                case 5:
                                    message.address = $root.google.cloud.talent.v4beta1.Address.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.degreeDescription = reader.string();
                                    break;
                                case 7:
                                    message.structuredDegree = $root.google.cloud.talent.v4beta1.Degree.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.description = reader.string();
                                    break;
                                case 9:
                                    message.isCurrent = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.schoolNameSnippet = reader.string();
                                    break;
                                case 11:
                                    message.degreeSnippet = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EducationRecord message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.EducationRecord} EducationRecord
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EducationRecord.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EducationRecord message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EducationRecord.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.startDate != null && message.hasOwnProperty("startDate")) {
                                var error = $root.google.type.Date.verify(message.startDate);
                                if (error)
                                    return "startDate." + error;
                            }
                            if (message.endDate != null && message.hasOwnProperty("endDate")) {
                                var error = $root.google.type.Date.verify(message.endDate);
                                if (error)
                                    return "endDate." + error;
                            }
                            if (message.expectedGraduationDate != null && message.hasOwnProperty("expectedGraduationDate")) {
                                var error = $root.google.type.Date.verify(message.expectedGraduationDate);
                                if (error)
                                    return "expectedGraduationDate." + error;
                            }
                            if (message.schoolName != null && message.hasOwnProperty("schoolName"))
                                if (!$util.isString(message.schoolName))
                                    return "schoolName: string expected";
                            if (message.address != null && message.hasOwnProperty("address")) {
                                var error = $root.google.cloud.talent.v4beta1.Address.verify(message.address);
                                if (error)
                                    return "address." + error;
                            }
                            if (message.degreeDescription != null && message.hasOwnProperty("degreeDescription")) {
                                properties.degree = 1;
                                if (!$util.isString(message.degreeDescription))
                                    return "degreeDescription: string expected";
                            }
                            if (message.structuredDegree != null && message.hasOwnProperty("structuredDegree")) {
                                if (properties.degree === 1)
                                    return "degree: multiple values";
                                properties.degree = 1;
                                {
                                    var error = $root.google.cloud.talent.v4beta1.Degree.verify(message.structuredDegree);
                                    if (error)
                                        return "structuredDegree." + error;
                                }
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.isCurrent);
                                if (error)
                                    return "isCurrent." + error;
                            }
                            if (message.schoolNameSnippet != null && message.hasOwnProperty("schoolNameSnippet"))
                                if (!$util.isString(message.schoolNameSnippet))
                                    return "schoolNameSnippet: string expected";
                            if (message.degreeSnippet != null && message.hasOwnProperty("degreeSnippet"))
                                if (!$util.isString(message.degreeSnippet))
                                    return "degreeSnippet: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EducationRecord message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.EducationRecord} EducationRecord
                         */
                        EducationRecord.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.EducationRecord)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.EducationRecord();
                            if (object.startDate != null) {
                                if (typeof object.startDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.startDate: object expected");
                                message.startDate = $root.google.type.Date.fromObject(object.startDate);
                            }
                            if (object.endDate != null) {
                                if (typeof object.endDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.endDate: object expected");
                                message.endDate = $root.google.type.Date.fromObject(object.endDate);
                            }
                            if (object.expectedGraduationDate != null) {
                                if (typeof object.expectedGraduationDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.expectedGraduationDate: object expected");
                                message.expectedGraduationDate = $root.google.type.Date.fromObject(object.expectedGraduationDate);
                            }
                            if (object.schoolName != null)
                                message.schoolName = String(object.schoolName);
                            if (object.address != null) {
                                if (typeof object.address !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.address: object expected");
                                message.address = $root.google.cloud.talent.v4beta1.Address.fromObject(object.address);
                            }
                            if (object.degreeDescription != null)
                                message.degreeDescription = String(object.degreeDescription);
                            if (object.structuredDegree != null) {
                                if (typeof object.structuredDegree !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.structuredDegree: object expected");
                                message.structuredDegree = $root.google.cloud.talent.v4beta1.Degree.fromObject(object.structuredDegree);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.isCurrent != null) {
                                if (typeof object.isCurrent !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.EducationRecord.isCurrent: object expected");
                                message.isCurrent = $root.google.protobuf.BoolValue.fromObject(object.isCurrent);
                            }
                            if (object.schoolNameSnippet != null)
                                message.schoolNameSnippet = String(object.schoolNameSnippet);
                            if (object.degreeSnippet != null)
                                message.degreeSnippet = String(object.degreeSnippet);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EducationRecord message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @static
                         * @param {google.cloud.talent.v4beta1.EducationRecord} message EducationRecord
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EducationRecord.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = null;
                                object.endDate = null;
                                object.expectedGraduationDate = null;
                                object.schoolName = "";
                                object.address = null;
                                object.description = "";
                                object.isCurrent = null;
                                object.schoolNameSnippet = "";
                                object.degreeSnippet = "";
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = $root.google.type.Date.toObject(message.startDate, options);
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = $root.google.type.Date.toObject(message.endDate, options);
                            if (message.expectedGraduationDate != null && message.hasOwnProperty("expectedGraduationDate"))
                                object.expectedGraduationDate = $root.google.type.Date.toObject(message.expectedGraduationDate, options);
                            if (message.schoolName != null && message.hasOwnProperty("schoolName"))
                                object.schoolName = message.schoolName;
                            if (message.address != null && message.hasOwnProperty("address"))
                                object.address = $root.google.cloud.talent.v4beta1.Address.toObject(message.address, options);
                            if (message.degreeDescription != null && message.hasOwnProperty("degreeDescription")) {
                                object.degreeDescription = message.degreeDescription;
                                if (options.oneofs)
                                    object.degree = "degreeDescription";
                            }
                            if (message.structuredDegree != null && message.hasOwnProperty("structuredDegree")) {
                                object.structuredDegree = $root.google.cloud.talent.v4beta1.Degree.toObject(message.structuredDegree, options);
                                if (options.oneofs)
                                    object.degree = "structuredDegree";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.isCurrent != null && message.hasOwnProperty("isCurrent"))
                                object.isCurrent = $root.google.protobuf.BoolValue.toObject(message.isCurrent, options);
                            if (message.schoolNameSnippet != null && message.hasOwnProperty("schoolNameSnippet"))
                                object.schoolNameSnippet = message.schoolNameSnippet;
                            if (message.degreeSnippet != null && message.hasOwnProperty("degreeSnippet"))
                                object.degreeSnippet = message.degreeSnippet;
                            return object;
                        };
    
                        /**
                         * Converts this EducationRecord to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.EducationRecord
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EducationRecord.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return EducationRecord;
                    })();
    
                    v4beta1.Degree = (function() {
    
                        /**
                         * Properties of a Degree.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDegree
                         * @property {google.cloud.talent.v4beta1.DegreeType|null} [degreeType] Degree degreeType
                         * @property {string|null} [degreeName] Degree degreeName
                         * @property {Array.<string>|null} [fieldsOfStudy] Degree fieldsOfStudy
                         */
    
                        /**
                         * Constructs a new Degree.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Degree.
                         * @implements IDegree
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDegree=} [properties] Properties to set
                         */
                        function Degree(properties) {
                            this.fieldsOfStudy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Degree degreeType.
                         * @member {google.cloud.talent.v4beta1.DegreeType} degreeType
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @instance
                         */
                        Degree.prototype.degreeType = 0;
    
                        /**
                         * Degree degreeName.
                         * @member {string} degreeName
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @instance
                         */
                        Degree.prototype.degreeName = "";
    
                        /**
                         * Degree fieldsOfStudy.
                         * @member {Array.<string>} fieldsOfStudy
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @instance
                         */
                        Degree.prototype.fieldsOfStudy = $util.emptyArray;
    
                        /**
                         * Creates a new Degree instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDegree=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Degree} Degree instance
                         */
                        Degree.create = function create(properties) {
                            return new Degree(properties);
                        };
    
                        /**
                         * Encodes the specified Degree message. Does not implicitly {@link google.cloud.talent.v4beta1.Degree.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDegree} message Degree message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Degree.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.degreeType);
                            if (message.degreeName != null && message.hasOwnProperty("degreeName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.degreeName);
                            if (message.fieldsOfStudy != null && message.fieldsOfStudy.length)
                                for (var i = 0; i < message.fieldsOfStudy.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.fieldsOfStudy[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Degree message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Degree.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDegree} message Degree message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Degree.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Degree message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Degree} Degree
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Degree.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Degree();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.degreeType = reader.int32();
                                    break;
                                case 2:
                                    message.degreeName = reader.string();
                                    break;
                                case 3:
                                    if (!(message.fieldsOfStudy && message.fieldsOfStudy.length))
                                        message.fieldsOfStudy = [];
                                    message.fieldsOfStudy.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Degree message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Degree} Degree
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Degree.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Degree message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Degree.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                switch (message.degreeType) {
                                default:
                                    return "degreeType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.degreeName != null && message.hasOwnProperty("degreeName"))
                                if (!$util.isString(message.degreeName))
                                    return "degreeName: string expected";
                            if (message.fieldsOfStudy != null && message.hasOwnProperty("fieldsOfStudy")) {
                                if (!Array.isArray(message.fieldsOfStudy))
                                    return "fieldsOfStudy: array expected";
                                for (var i = 0; i < message.fieldsOfStudy.length; ++i)
                                    if (!$util.isString(message.fieldsOfStudy[i]))
                                        return "fieldsOfStudy: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Degree message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Degree} Degree
                         */
                        Degree.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Degree)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Degree();
                            switch (object.degreeType) {
                            case "DEGREE_TYPE_UNSPECIFIED":
                            case 0:
                                message.degreeType = 0;
                                break;
                            case "PRIMARY_EDUCATION":
                            case 1:
                                message.degreeType = 1;
                                break;
                            case "LOWER_SECONDARY_EDUCATION":
                            case 2:
                                message.degreeType = 2;
                                break;
                            case "UPPER_SECONDARY_EDUCATION":
                            case 3:
                                message.degreeType = 3;
                                break;
                            case "ADULT_REMEDIAL_EDUCATION":
                            case 4:
                                message.degreeType = 4;
                                break;
                            case "ASSOCIATES_OR_EQUIVALENT":
                            case 5:
                                message.degreeType = 5;
                                break;
                            case "BACHELORS_OR_EQUIVALENT":
                            case 6:
                                message.degreeType = 6;
                                break;
                            case "MASTERS_OR_EQUIVALENT":
                            case 7:
                                message.degreeType = 7;
                                break;
                            case "DOCTORAL_OR_EQUIVALENT":
                            case 8:
                                message.degreeType = 8;
                                break;
                            }
                            if (object.degreeName != null)
                                message.degreeName = String(object.degreeName);
                            if (object.fieldsOfStudy) {
                                if (!Array.isArray(object.fieldsOfStudy))
                                    throw TypeError(".google.cloud.talent.v4beta1.Degree.fieldsOfStudy: array expected");
                                message.fieldsOfStudy = [];
                                for (var i = 0; i < object.fieldsOfStudy.length; ++i)
                                    message.fieldsOfStudy[i] = String(object.fieldsOfStudy[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Degree message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @static
                         * @param {google.cloud.talent.v4beta1.Degree} message Degree
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Degree.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.fieldsOfStudy = [];
                            if (options.defaults) {
                                object.degreeType = options.enums === String ? "DEGREE_TYPE_UNSPECIFIED" : 0;
                                object.degreeName = "";
                            }
                            if (message.degreeType != null && message.hasOwnProperty("degreeType"))
                                object.degreeType = options.enums === String ? $root.google.cloud.talent.v4beta1.DegreeType[message.degreeType] : message.degreeType;
                            if (message.degreeName != null && message.hasOwnProperty("degreeName"))
                                object.degreeName = message.degreeName;
                            if (message.fieldsOfStudy && message.fieldsOfStudy.length) {
                                object.fieldsOfStudy = [];
                                for (var j = 0; j < message.fieldsOfStudy.length; ++j)
                                    object.fieldsOfStudy[j] = message.fieldsOfStudy[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Degree to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Degree
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Degree.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Degree;
                    })();
    
                    v4beta1.Activity = (function() {
    
                        /**
                         * Properties of an Activity.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IActivity
                         * @property {string|null} [displayName] Activity displayName
                         * @property {string|null} [description] Activity description
                         * @property {string|null} [uri] Activity uri
                         * @property {google.type.IDate|null} [createDate] Activity createDate
                         * @property {google.type.IDate|null} [updateDate] Activity updateDate
                         * @property {Array.<string>|null} [teamMembers] Activity teamMembers
                         * @property {Array.<google.cloud.talent.v4beta1.ISkill>|null} [skillsUsed] Activity skillsUsed
                         * @property {string|null} [activityNameSnippet] Activity activityNameSnippet
                         * @property {string|null} [activityDescriptionSnippet] Activity activityDescriptionSnippet
                         * @property {Array.<string>|null} [skillsUsedSnippet] Activity skillsUsedSnippet
                         */
    
                        /**
                         * Constructs a new Activity.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an Activity.
                         * @implements IActivity
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IActivity=} [properties] Properties to set
                         */
                        function Activity(properties) {
                            this.teamMembers = [];
                            this.skillsUsed = [];
                            this.skillsUsedSnippet = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Activity displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.displayName = "";
    
                        /**
                         * Activity description.
                         * @member {string} description
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.description = "";
    
                        /**
                         * Activity uri.
                         * @member {string} uri
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.uri = "";
    
                        /**
                         * Activity createDate.
                         * @member {google.type.IDate|null|undefined} createDate
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.createDate = null;
    
                        /**
                         * Activity updateDate.
                         * @member {google.type.IDate|null|undefined} updateDate
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.updateDate = null;
    
                        /**
                         * Activity teamMembers.
                         * @member {Array.<string>} teamMembers
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.teamMembers = $util.emptyArray;
    
                        /**
                         * Activity skillsUsed.
                         * @member {Array.<google.cloud.talent.v4beta1.ISkill>} skillsUsed
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.skillsUsed = $util.emptyArray;
    
                        /**
                         * Activity activityNameSnippet.
                         * @member {string} activityNameSnippet
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.activityNameSnippet = "";
    
                        /**
                         * Activity activityDescriptionSnippet.
                         * @member {string} activityDescriptionSnippet
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.activityDescriptionSnippet = "";
    
                        /**
                         * Activity skillsUsedSnippet.
                         * @member {Array.<string>} skillsUsedSnippet
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         */
                        Activity.prototype.skillsUsedSnippet = $util.emptyArray;
    
                        /**
                         * Creates a new Activity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {google.cloud.talent.v4beta1.IActivity=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Activity} Activity instance
                         */
                        Activity.create = function create(properties) {
                            return new Activity(properties);
                        };
    
                        /**
                         * Encodes the specified Activity message. Does not implicitly {@link google.cloud.talent.v4beta1.Activity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {google.cloud.talent.v4beta1.IActivity} message Activity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Activity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.createDate != null && message.hasOwnProperty("createDate"))
                                $root.google.type.Date.encode(message.createDate, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.updateDate != null && message.hasOwnProperty("updateDate"))
                                $root.google.type.Date.encode(message.updateDate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.teamMembers != null && message.teamMembers.length)
                                for (var i = 0; i < message.teamMembers.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.teamMembers[i]);
                            if (message.skillsUsed != null && message.skillsUsed.length)
                                for (var i = 0; i < message.skillsUsed.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Skill.encode(message.skillsUsed[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.activityNameSnippet != null && message.hasOwnProperty("activityNameSnippet"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.activityNameSnippet);
                            if (message.activityDescriptionSnippet != null && message.hasOwnProperty("activityDescriptionSnippet"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.activityDescriptionSnippet);
                            if (message.skillsUsedSnippet != null && message.skillsUsedSnippet.length)
                                for (var i = 0; i < message.skillsUsedSnippet.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.skillsUsedSnippet[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Activity message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Activity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {google.cloud.talent.v4beta1.IActivity} message Activity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Activity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Activity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Activity} Activity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Activity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Activity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.displayName = reader.string();
                                    break;
                                case 2:
                                    message.description = reader.string();
                                    break;
                                case 3:
                                    message.uri = reader.string();
                                    break;
                                case 4:
                                    message.createDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.updateDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    if (!(message.teamMembers && message.teamMembers.length))
                                        message.teamMembers = [];
                                    message.teamMembers.push(reader.string());
                                    break;
                                case 7:
                                    if (!(message.skillsUsed && message.skillsUsed.length))
                                        message.skillsUsed = [];
                                    message.skillsUsed.push($root.google.cloud.talent.v4beta1.Skill.decode(reader, reader.uint32()));
                                    break;
                                case 8:
                                    message.activityNameSnippet = reader.string();
                                    break;
                                case 9:
                                    message.activityDescriptionSnippet = reader.string();
                                    break;
                                case 10:
                                    if (!(message.skillsUsedSnippet && message.skillsUsedSnippet.length))
                                        message.skillsUsedSnippet = [];
                                    message.skillsUsedSnippet.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Activity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Activity} Activity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Activity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Activity message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Activity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.createDate != null && message.hasOwnProperty("createDate")) {
                                var error = $root.google.type.Date.verify(message.createDate);
                                if (error)
                                    return "createDate." + error;
                            }
                            if (message.updateDate != null && message.hasOwnProperty("updateDate")) {
                                var error = $root.google.type.Date.verify(message.updateDate);
                                if (error)
                                    return "updateDate." + error;
                            }
                            if (message.teamMembers != null && message.hasOwnProperty("teamMembers")) {
                                if (!Array.isArray(message.teamMembers))
                                    return "teamMembers: array expected";
                                for (var i = 0; i < message.teamMembers.length; ++i)
                                    if (!$util.isString(message.teamMembers[i]))
                                        return "teamMembers: string[] expected";
                            }
                            if (message.skillsUsed != null && message.hasOwnProperty("skillsUsed")) {
                                if (!Array.isArray(message.skillsUsed))
                                    return "skillsUsed: array expected";
                                for (var i = 0; i < message.skillsUsed.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Skill.verify(message.skillsUsed[i]);
                                    if (error)
                                        return "skillsUsed." + error;
                                }
                            }
                            if (message.activityNameSnippet != null && message.hasOwnProperty("activityNameSnippet"))
                                if (!$util.isString(message.activityNameSnippet))
                                    return "activityNameSnippet: string expected";
                            if (message.activityDescriptionSnippet != null && message.hasOwnProperty("activityDescriptionSnippet"))
                                if (!$util.isString(message.activityDescriptionSnippet))
                                    return "activityDescriptionSnippet: string expected";
                            if (message.skillsUsedSnippet != null && message.hasOwnProperty("skillsUsedSnippet")) {
                                if (!Array.isArray(message.skillsUsedSnippet))
                                    return "skillsUsedSnippet: array expected";
                                for (var i = 0; i < message.skillsUsedSnippet.length; ++i)
                                    if (!$util.isString(message.skillsUsedSnippet[i]))
                                        return "skillsUsedSnippet: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Activity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Activity} Activity
                         */
                        Activity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Activity)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Activity();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.createDate != null) {
                                if (typeof object.createDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Activity.createDate: object expected");
                                message.createDate = $root.google.type.Date.fromObject(object.createDate);
                            }
                            if (object.updateDate != null) {
                                if (typeof object.updateDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Activity.updateDate: object expected");
                                message.updateDate = $root.google.type.Date.fromObject(object.updateDate);
                            }
                            if (object.teamMembers) {
                                if (!Array.isArray(object.teamMembers))
                                    throw TypeError(".google.cloud.talent.v4beta1.Activity.teamMembers: array expected");
                                message.teamMembers = [];
                                for (var i = 0; i < object.teamMembers.length; ++i)
                                    message.teamMembers[i] = String(object.teamMembers[i]);
                            }
                            if (object.skillsUsed) {
                                if (!Array.isArray(object.skillsUsed))
                                    throw TypeError(".google.cloud.talent.v4beta1.Activity.skillsUsed: array expected");
                                message.skillsUsed = [];
                                for (var i = 0; i < object.skillsUsed.length; ++i) {
                                    if (typeof object.skillsUsed[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Activity.skillsUsed: object expected");
                                    message.skillsUsed[i] = $root.google.cloud.talent.v4beta1.Skill.fromObject(object.skillsUsed[i]);
                                }
                            }
                            if (object.activityNameSnippet != null)
                                message.activityNameSnippet = String(object.activityNameSnippet);
                            if (object.activityDescriptionSnippet != null)
                                message.activityDescriptionSnippet = String(object.activityDescriptionSnippet);
                            if (object.skillsUsedSnippet) {
                                if (!Array.isArray(object.skillsUsedSnippet))
                                    throw TypeError(".google.cloud.talent.v4beta1.Activity.skillsUsedSnippet: array expected");
                                message.skillsUsedSnippet = [];
                                for (var i = 0; i < object.skillsUsedSnippet.length; ++i)
                                    message.skillsUsedSnippet[i] = String(object.skillsUsedSnippet[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Activity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @static
                         * @param {google.cloud.talent.v4beta1.Activity} message Activity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Activity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.teamMembers = [];
                                object.skillsUsed = [];
                                object.skillsUsedSnippet = [];
                            }
                            if (options.defaults) {
                                object.displayName = "";
                                object.description = "";
                                object.uri = "";
                                object.createDate = null;
                                object.updateDate = null;
                                object.activityNameSnippet = "";
                                object.activityDescriptionSnippet = "";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.createDate != null && message.hasOwnProperty("createDate"))
                                object.createDate = $root.google.type.Date.toObject(message.createDate, options);
                            if (message.updateDate != null && message.hasOwnProperty("updateDate"))
                                object.updateDate = $root.google.type.Date.toObject(message.updateDate, options);
                            if (message.teamMembers && message.teamMembers.length) {
                                object.teamMembers = [];
                                for (var j = 0; j < message.teamMembers.length; ++j)
                                    object.teamMembers[j] = message.teamMembers[j];
                            }
                            if (message.skillsUsed && message.skillsUsed.length) {
                                object.skillsUsed = [];
                                for (var j = 0; j < message.skillsUsed.length; ++j)
                                    object.skillsUsed[j] = $root.google.cloud.talent.v4beta1.Skill.toObject(message.skillsUsed[j], options);
                            }
                            if (message.activityNameSnippet != null && message.hasOwnProperty("activityNameSnippet"))
                                object.activityNameSnippet = message.activityNameSnippet;
                            if (message.activityDescriptionSnippet != null && message.hasOwnProperty("activityDescriptionSnippet"))
                                object.activityDescriptionSnippet = message.activityDescriptionSnippet;
                            if (message.skillsUsedSnippet && message.skillsUsedSnippet.length) {
                                object.skillsUsedSnippet = [];
                                for (var j = 0; j < message.skillsUsedSnippet.length; ++j)
                                    object.skillsUsedSnippet[j] = message.skillsUsedSnippet[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Activity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Activity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Activity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Activity;
                    })();
    
                    v4beta1.Publication = (function() {
    
                        /**
                         * Properties of a Publication.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPublication
                         * @property {Array.<string>|null} [authors] Publication authors
                         * @property {string|null} [title] Publication title
                         * @property {string|null} [description] Publication description
                         * @property {string|null} [journal] Publication journal
                         * @property {string|null} [volume] Publication volume
                         * @property {string|null} [publisher] Publication publisher
                         * @property {google.type.IDate|null} [publicationDate] Publication publicationDate
                         * @property {string|null} [publicationType] Publication publicationType
                         * @property {string|null} [isbn] Publication isbn
                         */
    
                        /**
                         * Constructs a new Publication.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Publication.
                         * @implements IPublication
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPublication=} [properties] Properties to set
                         */
                        function Publication(properties) {
                            this.authors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Publication authors.
                         * @member {Array.<string>} authors
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.authors = $util.emptyArray;
    
                        /**
                         * Publication title.
                         * @member {string} title
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.title = "";
    
                        /**
                         * Publication description.
                         * @member {string} description
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.description = "";
    
                        /**
                         * Publication journal.
                         * @member {string} journal
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.journal = "";
    
                        /**
                         * Publication volume.
                         * @member {string} volume
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.volume = "";
    
                        /**
                         * Publication publisher.
                         * @member {string} publisher
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.publisher = "";
    
                        /**
                         * Publication publicationDate.
                         * @member {google.type.IDate|null|undefined} publicationDate
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.publicationDate = null;
    
                        /**
                         * Publication publicationType.
                         * @member {string} publicationType
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.publicationType = "";
    
                        /**
                         * Publication isbn.
                         * @member {string} isbn
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         */
                        Publication.prototype.isbn = "";
    
                        /**
                         * Creates a new Publication instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPublication=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Publication} Publication instance
                         */
                        Publication.create = function create(properties) {
                            return new Publication(properties);
                        };
    
                        /**
                         * Encodes the specified Publication message. Does not implicitly {@link google.cloud.talent.v4beta1.Publication.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPublication} message Publication message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Publication.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.authors != null && message.authors.length)
                                for (var i = 0; i < message.authors.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.authors[i]);
                            if (message.title != null && message.hasOwnProperty("title"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                            if (message.description != null && message.hasOwnProperty("description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.journal != null && message.hasOwnProperty("journal"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.journal);
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.volume);
                            if (message.publisher != null && message.hasOwnProperty("publisher"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.publisher);
                            if (message.publicationDate != null && message.hasOwnProperty("publicationDate"))
                                $root.google.type.Date.encode(message.publicationDate, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.publicationType != null && message.hasOwnProperty("publicationType"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.publicationType);
                            if (message.isbn != null && message.hasOwnProperty("isbn"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.isbn);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Publication message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Publication.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPublication} message Publication message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Publication.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Publication message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Publication} Publication
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Publication.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Publication();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.authors && message.authors.length))
                                        message.authors = [];
                                    message.authors.push(reader.string());
                                    break;
                                case 2:
                                    message.title = reader.string();
                                    break;
                                case 3:
                                    message.description = reader.string();
                                    break;
                                case 4:
                                    message.journal = reader.string();
                                    break;
                                case 5:
                                    message.volume = reader.string();
                                    break;
                                case 6:
                                    message.publisher = reader.string();
                                    break;
                                case 7:
                                    message.publicationDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.publicationType = reader.string();
                                    break;
                                case 9:
                                    message.isbn = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Publication message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Publication} Publication
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Publication.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Publication message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Publication.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.authors != null && message.hasOwnProperty("authors")) {
                                if (!Array.isArray(message.authors))
                                    return "authors: array expected";
                                for (var i = 0; i < message.authors.length; ++i)
                                    if (!$util.isString(message.authors[i]))
                                        return "authors: string[] expected";
                            }
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.journal != null && message.hasOwnProperty("journal"))
                                if (!$util.isString(message.journal))
                                    return "journal: string expected";
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                if (!$util.isString(message.volume))
                                    return "volume: string expected";
                            if (message.publisher != null && message.hasOwnProperty("publisher"))
                                if (!$util.isString(message.publisher))
                                    return "publisher: string expected";
                            if (message.publicationDate != null && message.hasOwnProperty("publicationDate")) {
                                var error = $root.google.type.Date.verify(message.publicationDate);
                                if (error)
                                    return "publicationDate." + error;
                            }
                            if (message.publicationType != null && message.hasOwnProperty("publicationType"))
                                if (!$util.isString(message.publicationType))
                                    return "publicationType: string expected";
                            if (message.isbn != null && message.hasOwnProperty("isbn"))
                                if (!$util.isString(message.isbn))
                                    return "isbn: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Publication message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Publication} Publication
                         */
                        Publication.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Publication)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Publication();
                            if (object.authors) {
                                if (!Array.isArray(object.authors))
                                    throw TypeError(".google.cloud.talent.v4beta1.Publication.authors: array expected");
                                message.authors = [];
                                for (var i = 0; i < object.authors.length; ++i)
                                    message.authors[i] = String(object.authors[i]);
                            }
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.journal != null)
                                message.journal = String(object.journal);
                            if (object.volume != null)
                                message.volume = String(object.volume);
                            if (object.publisher != null)
                                message.publisher = String(object.publisher);
                            if (object.publicationDate != null) {
                                if (typeof object.publicationDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Publication.publicationDate: object expected");
                                message.publicationDate = $root.google.type.Date.fromObject(object.publicationDate);
                            }
                            if (object.publicationType != null)
                                message.publicationType = String(object.publicationType);
                            if (object.isbn != null)
                                message.isbn = String(object.isbn);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Publication message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @static
                         * @param {google.cloud.talent.v4beta1.Publication} message Publication
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Publication.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.authors = [];
                            if (options.defaults) {
                                object.title = "";
                                object.description = "";
                                object.journal = "";
                                object.volume = "";
                                object.publisher = "";
                                object.publicationDate = null;
                                object.publicationType = "";
                                object.isbn = "";
                            }
                            if (message.authors && message.authors.length) {
                                object.authors = [];
                                for (var j = 0; j < message.authors.length; ++j)
                                    object.authors[j] = message.authors[j];
                            }
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.journal != null && message.hasOwnProperty("journal"))
                                object.journal = message.journal;
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                object.volume = message.volume;
                            if (message.publisher != null && message.hasOwnProperty("publisher"))
                                object.publisher = message.publisher;
                            if (message.publicationDate != null && message.hasOwnProperty("publicationDate"))
                                object.publicationDate = $root.google.type.Date.toObject(message.publicationDate, options);
                            if (message.publicationType != null && message.hasOwnProperty("publicationType"))
                                object.publicationType = message.publicationType;
                            if (message.isbn != null && message.hasOwnProperty("isbn"))
                                object.isbn = message.isbn;
                            return object;
                        };
    
                        /**
                         * Converts this Publication to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Publication
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Publication.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Publication;
                    })();
    
                    v4beta1.Patent = (function() {
    
                        /**
                         * Properties of a Patent.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IPatent
                         * @property {string|null} [displayName] Patent displayName
                         * @property {Array.<string>|null} [inventors] Patent inventors
                         * @property {string|null} [patentStatus] Patent patentStatus
                         * @property {google.type.IDate|null} [patentStatusDate] Patent patentStatusDate
                         * @property {google.type.IDate|null} [patentFilingDate] Patent patentFilingDate
                         * @property {string|null} [patentOffice] Patent patentOffice
                         * @property {string|null} [patentNumber] Patent patentNumber
                         * @property {string|null} [patentDescription] Patent patentDescription
                         * @property {Array.<google.cloud.talent.v4beta1.ISkill>|null} [skillsUsed] Patent skillsUsed
                         */
    
                        /**
                         * Constructs a new Patent.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Patent.
                         * @implements IPatent
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IPatent=} [properties] Properties to set
                         */
                        function Patent(properties) {
                            this.inventors = [];
                            this.skillsUsed = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Patent displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.displayName = "";
    
                        /**
                         * Patent inventors.
                         * @member {Array.<string>} inventors
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.inventors = $util.emptyArray;
    
                        /**
                         * Patent patentStatus.
                         * @member {string} patentStatus
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentStatus = "";
    
                        /**
                         * Patent patentStatusDate.
                         * @member {google.type.IDate|null|undefined} patentStatusDate
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentStatusDate = null;
    
                        /**
                         * Patent patentFilingDate.
                         * @member {google.type.IDate|null|undefined} patentFilingDate
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentFilingDate = null;
    
                        /**
                         * Patent patentOffice.
                         * @member {string} patentOffice
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentOffice = "";
    
                        /**
                         * Patent patentNumber.
                         * @member {string} patentNumber
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentNumber = "";
    
                        /**
                         * Patent patentDescription.
                         * @member {string} patentDescription
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.patentDescription = "";
    
                        /**
                         * Patent skillsUsed.
                         * @member {Array.<google.cloud.talent.v4beta1.ISkill>} skillsUsed
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         */
                        Patent.prototype.skillsUsed = $util.emptyArray;
    
                        /**
                         * Creates a new Patent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPatent=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Patent} Patent instance
                         */
                        Patent.create = function create(properties) {
                            return new Patent(properties);
                        };
    
                        /**
                         * Encodes the specified Patent message. Does not implicitly {@link google.cloud.talent.v4beta1.Patent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPatent} message Patent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Patent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.inventors != null && message.inventors.length)
                                for (var i = 0; i < message.inventors.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.inventors[i]);
                            if (message.patentStatus != null && message.hasOwnProperty("patentStatus"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.patentStatus);
                            if (message.patentStatusDate != null && message.hasOwnProperty("patentStatusDate"))
                                $root.google.type.Date.encode(message.patentStatusDate, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.patentFilingDate != null && message.hasOwnProperty("patentFilingDate"))
                                $root.google.type.Date.encode(message.patentFilingDate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.patentOffice != null && message.hasOwnProperty("patentOffice"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.patentOffice);
                            if (message.patentNumber != null && message.hasOwnProperty("patentNumber"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.patentNumber);
                            if (message.patentDescription != null && message.hasOwnProperty("patentDescription"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.patentDescription);
                            if (message.skillsUsed != null && message.skillsUsed.length)
                                for (var i = 0; i < message.skillsUsed.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Skill.encode(message.skillsUsed[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Patent message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Patent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {google.cloud.talent.v4beta1.IPatent} message Patent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Patent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Patent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Patent} Patent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Patent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Patent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.displayName = reader.string();
                                    break;
                                case 2:
                                    if (!(message.inventors && message.inventors.length))
                                        message.inventors = [];
                                    message.inventors.push(reader.string());
                                    break;
                                case 3:
                                    message.patentStatus = reader.string();
                                    break;
                                case 4:
                                    message.patentStatusDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.patentFilingDate = $root.google.type.Date.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.patentOffice = reader.string();
                                    break;
                                case 7:
                                    message.patentNumber = reader.string();
                                    break;
                                case 8:
                                    message.patentDescription = reader.string();
                                    break;
                                case 9:
                                    if (!(message.skillsUsed && message.skillsUsed.length))
                                        message.skillsUsed = [];
                                    message.skillsUsed.push($root.google.cloud.talent.v4beta1.Skill.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Patent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Patent} Patent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Patent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Patent message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Patent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.inventors != null && message.hasOwnProperty("inventors")) {
                                if (!Array.isArray(message.inventors))
                                    return "inventors: array expected";
                                for (var i = 0; i < message.inventors.length; ++i)
                                    if (!$util.isString(message.inventors[i]))
                                        return "inventors: string[] expected";
                            }
                            if (message.patentStatus != null && message.hasOwnProperty("patentStatus"))
                                if (!$util.isString(message.patentStatus))
                                    return "patentStatus: string expected";
                            if (message.patentStatusDate != null && message.hasOwnProperty("patentStatusDate")) {
                                var error = $root.google.type.Date.verify(message.patentStatusDate);
                                if (error)
                                    return "patentStatusDate." + error;
                            }
                            if (message.patentFilingDate != null && message.hasOwnProperty("patentFilingDate")) {
                                var error = $root.google.type.Date.verify(message.patentFilingDate);
                                if (error)
                                    return "patentFilingDate." + error;
                            }
                            if (message.patentOffice != null && message.hasOwnProperty("patentOffice"))
                                if (!$util.isString(message.patentOffice))
                                    return "patentOffice: string expected";
                            if (message.patentNumber != null && message.hasOwnProperty("patentNumber"))
                                if (!$util.isString(message.patentNumber))
                                    return "patentNumber: string expected";
                            if (message.patentDescription != null && message.hasOwnProperty("patentDescription"))
                                if (!$util.isString(message.patentDescription))
                                    return "patentDescription: string expected";
                            if (message.skillsUsed != null && message.hasOwnProperty("skillsUsed")) {
                                if (!Array.isArray(message.skillsUsed))
                                    return "skillsUsed: array expected";
                                for (var i = 0; i < message.skillsUsed.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Skill.verify(message.skillsUsed[i]);
                                    if (error)
                                        return "skillsUsed." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Patent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Patent} Patent
                         */
                        Patent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Patent)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Patent();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.inventors) {
                                if (!Array.isArray(object.inventors))
                                    throw TypeError(".google.cloud.talent.v4beta1.Patent.inventors: array expected");
                                message.inventors = [];
                                for (var i = 0; i < object.inventors.length; ++i)
                                    message.inventors[i] = String(object.inventors[i]);
                            }
                            if (object.patentStatus != null)
                                message.patentStatus = String(object.patentStatus);
                            if (object.patentStatusDate != null) {
                                if (typeof object.patentStatusDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Patent.patentStatusDate: object expected");
                                message.patentStatusDate = $root.google.type.Date.fromObject(object.patentStatusDate);
                            }
                            if (object.patentFilingDate != null) {
                                if (typeof object.patentFilingDate !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.Patent.patentFilingDate: object expected");
                                message.patentFilingDate = $root.google.type.Date.fromObject(object.patentFilingDate);
                            }
                            if (object.patentOffice != null)
                                message.patentOffice = String(object.patentOffice);
                            if (object.patentNumber != null)
                                message.patentNumber = String(object.patentNumber);
                            if (object.patentDescription != null)
                                message.patentDescription = String(object.patentDescription);
                            if (object.skillsUsed) {
                                if (!Array.isArray(object.skillsUsed))
                                    throw TypeError(".google.cloud.talent.v4beta1.Patent.skillsUsed: array expected");
                                message.skillsUsed = [];
                                for (var i = 0; i < object.skillsUsed.length; ++i) {
                                    if (typeof object.skillsUsed[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.Patent.skillsUsed: object expected");
                                    message.skillsUsed[i] = $root.google.cloud.talent.v4beta1.Skill.fromObject(object.skillsUsed[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Patent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @static
                         * @param {google.cloud.talent.v4beta1.Patent} message Patent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Patent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.inventors = [];
                                object.skillsUsed = [];
                            }
                            if (options.defaults) {
                                object.displayName = "";
                                object.patentStatus = "";
                                object.patentStatusDate = null;
                                object.patentFilingDate = null;
                                object.patentOffice = "";
                                object.patentNumber = "";
                                object.patentDescription = "";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.inventors && message.inventors.length) {
                                object.inventors = [];
                                for (var j = 0; j < message.inventors.length; ++j)
                                    object.inventors[j] = message.inventors[j];
                            }
                            if (message.patentStatus != null && message.hasOwnProperty("patentStatus"))
                                object.patentStatus = message.patentStatus;
                            if (message.patentStatusDate != null && message.hasOwnProperty("patentStatusDate"))
                                object.patentStatusDate = $root.google.type.Date.toObject(message.patentStatusDate, options);
                            if (message.patentFilingDate != null && message.hasOwnProperty("patentFilingDate"))
                                object.patentFilingDate = $root.google.type.Date.toObject(message.patentFilingDate, options);
                            if (message.patentOffice != null && message.hasOwnProperty("patentOffice"))
                                object.patentOffice = message.patentOffice;
                            if (message.patentNumber != null && message.hasOwnProperty("patentNumber"))
                                object.patentNumber = message.patentNumber;
                            if (message.patentDescription != null && message.hasOwnProperty("patentDescription"))
                                object.patentDescription = message.patentDescription;
                            if (message.skillsUsed && message.skillsUsed.length) {
                                object.skillsUsed = [];
                                for (var j = 0; j < message.skillsUsed.length; ++j)
                                    object.skillsUsed[j] = $root.google.cloud.talent.v4beta1.Skill.toObject(message.skillsUsed[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Patent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Patent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Patent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Patent;
                    })();
    
                    v4beta1.TenantService = (function() {
    
                        /**
                         * Constructs a new TenantService service.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a TenantService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function TenantService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (TenantService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = TenantService;
    
                        /**
                         * Creates new TenantService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {TenantService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        TenantService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.TenantService#createTenant}.
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @typedef CreateTenantCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Tenant} [response] Tenant
                         */
    
                        /**
                         * Calls CreateTenant.
                         * @function createTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest} request CreateTenantRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.TenantService.CreateTenantCallback} callback Node-style callback called with the error, if any, and Tenant
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(TenantService.prototype.createTenant = function createTenant(request, callback) {
                            return this.rpcCall(createTenant, $root.google.cloud.talent.v4beta1.CreateTenantRequest, $root.google.cloud.talent.v4beta1.Tenant, request, callback);
                        }, "name", { value: "CreateTenant" });
    
                        /**
                         * Calls CreateTenant.
                         * @function createTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest} request CreateTenantRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Tenant>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.TenantService#getTenant}.
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @typedef GetTenantCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Tenant} [response] Tenant
                         */
    
                        /**
                         * Calls GetTenant.
                         * @function getTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest} request GetTenantRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.TenantService.GetTenantCallback} callback Node-style callback called with the error, if any, and Tenant
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(TenantService.prototype.getTenant = function getTenant(request, callback) {
                            return this.rpcCall(getTenant, $root.google.cloud.talent.v4beta1.GetTenantRequest, $root.google.cloud.talent.v4beta1.Tenant, request, callback);
                        }, "name", { value: "GetTenant" });
    
                        /**
                         * Calls GetTenant.
                         * @function getTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest} request GetTenantRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Tenant>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.TenantService#updateTenant}.
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @typedef UpdateTenantCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.Tenant} [response] Tenant
                         */
    
                        /**
                         * Calls UpdateTenant.
                         * @function updateTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest} request UpdateTenantRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.TenantService.UpdateTenantCallback} callback Node-style callback called with the error, if any, and Tenant
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(TenantService.prototype.updateTenant = function updateTenant(request, callback) {
                            return this.rpcCall(updateTenant, $root.google.cloud.talent.v4beta1.UpdateTenantRequest, $root.google.cloud.talent.v4beta1.Tenant, request, callback);
                        }, "name", { value: "UpdateTenant" });
    
                        /**
                         * Calls UpdateTenant.
                         * @function updateTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest} request UpdateTenantRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.Tenant>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.TenantService#deleteTenant}.
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @typedef DeleteTenantCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTenant.
                         * @function deleteTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest} request DeleteTenantRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.TenantService.DeleteTenantCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(TenantService.prototype.deleteTenant = function deleteTenant(request, callback) {
                            return this.rpcCall(deleteTenant, $root.google.cloud.talent.v4beta1.DeleteTenantRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTenant" });
    
                        /**
                         * Calls DeleteTenant.
                         * @function deleteTenant
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest} request DeleteTenantRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.talent.v4beta1.TenantService#listTenants}.
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @typedef ListTenantsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.talent.v4beta1.ListTenantsResponse} [response] ListTenantsResponse
                         */
    
                        /**
                         * Calls ListTenants.
                         * @function listTenants
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest} request ListTenantsRequest message or plain object
                         * @param {google.cloud.talent.v4beta1.TenantService.ListTenantsCallback} callback Node-style callback called with the error, if any, and ListTenantsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(TenantService.prototype.listTenants = function listTenants(request, callback) {
                            return this.rpcCall(listTenants, $root.google.cloud.talent.v4beta1.ListTenantsRequest, $root.google.cloud.talent.v4beta1.ListTenantsResponse, request, callback);
                        }, "name", { value: "ListTenants" });
    
                        /**
                         * Calls ListTenants.
                         * @function listTenants
                         * @memberof google.cloud.talent.v4beta1.TenantService
                         * @instance
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest} request ListTenantsRequest message or plain object
                         * @returns {Promise<google.cloud.talent.v4beta1.ListTenantsResponse>} Promise
                         * @variation 2
                         */
    
                        return TenantService;
                    })();
    
                    v4beta1.CreateTenantRequest = (function() {
    
                        /**
                         * Properties of a CreateTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ICreateTenantRequest
                         * @property {string|null} [parent] CreateTenantRequest parent
                         * @property {google.cloud.talent.v4beta1.ITenant|null} [tenant] CreateTenantRequest tenant
                         */
    
                        /**
                         * Constructs a new CreateTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a CreateTenantRequest.
                         * @implements ICreateTenantRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest=} [properties] Properties to set
                         */
                        function CreateTenantRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTenantRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @instance
                         */
                        CreateTenantRequest.prototype.parent = "";
    
                        /**
                         * CreateTenantRequest tenant.
                         * @member {google.cloud.talent.v4beta1.ITenant|null|undefined} tenant
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @instance
                         */
                        CreateTenantRequest.prototype.tenant = null;
    
                        /**
                         * Creates a new CreateTenantRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.CreateTenantRequest} CreateTenantRequest instance
                         */
                        CreateTenantRequest.create = function create(properties) {
                            return new CreateTenantRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTenantRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.CreateTenantRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest} message CreateTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTenantRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.tenant != null && message.hasOwnProperty("tenant"))
                                $root.google.cloud.talent.v4beta1.Tenant.encode(message.tenant, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTenantRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.CreateTenantRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ICreateTenantRequest} message CreateTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTenantRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTenantRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.CreateTenantRequest} CreateTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTenantRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.CreateTenantRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.tenant = $root.google.cloud.talent.v4beta1.Tenant.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTenantRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.CreateTenantRequest} CreateTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTenantRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTenantRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTenantRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.tenant != null && message.hasOwnProperty("tenant")) {
                                var error = $root.google.cloud.talent.v4beta1.Tenant.verify(message.tenant);
                                if (error)
                                    return "tenant." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTenantRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.CreateTenantRequest} CreateTenantRequest
                         */
                        CreateTenantRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.CreateTenantRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.CreateTenantRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.tenant != null) {
                                if (typeof object.tenant !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.CreateTenantRequest.tenant: object expected");
                                message.tenant = $root.google.cloud.talent.v4beta1.Tenant.fromObject(object.tenant);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTenantRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.CreateTenantRequest} message CreateTenantRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTenantRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.tenant = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.tenant != null && message.hasOwnProperty("tenant"))
                                object.tenant = $root.google.cloud.talent.v4beta1.Tenant.toObject(message.tenant, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateTenantRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.CreateTenantRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTenantRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateTenantRequest;
                    })();
    
                    v4beta1.GetTenantRequest = (function() {
    
                        /**
                         * Properties of a GetTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IGetTenantRequest
                         * @property {string|null} [name] GetTenantRequest name
                         */
    
                        /**
                         * Constructs a new GetTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a GetTenantRequest.
                         * @implements IGetTenantRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest=} [properties] Properties to set
                         */
                        function GetTenantRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTenantRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @instance
                         */
                        GetTenantRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetTenantRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.GetTenantRequest} GetTenantRequest instance
                         */
                        GetTenantRequest.create = function create(properties) {
                            return new GetTenantRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTenantRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.GetTenantRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest} message GetTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTenantRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTenantRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.GetTenantRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IGetTenantRequest} message GetTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTenantRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTenantRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.GetTenantRequest} GetTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTenantRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.GetTenantRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTenantRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.GetTenantRequest} GetTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTenantRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTenantRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTenantRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetTenantRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.GetTenantRequest} GetTenantRequest
                         */
                        GetTenantRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.GetTenantRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.GetTenantRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTenantRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.GetTenantRequest} message GetTenantRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTenantRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetTenantRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.GetTenantRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTenantRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetTenantRequest;
                    })();
    
                    v4beta1.UpdateTenantRequest = (function() {
    
                        /**
                         * Properties of an UpdateTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IUpdateTenantRequest
                         * @property {google.cloud.talent.v4beta1.ITenant|null} [tenant] UpdateTenantRequest tenant
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateTenantRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents an UpdateTenantRequest.
                         * @implements IUpdateTenantRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest=} [properties] Properties to set
                         */
                        function UpdateTenantRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateTenantRequest tenant.
                         * @member {google.cloud.talent.v4beta1.ITenant|null|undefined} tenant
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @instance
                         */
                        UpdateTenantRequest.prototype.tenant = null;
    
                        /**
                         * UpdateTenantRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @instance
                         */
                        UpdateTenantRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateTenantRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.UpdateTenantRequest} UpdateTenantRequest instance
                         */
                        UpdateTenantRequest.create = function create(properties) {
                            return new UpdateTenantRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateTenantRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateTenantRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest} message UpdateTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTenantRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tenant != null && message.hasOwnProperty("tenant"))
                                $root.google.cloud.talent.v4beta1.Tenant.encode(message.tenant, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateTenantRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.UpdateTenantRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IUpdateTenantRequest} message UpdateTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTenantRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateTenantRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.UpdateTenantRequest} UpdateTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTenantRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.UpdateTenantRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.tenant = $root.google.cloud.talent.v4beta1.Tenant.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateTenantRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.UpdateTenantRequest} UpdateTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTenantRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateTenantRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateTenantRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tenant != null && message.hasOwnProperty("tenant")) {
                                var error = $root.google.cloud.talent.v4beta1.Tenant.verify(message.tenant);
                                if (error)
                                    return "tenant." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateTenantRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.UpdateTenantRequest} UpdateTenantRequest
                         */
                        UpdateTenantRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.UpdateTenantRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.UpdateTenantRequest();
                            if (object.tenant != null) {
                                if (typeof object.tenant !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateTenantRequest.tenant: object expected");
                                message.tenant = $root.google.cloud.talent.v4beta1.Tenant.fromObject(object.tenant);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.UpdateTenantRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateTenantRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.UpdateTenantRequest} message UpdateTenantRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateTenantRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.tenant = null;
                                object.updateMask = null;
                            }
                            if (message.tenant != null && message.hasOwnProperty("tenant"))
                                object.tenant = $root.google.cloud.talent.v4beta1.Tenant.toObject(message.tenant, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateTenantRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.UpdateTenantRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateTenantRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateTenantRequest;
                    })();
    
                    v4beta1.DeleteTenantRequest = (function() {
    
                        /**
                         * Properties of a DeleteTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IDeleteTenantRequest
                         * @property {string|null} [name] DeleteTenantRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTenantRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a DeleteTenantRequest.
                         * @implements IDeleteTenantRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest=} [properties] Properties to set
                         */
                        function DeleteTenantRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTenantRequest name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @instance
                         */
                        DeleteTenantRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTenantRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.DeleteTenantRequest} DeleteTenantRequest instance
                         */
                        DeleteTenantRequest.create = function create(properties) {
                            return new DeleteTenantRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTenantRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteTenantRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest} message DeleteTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTenantRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTenantRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.DeleteTenantRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IDeleteTenantRequest} message DeleteTenantRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTenantRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTenantRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.DeleteTenantRequest} DeleteTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTenantRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.DeleteTenantRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTenantRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.DeleteTenantRequest} DeleteTenantRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTenantRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTenantRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTenantRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTenantRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.DeleteTenantRequest} DeleteTenantRequest
                         */
                        DeleteTenantRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.DeleteTenantRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.DeleteTenantRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTenantRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.DeleteTenantRequest} message DeleteTenantRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTenantRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTenantRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.DeleteTenantRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTenantRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteTenantRequest;
                    })();
    
                    v4beta1.ListTenantsRequest = (function() {
    
                        /**
                         * Properties of a ListTenantsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListTenantsRequest
                         * @property {string|null} [parent] ListTenantsRequest parent
                         * @property {string|null} [pageToken] ListTenantsRequest pageToken
                         * @property {number|null} [pageSize] ListTenantsRequest pageSize
                         */
    
                        /**
                         * Constructs a new ListTenantsRequest.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListTenantsRequest.
                         * @implements IListTenantsRequest
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest=} [properties] Properties to set
                         */
                        function ListTenantsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTenantsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @instance
                         */
                        ListTenantsRequest.prototype.parent = "";
    
                        /**
                         * ListTenantsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @instance
                         */
                        ListTenantsRequest.prototype.pageToken = "";
    
                        /**
                         * ListTenantsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @instance
                         */
                        ListTenantsRequest.prototype.pageSize = 0;
    
                        /**
                         * Creates a new ListTenantsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListTenantsRequest} ListTenantsRequest instance
                         */
                        ListTenantsRequest.create = function create(properties) {
                            return new ListTenantsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTenantsRequest message. Does not implicitly {@link google.cloud.talent.v4beta1.ListTenantsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest} message ListTenantsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTenantsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTenantsRequest message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListTenantsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsRequest} message ListTenantsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTenantsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTenantsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListTenantsRequest} ListTenantsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTenantsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListTenantsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageToken = reader.string();
                                    break;
                                case 3:
                                    message.pageSize = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTenantsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListTenantsRequest} ListTenantsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTenantsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTenantsRequest message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTenantsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTenantsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListTenantsRequest} ListTenantsRequest
                         */
                        ListTenantsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListTenantsRequest)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListTenantsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTenantsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListTenantsRequest} message ListTenantsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTenantsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageToken = "";
                                object.pageSize = 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            return object;
                        };
    
                        /**
                         * Converts this ListTenantsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListTenantsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTenantsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListTenantsRequest;
                    })();
    
                    v4beta1.ListTenantsResponse = (function() {
    
                        /**
                         * Properties of a ListTenantsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface IListTenantsResponse
                         * @property {Array.<google.cloud.talent.v4beta1.ITenant>|null} [tenants] ListTenantsResponse tenants
                         * @property {string|null} [nextPageToken] ListTenantsResponse nextPageToken
                         * @property {google.cloud.talent.v4beta1.IResponseMetadata|null} [metadata] ListTenantsResponse metadata
                         */
    
                        /**
                         * Constructs a new ListTenantsResponse.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a ListTenantsResponse.
                         * @implements IListTenantsResponse
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.IListTenantsResponse=} [properties] Properties to set
                         */
                        function ListTenantsResponse(properties) {
                            this.tenants = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTenantsResponse tenants.
                         * @member {Array.<google.cloud.talent.v4beta1.ITenant>} tenants
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @instance
                         */
                        ListTenantsResponse.prototype.tenants = $util.emptyArray;
    
                        /**
                         * ListTenantsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @instance
                         */
                        ListTenantsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListTenantsResponse metadata.
                         * @member {google.cloud.talent.v4beta1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @instance
                         */
                        ListTenantsResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new ListTenantsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsResponse=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.ListTenantsResponse} ListTenantsResponse instance
                         */
                        ListTenantsResponse.create = function create(properties) {
                            return new ListTenantsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTenantsResponse message. Does not implicitly {@link google.cloud.talent.v4beta1.ListTenantsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsResponse} message ListTenantsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTenantsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tenants != null && message.tenants.length)
                                for (var i = 0; i < message.tenants.length; ++i)
                                    $root.google.cloud.talent.v4beta1.Tenant.encode(message.tenants[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                $root.google.cloud.talent.v4beta1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTenantsResponse message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.ListTenantsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.IListTenantsResponse} message ListTenantsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTenantsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTenantsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.ListTenantsResponse} ListTenantsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTenantsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.ListTenantsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.tenants && message.tenants.length))
                                        message.tenants = [];
                                    message.tenants.push($root.google.cloud.talent.v4beta1.Tenant.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTenantsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.ListTenantsResponse} ListTenantsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTenantsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTenantsResponse message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTenantsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tenants != null && message.hasOwnProperty("tenants")) {
                                if (!Array.isArray(message.tenants))
                                    return "tenants: array expected";
                                for (var i = 0; i < message.tenants.length; ++i) {
                                    var error = $root.google.cloud.talent.v4beta1.Tenant.verify(message.tenants[i]);
                                    if (error)
                                        return "tenants." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.talent.v4beta1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListTenantsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.ListTenantsResponse} ListTenantsResponse
                         */
                        ListTenantsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.ListTenantsResponse)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.ListTenantsResponse();
                            if (object.tenants) {
                                if (!Array.isArray(object.tenants))
                                    throw TypeError(".google.cloud.talent.v4beta1.ListTenantsResponse.tenants: array expected");
                                message.tenants = [];
                                for (var i = 0; i < object.tenants.length; ++i) {
                                    if (typeof object.tenants[i] !== "object")
                                        throw TypeError(".google.cloud.talent.v4beta1.ListTenantsResponse.tenants: object expected");
                                    message.tenants[i] = $root.google.cloud.talent.v4beta1.Tenant.fromObject(object.tenants[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.talent.v4beta1.ListTenantsResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTenantsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @static
                         * @param {google.cloud.talent.v4beta1.ListTenantsResponse} message ListTenantsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTenantsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tenants = [];
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.metadata = null;
                            }
                            if (message.tenants && message.tenants.length) {
                                object.tenants = [];
                                for (var j = 0; j < message.tenants.length; ++j)
                                    object.tenants[j] = $root.google.cloud.talent.v4beta1.Tenant.toObject(message.tenants[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.talent.v4beta1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListTenantsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.ListTenantsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTenantsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListTenantsResponse;
                    })();
    
                    v4beta1.Tenant = (function() {
    
                        /**
                         * Properties of a Tenant.
                         * @memberof google.cloud.talent.v4beta1
                         * @interface ITenant
                         * @property {string|null} [name] Tenant name
                         * @property {string|null} [externalId] Tenant externalId
                         * @property {google.cloud.talent.v4beta1.Tenant.DataUsageType|null} [usageType] Tenant usageType
                         * @property {Array.<string>|null} [keywordSearchableProfileCustomAttributes] Tenant keywordSearchableProfileCustomAttributes
                         */
    
                        /**
                         * Constructs a new Tenant.
                         * @memberof google.cloud.talent.v4beta1
                         * @classdesc Represents a Tenant.
                         * @implements ITenant
                         * @constructor
                         * @param {google.cloud.talent.v4beta1.ITenant=} [properties] Properties to set
                         */
                        function Tenant(properties) {
                            this.keywordSearchableProfileCustomAttributes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Tenant name.
                         * @member {string} name
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @instance
                         */
                        Tenant.prototype.name = "";
    
                        /**
                         * Tenant externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @instance
                         */
                        Tenant.prototype.externalId = "";
    
                        /**
                         * Tenant usageType.
                         * @member {google.cloud.talent.v4beta1.Tenant.DataUsageType} usageType
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @instance
                         */
                        Tenant.prototype.usageType = 0;
    
                        /**
                         * Tenant keywordSearchableProfileCustomAttributes.
                         * @member {Array.<string>} keywordSearchableProfileCustomAttributes
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @instance
                         */
                        Tenant.prototype.keywordSearchableProfileCustomAttributes = $util.emptyArray;
    
                        /**
                         * Creates a new Tenant instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITenant=} [properties] Properties to set
                         * @returns {google.cloud.talent.v4beta1.Tenant} Tenant instance
                         */
                        Tenant.create = function create(properties) {
                            return new Tenant(properties);
                        };
    
                        /**
                         * Encodes the specified Tenant message. Does not implicitly {@link google.cloud.talent.v4beta1.Tenant.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITenant} message Tenant message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tenant.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.externalId);
                            if (message.usageType != null && message.hasOwnProperty("usageType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.usageType);
                            if (message.keywordSearchableProfileCustomAttributes != null && message.keywordSearchableProfileCustomAttributes.length)
                                for (var i = 0; i < message.keywordSearchableProfileCustomAttributes.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.keywordSearchableProfileCustomAttributes[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Tenant message, length delimited. Does not implicitly {@link google.cloud.talent.v4beta1.Tenant.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {google.cloud.talent.v4beta1.ITenant} message Tenant message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tenant.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Tenant message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.talent.v4beta1.Tenant} Tenant
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tenant.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.talent.v4beta1.Tenant();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.externalId = reader.string();
                                    break;
                                case 3:
                                    message.usageType = reader.int32();
                                    break;
                                case 4:
                                    if (!(message.keywordSearchableProfileCustomAttributes && message.keywordSearchableProfileCustomAttributes.length))
                                        message.keywordSearchableProfileCustomAttributes = [];
                                    message.keywordSearchableProfileCustomAttributes.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Tenant message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.talent.v4beta1.Tenant} Tenant
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tenant.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Tenant message.
                         * @function verify
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Tenant.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.usageType != null && message.hasOwnProperty("usageType"))
                                switch (message.usageType) {
                                default:
                                    return "usageType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.keywordSearchableProfileCustomAttributes != null && message.hasOwnProperty("keywordSearchableProfileCustomAttributes")) {
                                if (!Array.isArray(message.keywordSearchableProfileCustomAttributes))
                                    return "keywordSearchableProfileCustomAttributes: array expected";
                                for (var i = 0; i < message.keywordSearchableProfileCustomAttributes.length; ++i)
                                    if (!$util.isString(message.keywordSearchableProfileCustomAttributes[i]))
                                        return "keywordSearchableProfileCustomAttributes: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Tenant message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.talent.v4beta1.Tenant} Tenant
                         */
                        Tenant.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.talent.v4beta1.Tenant)
                                return object;
                            var message = new $root.google.cloud.talent.v4beta1.Tenant();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            switch (object.usageType) {
                            case "DATA_USAGE_TYPE_UNSPECIFIED":
                            case 0:
                                message.usageType = 0;
                                break;
                            case "AGGREGATED":
                            case 1:
                                message.usageType = 1;
                                break;
                            case "ISOLATED":
                            case 2:
                                message.usageType = 2;
                                break;
                            }
                            if (object.keywordSearchableProfileCustomAttributes) {
                                if (!Array.isArray(object.keywordSearchableProfileCustomAttributes))
                                    throw TypeError(".google.cloud.talent.v4beta1.Tenant.keywordSearchableProfileCustomAttributes: array expected");
                                message.keywordSearchableProfileCustomAttributes = [];
                                for (var i = 0; i < object.keywordSearchableProfileCustomAttributes.length; ++i)
                                    message.keywordSearchableProfileCustomAttributes[i] = String(object.keywordSearchableProfileCustomAttributes[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Tenant message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @static
                         * @param {google.cloud.talent.v4beta1.Tenant} message Tenant
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Tenant.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.keywordSearchableProfileCustomAttributes = [];
                            if (options.defaults) {
                                object.name = "";
                                object.externalId = "";
                                object.usageType = options.enums === String ? "DATA_USAGE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.usageType != null && message.hasOwnProperty("usageType"))
                                object.usageType = options.enums === String ? $root.google.cloud.talent.v4beta1.Tenant.DataUsageType[message.usageType] : message.usageType;
                            if (message.keywordSearchableProfileCustomAttributes && message.keywordSearchableProfileCustomAttributes.length) {
                                object.keywordSearchableProfileCustomAttributes = [];
                                for (var j = 0; j < message.keywordSearchableProfileCustomAttributes.length; ++j)
                                    object.keywordSearchableProfileCustomAttributes[j] = message.keywordSearchableProfileCustomAttributes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Tenant to JSON.
                         * @function toJSON
                         * @memberof google.cloud.talent.v4beta1.Tenant
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Tenant.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * DataUsageType enum.
                         * @name google.cloud.talent.v4beta1.Tenant.DataUsageType
                         * @enum {string}
                         * @property {number} DATA_USAGE_TYPE_UNSPECIFIED=0 DATA_USAGE_TYPE_UNSPECIFIED value
                         * @property {number} AGGREGATED=1 AGGREGATED value
                         * @property {number} ISOLATED=2 ISOLATED value
                         */
                        Tenant.DataUsageType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATA_USAGE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AGGREGATED"] = 1;
                            values[valuesById[2] = "ISOLATED"] = 2;
                            return values;
                        })();
    
                        return Tenant;
                    })();
    
                    return v4beta1;
                })();
    
                return talent;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.fullyDecodeReservedExpansion = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = "";
    
                /**
                 * HttpRule put.
                 * @member {string} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = "";
    
                /**
                 * HttpRule post.
                 * @member {string} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = "";
    
                /**
                 * HttpRule delete.
                 * @member {string} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = "";
    
                /**
                 * HttpRule patch.
                 * @member {string} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = "";
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && message.hasOwnProperty("get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && message.hasOwnProperty("put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && message.hasOwnProperty("post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && message.hasOwnProperty("delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && message.hasOwnProperty("patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && message.hasOwnProperty("body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && message.hasOwnProperty("custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.selector = reader.string();
                            break;
                        case 2:
                            message.get = reader.string();
                            break;
                        case 3:
                            message.put = reader.string();
                            break;
                        case 4:
                            message.post = reader.string();
                            break;
                        case 5:
                            message["delete"] = reader.string();
                            break;
                        case 6:
                            message.patch = reader.string();
                            break;
                        case 8:
                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                            break;
                        case 7:
                            message.body = reader.string();
                            break;
                        case 12:
                            message.responseBody = reader.string();
                            break;
                        case 11:
                            if (!(message.additionalBindings && message.additionalBindings.length))
                                message.additionalBindings = [];
                            message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && message.hasOwnProperty("path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.kind = reader.string();
                            break;
                        case 2:
                            message.path = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {string}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                return values;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.publicDependency && message.publicDependency.length))
                                message.publicDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.publicDependency.push(reader.int32());
                            } else
                                message.publicDependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weakDependency && message.weakDependency.length))
                                message.weakDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weakDependency.push(reader.int32());
                            } else
                                message.weakDependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.messageType && message.messageType.length))
                                message.messageType = [];
                            message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nestedType && message.nestedType.length))
                                message.nestedType = [];
                            message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extensionRange && message.extensionRange.length))
                                message.extensionRange = [];
                            message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneofDecl && message.oneofDecl.length))
                                message.oneofDecl = [];
                            message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && message.hasOwnProperty("options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            case 3:
                                message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && message.hasOwnProperty("label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.typeName = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.defaultValue = reader.string();
                            break;
                        case 9:
                            message.oneofIndex = reader.int32();
                            break;
                        case 10:
                            message.jsonName = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {string}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {string}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        case 4:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.inputType = reader.string();
                            break;
                        case 3:
                            message.outputType = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.clientStreaming = reader.bool();
                            break;
                        case 6:
                            message.serverStreaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = false;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.javaPackage = reader.string();
                            break;
                        case 8:
                            message.javaOuterClassname = reader.string();
                            break;
                        case 10:
                            message.javaMultipleFiles = reader.bool();
                            break;
                        case 20:
                            message.javaGenerateEqualsAndHash = reader.bool();
                            break;
                        case 27:
                            message.javaStringCheckUtf8 = reader.bool();
                            break;
                        case 9:
                            message.optimizeFor = reader.int32();
                            break;
                        case 11:
                            message.goPackage = reader.string();
                            break;
                        case 16:
                            message.ccGenericServices = reader.bool();
                            break;
                        case 17:
                            message.javaGenericServices = reader.bool();
                            break;
                        case 18:
                            message.pyGenericServices = reader.bool();
                            break;
                        case 42:
                            message.phpGenericServices = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.ccEnableArenas = reader.bool();
                            break;
                        case 36:
                            message.objcClassPrefix = reader.string();
                            break;
                        case 37:
                            message.csharpNamespace = reader.string();
                            break;
                        case 39:
                            message.swiftPrefix = reader.string();
                            break;
                        case 40:
                            message.phpClassPrefix = reader.string();
                            break;
                        case 41:
                            message.phpNamespace = reader.string();
                            break;
                        case 44:
                            message.phpMetadataNamespace = reader.string();
                            break;
                        case 45:
                            message.rubyPackage = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = false;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {string}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.messageSetWireFormat = reader.bool();
                            break;
                        case 2:
                            message.noStandardDescriptorAccessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.mapEntry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1052:
                            if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                message[".google.api.fieldBehavior"] = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                            } else
                                message[".google.api.fieldBehavior"].push(reader.int32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {string}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {string}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allowAlias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1049:
                            message[".google.api.defaultHost"] = reader.string();
                            break;
                        case 1050:
                            message[".google.api.oauthScopes"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 34:
                            message.idempotencyLevel = reader.int32();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 72295728:
                            message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                            break;
                        case 1051:
                            if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                message[".google.api.methodSignature"] = [];
                            message[".google.api.methodSignature"].push(reader.string());
                            break;
                        case 1049:
                            message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {string}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifierValue = reader.string();
                            break;
                        case 4:
                            message.positiveIntValue = reader.uint64();
                            break;
                        case 5:
                            message.negativeIntValue = reader.int64();
                            break;
                        case 6:
                            message.doubleValue = reader.double();
                            break;
                        case 7:
                            message.stringValue = reader.bytes();
                            break;
                        case 8:
                            message.aggregateValue = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.namePart = reader.string();
                                break;
                            case 2:
                                message.isExtension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leadingComments = reader.string();
                                break;
                            case 4:
                                message.trailingComments = reader.string();
                                break;
                            case 6:
                                if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                    message.leadingDetachedComments = [];
                                message.leadingDetachedComments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.sourceFile = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.double();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.float();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.int64();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.uint64();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.uint32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return BytesValue;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.paths && message.paths.length))
                                message.paths = [];
                            message.paths.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FieldMask;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type_url = reader.string();
                            break;
                        case 2:
                            message.value = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Any;
            })();
    
            return protobuf;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && message.hasOwnProperty("year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && message.hasOwnProperty("month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && message.hasOwnProperty("day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.year = reader.int32();
                            break;
                        case 2:
                            message.month = reader.int32();
                            break;
                        case 3:
                            message.day = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Date;
            })();
    
            type.LatLng = (function() {
    
                /**
                 * Properties of a LatLng.
                 * @memberof google.type
                 * @interface ILatLng
                 * @property {number|null} [latitude] LatLng latitude
                 * @property {number|null} [longitude] LatLng longitude
                 */
    
                /**
                 * Constructs a new LatLng.
                 * @memberof google.type
                 * @classdesc Represents a LatLng.
                 * @implements ILatLng
                 * @constructor
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 */
                function LatLng(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * LatLng latitude.
                 * @member {number} latitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.latitude = 0;
    
                /**
                 * LatLng longitude.
                 * @member {number} longitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.longitude = 0;
    
                /**
                 * Creates a new LatLng instance using the specified properties.
                 * @function create
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 * @returns {google.type.LatLng} LatLng instance
                 */
                LatLng.create = function create(properties) {
                    return new LatLng(properties);
                };
    
                /**
                 * Encodes the specified LatLng message. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.latitude);
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.longitude);
                    return writer;
                };
    
                /**
                 * Encodes the specified LatLng message, length delimited. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.LatLng();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.latitude = reader.double();
                            break;
                        case 2:
                            message.longitude = reader.double();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a LatLng message.
                 * @function verify
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LatLng.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        if (typeof message.latitude !== "number")
                            return "latitude: number expected";
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        if (typeof message.longitude !== "number")
                            return "longitude: number expected";
                    return null;
                };
    
                /**
                 * Creates a LatLng message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.LatLng} LatLng
                 */
                LatLng.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.LatLng)
                        return object;
                    var message = new $root.google.type.LatLng();
                    if (object.latitude != null)
                        message.latitude = Number(object.latitude);
                    if (object.longitude != null)
                        message.longitude = Number(object.longitude);
                    return message;
                };
    
                /**
                 * Creates a plain object from a LatLng message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.LatLng} message LatLng
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LatLng.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.latitude = 0;
                        object.longitude = 0;
                    }
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
                    return object;
                };
    
                /**
                 * Converts this LatLng to JSON.
                 * @function toJSON
                 * @memberof google.type.LatLng
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LatLng.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return LatLng;
            })();
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && message.hasOwnProperty("units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.currencyCode = reader.string();
                            break;
                        case 2:
                            message.units = reader.int64();
                            break;
                        case 3:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Money;
            })();
    
            type.PostalAddress = (function() {
    
                /**
                 * Properties of a PostalAddress.
                 * @memberof google.type
                 * @interface IPostalAddress
                 * @property {number|null} [revision] PostalAddress revision
                 * @property {string|null} [regionCode] PostalAddress regionCode
                 * @property {string|null} [languageCode] PostalAddress languageCode
                 * @property {string|null} [postalCode] PostalAddress postalCode
                 * @property {string|null} [sortingCode] PostalAddress sortingCode
                 * @property {string|null} [administrativeArea] PostalAddress administrativeArea
                 * @property {string|null} [locality] PostalAddress locality
                 * @property {string|null} [sublocality] PostalAddress sublocality
                 * @property {Array.<string>|null} [addressLines] PostalAddress addressLines
                 * @property {Array.<string>|null} [recipients] PostalAddress recipients
                 * @property {string|null} [organization] PostalAddress organization
                 */
    
                /**
                 * Constructs a new PostalAddress.
                 * @memberof google.type
                 * @classdesc Represents a PostalAddress.
                 * @implements IPostalAddress
                 * @constructor
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 */
                function PostalAddress(properties) {
                    this.addressLines = [];
                    this.recipients = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PostalAddress revision.
                 * @member {number} revision
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.revision = 0;
    
                /**
                 * PostalAddress regionCode.
                 * @member {string} regionCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.regionCode = "";
    
                /**
                 * PostalAddress languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.languageCode = "";
    
                /**
                 * PostalAddress postalCode.
                 * @member {string} postalCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.postalCode = "";
    
                /**
                 * PostalAddress sortingCode.
                 * @member {string} sortingCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sortingCode = "";
    
                /**
                 * PostalAddress administrativeArea.
                 * @member {string} administrativeArea
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.administrativeArea = "";
    
                /**
                 * PostalAddress locality.
                 * @member {string} locality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.locality = "";
    
                /**
                 * PostalAddress sublocality.
                 * @member {string} sublocality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sublocality = "";
    
                /**
                 * PostalAddress addressLines.
                 * @member {Array.<string>} addressLines
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.addressLines = $util.emptyArray;
    
                /**
                 * PostalAddress recipients.
                 * @member {Array.<string>} recipients
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.recipients = $util.emptyArray;
    
                /**
                 * PostalAddress organization.
                 * @member {string} organization
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.organization = "";
    
                /**
                 * Creates a new PostalAddress instance using the specified properties.
                 * @function create
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 * @returns {google.type.PostalAddress} PostalAddress instance
                 */
                PostalAddress.create = function create(properties) {
                    return new PostalAddress(properties);
                };
    
                /**
                 * Encodes the specified PostalAddress message. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCode);
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.postalCode);
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.sortingCode);
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.administrativeArea);
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.locality);
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.sublocality);
                    if (message.addressLines != null && message.addressLines.length)
                        for (var i = 0; i < message.addressLines.length; ++i)
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.addressLines[i]);
                    if (message.recipients != null && message.recipients.length)
                        for (var i = 0; i < message.recipients.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.recipients[i]);
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.organization);
                    return writer;
                };
    
                /**
                 * Encodes the specified PostalAddress message, length delimited. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.PostalAddress();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.revision = reader.int32();
                            break;
                        case 2:
                            message.regionCode = reader.string();
                            break;
                        case 3:
                            message.languageCode = reader.string();
                            break;
                        case 4:
                            message.postalCode = reader.string();
                            break;
                        case 5:
                            message.sortingCode = reader.string();
                            break;
                        case 6:
                            message.administrativeArea = reader.string();
                            break;
                        case 7:
                            message.locality = reader.string();
                            break;
                        case 8:
                            message.sublocality = reader.string();
                            break;
                        case 9:
                            if (!(message.addressLines && message.addressLines.length))
                                message.addressLines = [];
                            message.addressLines.push(reader.string());
                            break;
                        case 10:
                            if (!(message.recipients && message.recipients.length))
                                message.recipients = [];
                            message.recipients.push(reader.string());
                            break;
                        case 11:
                            message.organization = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PostalAddress message.
                 * @function verify
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PostalAddress.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        if (!$util.isInteger(message.revision))
                            return "revision: integer expected";
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        if (!$util.isString(message.regionCode))
                            return "regionCode: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        if (!$util.isString(message.postalCode))
                            return "postalCode: string expected";
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        if (!$util.isString(message.sortingCode))
                            return "sortingCode: string expected";
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        if (!$util.isString(message.administrativeArea))
                            return "administrativeArea: string expected";
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        if (!$util.isString(message.locality))
                            return "locality: string expected";
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        if (!$util.isString(message.sublocality))
                            return "sublocality: string expected";
                    if (message.addressLines != null && message.hasOwnProperty("addressLines")) {
                        if (!Array.isArray(message.addressLines))
                            return "addressLines: array expected";
                        for (var i = 0; i < message.addressLines.length; ++i)
                            if (!$util.isString(message.addressLines[i]))
                                return "addressLines: string[] expected";
                    }
                    if (message.recipients != null && message.hasOwnProperty("recipients")) {
                        if (!Array.isArray(message.recipients))
                            return "recipients: array expected";
                        for (var i = 0; i < message.recipients.length; ++i)
                            if (!$util.isString(message.recipients[i]))
                                return "recipients: string[] expected";
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        if (!$util.isString(message.organization))
                            return "organization: string expected";
                    return null;
                };
    
                /**
                 * Creates a PostalAddress message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.PostalAddress} PostalAddress
                 */
                PostalAddress.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.PostalAddress)
                        return object;
                    var message = new $root.google.type.PostalAddress();
                    if (object.revision != null)
                        message.revision = object.revision | 0;
                    if (object.regionCode != null)
                        message.regionCode = String(object.regionCode);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    if (object.postalCode != null)
                        message.postalCode = String(object.postalCode);
                    if (object.sortingCode != null)
                        message.sortingCode = String(object.sortingCode);
                    if (object.administrativeArea != null)
                        message.administrativeArea = String(object.administrativeArea);
                    if (object.locality != null)
                        message.locality = String(object.locality);
                    if (object.sublocality != null)
                        message.sublocality = String(object.sublocality);
                    if (object.addressLines) {
                        if (!Array.isArray(object.addressLines))
                            throw TypeError(".google.type.PostalAddress.addressLines: array expected");
                        message.addressLines = [];
                        for (var i = 0; i < object.addressLines.length; ++i)
                            message.addressLines[i] = String(object.addressLines[i]);
                    }
                    if (object.recipients) {
                        if (!Array.isArray(object.recipients))
                            throw TypeError(".google.type.PostalAddress.recipients: array expected");
                        message.recipients = [];
                        for (var i = 0; i < object.recipients.length; ++i)
                            message.recipients[i] = String(object.recipients[i]);
                    }
                    if (object.organization != null)
                        message.organization = String(object.organization);
                    return message;
                };
    
                /**
                 * Creates a plain object from a PostalAddress message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.PostalAddress} message PostalAddress
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PostalAddress.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.addressLines = [];
                        object.recipients = [];
                    }
                    if (options.defaults) {
                        object.revision = 0;
                        object.regionCode = "";
                        object.languageCode = "";
                        object.postalCode = "";
                        object.sortingCode = "";
                        object.administrativeArea = "";
                        object.locality = "";
                        object.sublocality = "";
                        object.organization = "";
                    }
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        object.revision = message.revision;
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        object.regionCode = message.regionCode;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        object.postalCode = message.postalCode;
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        object.sortingCode = message.sortingCode;
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        object.administrativeArea = message.administrativeArea;
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        object.locality = message.locality;
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        object.sublocality = message.sublocality;
                    if (message.addressLines && message.addressLines.length) {
                        object.addressLines = [];
                        for (var j = 0; j < message.addressLines.length; ++j)
                            object.addressLines[j] = message.addressLines[j];
                    }
                    if (message.recipients && message.recipients.length) {
                        object.recipients = [];
                        for (var j = 0; j < message.recipients.length; ++j)
                            object.recipients[j] = message.recipients[j];
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = message.organization;
                    return object;
                };
    
                /**
                 * Converts this PostalAddress to JSON.
                 * @function toJSON
                 * @memberof google.type.PostalAddress
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PostalAddress.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return PostalAddress;
            })();
    
            type.TimeOfDay = (function() {
    
                /**
                 * Properties of a TimeOfDay.
                 * @memberof google.type
                 * @interface ITimeOfDay
                 * @property {number|null} [hours] TimeOfDay hours
                 * @property {number|null} [minutes] TimeOfDay minutes
                 * @property {number|null} [seconds] TimeOfDay seconds
                 * @property {number|null} [nanos] TimeOfDay nanos
                 */
    
                /**
                 * Constructs a new TimeOfDay.
                 * @memberof google.type
                 * @classdesc Represents a TimeOfDay.
                 * @implements ITimeOfDay
                 * @constructor
                 * @param {google.type.ITimeOfDay=} [properties] Properties to set
                 */
                function TimeOfDay(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * TimeOfDay hours.
                 * @member {number} hours
                 * @memberof google.type.TimeOfDay
                 * @instance
                 */
                TimeOfDay.prototype.hours = 0;
    
                /**
                 * TimeOfDay minutes.
                 * @member {number} minutes
                 * @memberof google.type.TimeOfDay
                 * @instance
                 */
                TimeOfDay.prototype.minutes = 0;
    
                /**
                 * TimeOfDay seconds.
                 * @member {number} seconds
                 * @memberof google.type.TimeOfDay
                 * @instance
                 */
                TimeOfDay.prototype.seconds = 0;
    
                /**
                 * TimeOfDay nanos.
                 * @member {number} nanos
                 * @memberof google.type.TimeOfDay
                 * @instance
                 */
                TimeOfDay.prototype.nanos = 0;
    
                /**
                 * Creates a new TimeOfDay instance using the specified properties.
                 * @function create
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {google.type.ITimeOfDay=} [properties] Properties to set
                 * @returns {google.type.TimeOfDay} TimeOfDay instance
                 */
                TimeOfDay.create = function create(properties) {
                    return new TimeOfDay(properties);
                };
    
                /**
                 * Encodes the specified TimeOfDay message. Does not implicitly {@link google.type.TimeOfDay.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {google.type.ITimeOfDay} message TimeOfDay message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeOfDay.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hours);
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.minutes);
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.seconds);
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified TimeOfDay message, length delimited. Does not implicitly {@link google.type.TimeOfDay.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {google.type.ITimeOfDay} message TimeOfDay message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeOfDay.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a TimeOfDay message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.TimeOfDay} TimeOfDay
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeOfDay.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.TimeOfDay();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.hours = reader.int32();
                            break;
                        case 2:
                            message.minutes = reader.int32();
                            break;
                        case 3:
                            message.seconds = reader.int32();
                            break;
                        case 4:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a TimeOfDay message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.TimeOfDay} TimeOfDay
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeOfDay.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a TimeOfDay message.
                 * @function verify
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeOfDay.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        if (!$util.isInteger(message.hours))
                            return "hours: integer expected";
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        if (!$util.isInteger(message.minutes))
                            return "minutes: integer expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds))
                            return "seconds: integer expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a TimeOfDay message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.TimeOfDay} TimeOfDay
                 */
                TimeOfDay.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.TimeOfDay)
                        return object;
                    var message = new $root.google.type.TimeOfDay();
                    if (object.hours != null)
                        message.hours = object.hours | 0;
                    if (object.minutes != null)
                        message.minutes = object.minutes | 0;
                    if (object.seconds != null)
                        message.seconds = object.seconds | 0;
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a TimeOfDay message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.TimeOfDay
                 * @static
                 * @param {google.type.TimeOfDay} message TimeOfDay
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeOfDay.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.hours = 0;
                        object.minutes = 0;
                        object.seconds = 0;
                        object.nanos = 0;
                    }
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        object.hours = message.hours;
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        object.minutes = message.minutes;
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        object.seconds = message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this TimeOfDay to JSON.
                 * @function toJSON
                 * @memberof google.type.TimeOfDay
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeOfDay.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return TimeOfDay;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && message.hasOwnProperty("done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && message.hasOwnProperty("error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && message.hasOwnProperty("response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.done = reader.bool();
                            break;
                        case 4:
                            message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4:
                            message.name = reader.string();
                            break;
                        case 1:
                            message.filter = reader.string();
                            break;
                        case 2:
                            message.pageSize = reader.int32();
                            break;
                        case 3:
                            message.pageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.operations && message.operations.length))
                                message.operations = [];
                            message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.nextPageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.responseType = reader.string();
                            break;
                        case 2:
                            message.metadataType = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && message.hasOwnProperty("code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && message.hasOwnProperty("message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.code = reader.int32();
                            break;
                        case 2:
                            message.message = reader.string();
                            break;
                        case 3:
                            if (!(message.details && message.details.length))
                                message.details = [];
                            message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
